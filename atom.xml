<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MYC</title>
  
  <subtitle>摆烂！！！</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-05-11T00:45:32.078Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>MYC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL</title>
    <link href="http://example.com/2024/05/11/MySQL/"/>
    <id>http://example.com/2024/05/11/MySQL/</id>
    <published>2024-05-11T00:42:00.000Z</published>
    <updated>2024-05-11T00:45:32.078Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL基础"><a href="#MySQL基础" class="headerlink" title="MySQL基础"></a><strong><em>MySQL基础</em></strong></h1><p>连接: cmd  输入  mysql -u root -p   在输入密码123456</p><h2 id="DDL-DML-DQL-DCL"><a href="#DDL-DML-DQL-DCL" class="headerlink" title="DDL,DML,DQL,DCL"></a>DDL,DML,DQL,DCL</h2><hr><h2 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h2><hr><h3 id="DDL"><a href="#DDL" class="headerlink" title="DDL:"></a>DDL:</h3><p>全称:Data Definition Language  数据定义语言,用来定义数据库对象(数据库,表,字段)</p><h4 id="DDL-基本操作"><a href="#DDL-基本操作" class="headerlink" title="DDL-基本操作"></a>DDL-基本操作</h4><h5 id="查询"><a href="#查询" class="headerlink" title="查询 :"></a>查询 :</h5><ul><li>查询所有数据库 :</li></ul><p>​        SHOW DATABASES ;</p><ul><li>查询当前数据库 :</li></ul><p>​        SELECT DATABASE() ;</p><h5 id="创建"><a href="#创建" class="headerlink" title="创建 :"></a>创建 :</h5><p>CREATE DATABASE[IF NOT EXISTS] 数据库名 [DEFAULT CHARSET 字符集] [COLLATE 排序规则] ;</p><h5 id="删除"><a href="#删除" class="headerlink" title="删除 :"></a>删除 :</h5><p>DROP DATABASE[IF EXISTS]数据库名 ;</p><h5 id="使用"><a href="#使用" class="headerlink" title="使用 :"></a>使用 :</h5><p>USE 数据库名 ;</p><h4 id="DDL-表操作"><a href="#DDL-表操作" class="headerlink" title="DDL-表操作"></a>DDL-表操作</h4><h5 id="查询-1"><a href="#查询-1" class="headerlink" title="查询 :"></a>查询 :</h5><ul><li>查询当前数据库所有表:</li></ul><p>​        SHOW TABLES;</p><ul><li>查询表结构:</li></ul><p>​        DESC 表名;</p><ul><li>查询指定表的建表语句:</li></ul><p>​        SHOW CREATE TABLE 表名;</p><h5 id="创建-1"><a href="#创建-1" class="headerlink" title="创建:"></a>创建:</h5><p>​        CREATE TABLE 表名(</p><p>​        字段1  字段1类型[COMMENT 字段1注释],</p><p>​        字段2 字段2类型[COMMENT 字段2注释],</p><p>​        字段3 字段3类型[COMMENT 字段3注释],</p><p>​        ……</p><p>​        字段n 字段n类型[COMMENT 字段n注释]</p><p>​        )[COMMENT 表注释];</p><h5 id="修改"><a href="#修改" class="headerlink" title="修改:"></a>修改:</h5><ul><li>添加字段:</li></ul><p>ALTER TABLE 表名 ADD 字段名 类型(长度)[COMMENT 注释] [约束];</p><ul><li>修改字段:</li></ul><p>​        1&gt;    修改数据类型</p><p>​                ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</p><p>​        2&gt;    修改字段名和字段类型</p><p>​                ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</p><ul><li><p>删除字段</p><p>​        ALTER TABLE 表名 DROP 字段名;</p></li><li><p>修改表名</p><p>​        ALTER TABLE 表名 RENAME TO 新表名;</p></li></ul><h5 id="删除-1"><a href="#删除-1" class="headerlink" title="删除:"></a>删除:</h5><ul><li><p>删除表:</p><p>​        DROP TABLE[IF EXISTS] 表名;</p></li><li><p>删除指定表,并重新创建该表:</p><p>​        TRUNCATE TABLE 表名;</p></li></ul><h5 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型:"></a>数据类型:</h5><ul><li>数值类型:    </li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小</th><th style="text-align:center">有符号(SIGNED)范围</th><th style="text-align:center">无符号(UNSIGNED)范围</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">TINYINT</td><td style="text-align:center">1 byte</td><td style="text-align:center">(-128，127)</td><td style="text-align:center">(0，255)</td><td style="text-align:center">小整数值</td></tr><tr><td style="text-align:center">SMALLINT</td><td style="text-align:center">2 bytes</td><td style="text-align:center">(-32768，32767)</td><td style="text-align:center">(0，65535)</td><td style="text-align:center">大整数值</td></tr><tr><td style="text-align:center">MEDIUMINT</td><td style="text-align:center">3 bytes</td><td style="text-align:center">(-8388608，8388607)</td><td style="text-align:center">(0，16777215)</td><td style="text-align:center">大整数值</td></tr><tr><td style="text-align:center">INT或INTEGER</td><td style="text-align:center">4 bytes</td><td style="text-align:center">(-2147483648，2147483647)</td><td style="text-align:center">(0，4294967295)</td><td style="text-align:center">大整数值</td></tr><tr><td style="text-align:center">BIGINT</td><td style="text-align:center">8 bytes</td><td style="text-align:center">(-2~63，2~63-1)</td><td style="text-align:center">(0，2~64-1)</td><td style="text-align:center">极大整数值</td></tr><tr><td style="text-align:center">FLOAT</td><td style="text-align:center">4 bytes</td><td style="text-align:center">(-3.402823466 E+38，3.402823466351 E+38)</td><td style="text-align:center">0 和 (1.175494351 E-38，3.402823466 E+38)</td><td style="text-align:center">单精度浮点数值</td></tr><tr><td style="text-align:center">DOUBLE</td><td style="text-align:center">8 bytes</td><td style="text-align:center">(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td><td style="text-align:center">0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td><td style="text-align:center">双精度浮点数值</td></tr><tr><td style="text-align:center">DECIMAL</td><td style="text-align:center"></td><td style="text-align:center">依赖于M(精度)和D(标度)的值</td><td style="text-align:center">依赖于M(精度)和D(标度)的值</td><td style="text-align:center">小数值(精确定点数)</td></tr></tbody></table></div><ul><li><p>123.45 精度就是5,标度就是2</p></li><li><p>字符串类型:</p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">CHAR</td><td style="text-align:center">0-255 bytes</td><td style="text-align:center">定长字符串</td></tr><tr><td style="text-align:center">VARCHAR</td><td style="text-align:center">0-65535 bytes</td><td style="text-align:center">变长字符串</td></tr><tr><td style="text-align:center">TINYBLOB</td><td style="text-align:center">0-255 bytes</td><td style="text-align:center">不超过255个字符的二进制数据</td></tr><tr><td style="text-align:center">TINYTEXT</td><td style="text-align:center">0-255 bytes</td><td style="text-align:center">短文本字符串</td></tr><tr><td style="text-align:center">BLOB</td><td style="text-align:center">0-65535 bytes</td><td style="text-align:center">二进制形式的长文本数据</td></tr><tr><td style="text-align:center">TEXT</td><td style="text-align:center">0-65535 bytes</td><td style="text-align:center">长文本数据</td></tr><tr><td style="text-align:center">MEDIUMBLOB</td><td style="text-align:center">0-16777215 bytes</td><td style="text-align:center">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:center">MEDIUMTEXT</td><td style="text-align:center">0-16777215 bytes</td><td style="text-align:center">中等长度文本数据</td></tr><tr><td style="text-align:center">LONGBLOB</td><td style="text-align:center">0-4294967295 bytes</td><td style="text-align:center">二进制形式的极大文本数据</td></tr><tr><td style="text-align:center">LONGTEXT</td><td style="text-align:center">0-4294967295 bytes</td><td style="text-align:center">极大文本数据</td></tr></tbody></table></div><ul><li>日期时间类型:</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">大小</th><th style="text-align:center">范围</th><th style="text-align:center">格式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">DATE</td><td style="text-align:center">3</td><td style="text-align:center">1000-01-01 至 9999-12-31</td><td style="text-align:center">YYYY-MM-DD</td><td style="text-align:center">日期值</td></tr><tr><td style="text-align:center">TIME</td><td style="text-align:center">3</td><td style="text-align:center">-838:59:59 至 838:59:59</td><td style="text-align:center">HH:MM: SS</td><td style="text-align:center">时间值或持续时间</td></tr><tr><td style="text-align:center">YEAR</td><td style="text-align:center">1</td><td style="text-align:center">1901 至 2155</td><td style="text-align:center">YYYY</td><td style="text-align:center">年份值</td></tr><tr><td style="text-align:center">DATETIME</td><td style="text-align:center">0</td><td style="text-align:center">1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td style="text-align:center">YYYY-MM-DD HH:MM:SS</td><td style="text-align:center">混合日期和时间值</td></tr><tr><td style="text-align:center">TIMESTAMP</td><td style="text-align:center">4</td><td style="text-align:center">1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td style="text-align:center">YYYY-MM-DD HH:MM:SS</td><td style="text-align:center">混合日期和时间值，时间戳</td></tr></tbody></table></div><hr><h3 id="DML"><a href="#DML" class="headerlink" title="DML:"></a>DML:</h3><p>全称:Data Manipulation Language 数据操作语言,用来对数据库表中的数据进行增删改</p><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据:"></a>添加数据:</h4><ul><li><p>给指定的字段添加数据</p><p>INSERT INTO 表名 (字段名1,字段名2,…) VALUES(值1,值2,…) ;</p></li><li><p>给全部的字段添加数据</p><p>INSERT INTO 表名 VALUES(值1,值2,…) ;</p></li><li><p>批量添加数据</p><p>INSERT INTO 表名(字段名1,字段名2,…) VALUES(值1,值2,…),(值1,值2,…),(值1,值2,…) ;</p><p>INSERT INTO 表名 VALUES (值1,值2,…),(值1,值2,…),(值1,值2,…) ;</p></li></ul><blockquote><p>注意!</p><ul><li>插入数据时,指定的字段顺序需要与值的顺序是一一对应的.</li><li>字符串和日期型数据应包含在引号中.</li><li>插入的数据大小,应该在字段的规定范围内.</li></ul></blockquote><h4 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据:"></a>修改数据:</h4><p>​        UPDATE 表名 SET 字段名1 = 值1,字段名2 = 值2 , …[WHERE 条件] ;</p><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据:"></a>删除数据:</h4><p>​        DELETE FROM 表名 [WHERE 条件] ;</p><blockquote><p>注意!</p><ul><li><p>DELETE 语句的条件可以有,也可以没有,如果没有条件,则会删除整张表的所有内容.</p></li><li><p>DELETE 语句不能删除某一个字段的值(可以使用UPDATE).</p></li></ul></blockquote><hr><h3 id="DQL"><a href="#DQL" class="headerlink" title="DQL:"></a>DQL:</h3><p>全称:Data Query Language 数据库查询语言,用来查询数据库中表的记录</p><h4 id="查询-2"><a href="#查询-2" class="headerlink" title="查询"></a>查询</h4><h5 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h5><ul><li><p>查询多个字段</p><p>SELECT 字段1,字段2,字段3…FROM 表名 ;</p><p>SELECT * FROM 表名 ;</p></li><li><p>设置别名</p><p>SELECT 字段1 [AS 别名1],字段2 [AS 别名2] … FROM 表名 ;</p></li><li><p>去除重复记录</p><p>SELECT DISTINCT 字段列表 FROM 表名 </p></li></ul><h5 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h5><ul><li><p>语法</p><p>SELECT 字段列表 FROM 表名 WHERE 条件列表 ;</p></li><li><p>条件</p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">比较运算符</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">大于等于</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">小于等于</td></tr><tr><td style="text-align:center">=</td><td style="text-align:center">等于</td></tr><tr><td style="text-align:center">&lt;&gt; 或 !=</td><td style="text-align:center">不等于</td></tr><tr><td style="text-align:center">BETWEEN … AND …</td><td style="text-align:center">在某个范围之内(含最小,最大值)</td></tr><tr><td style="text-align:center">IN(…)</td><td style="text-align:center">在in之后的列表中的值,多选一</td></tr><tr><td style="text-align:center">LIKE 占位符</td><td style="text-align:center">模糊匹配(_匹配单个字符,%匹配任意个字符)</td></tr><tr><td style="text-align:center">IS NULL</td><td style="text-align:center">是NULL</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">逻辑运算符</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">AND 或 &amp;&amp;</td><td style="text-align:center">并且(多个条件同时成立)</td></tr><tr><td style="text-align:center">OR 或 \</td><td style="text-align:center">\</td><td></td><td>或者(多个条件任意一个成立)</td></tr><tr><td style="text-align:center">NOT 或 !</td><td style="text-align:center">非,不是</td></tr></tbody></table></div><h5 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h5><ul><li><p>语法</p><p>SELECT 字段列表 FROM 表名 [WHERE 条件] GROUP BY 分组字段名 [HAVING 分组后过滤条件] ;</p></li></ul><ul><li><p>WHERE 与 HAVING区别</p><p>执行时机不同 : WHERE是分组之前进行过滤,不满足WHERE条件,不参与分组 ; 而HAVING是分组之后对结果进行过滤 .</p><p>判断条件不同 : WHERE不能对聚合函数进行判断,而HAVING可以 .</p></li></ul><blockquote><p>注意 !</p><ul><li>执行顺序: where &gt; 聚合函数 &gt; having .</li><li>分组之后,查询的字段一般为聚合函数和分组字段,查询其他字段无任何意义 .</li></ul></blockquote><h5 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h5><ul><li><p>语法</p><p>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1,字段2 排序方式2 ;</p></li></ul><ul><li><p>排序方式</p><p>ASC : 升序 (默认值)</p><p>DESC: 降序</p></li></ul><blockquote><p>注意 !</p><ul><li>如果是多字段排序,当第一个字段值相同时,才会根据第二个字段进行排序 .</li></ul></blockquote><h5 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h5><ul><li><p>语法</p><p>SELECT 字段列表 FROM 表名 LIMIT 起始索引,查询记录数 ;</p></li></ul><blockquote><p>注意 !</p><ul><li>起始索引从0开始,其实索引 = (查询页码 - 1) * 每页显示记录数 .</li><li>分页查询是数据库的方言,不同的数据库有不同的实现,MySQL中时LIMIT .</li><li>如果你查询的是第一页数据,起始索引可以省略,直接简写为 linit 10 .</li></ul></blockquote><h5 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h5><ul><li><p>介绍:</p><p>将一列数据作为一个整体,进行纵向计算.</p></li></ul><ul><li>常见聚合函数</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">count</td><td style="text-align:center">统计数量</td></tr><tr><td style="text-align:center">max</td><td style="text-align:center">最大值</td></tr><tr><td style="text-align:center">min</td><td style="text-align:center">最小值</td></tr><tr><td style="text-align:center">avg</td><td style="text-align:center">平均值</td></tr><tr><td style="text-align:center">sum</td><td style="text-align:center">求和</td></tr></tbody></table></div><ul><li><p>语法</p><p>SELECE 聚合函数 (字段列表) FROM 表名 ;</p></li></ul><h5 id="编写顺序"><a href="#编写顺序" class="headerlink" title="编写顺序"></a>编写顺序</h5><p>​        SELECT </p><p>​                        字段列表</p><p>​        FROM</p><p>​                        表名列表</p><p>​        WHERE</p><p>​                        条件列表</p><p>​        GROUP BY</p><p>​                        分组字段列表</p><p>​        HAVING</p><p>​                        分组后条件列表</p><p>​        ORDER BY</p><p>​                        排序字段列表</p><p>​        LIMIT</p><p>​                        分页参数</p><h5 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h5><p>​        FROM</p><p>​                        表名列表</p><p>​        WHERE</p><p>​                        条件列表</p><p>​        GROUP BY</p><p>​                        分组字段列表</p><p>​        SELECT </p><p>​                        字段列表</p><p>​        ORDER BY</p><p>​                        排序字段列表</p><p>​        LIMIT</p><p>​                        分页参数</p><p>​        </p><hr><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL:"></a>DCL:</h3><p>全称:Data Control Language 数据库控制语言,用来创建数据库用户,控制数据库的访问权限</p><h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><h5 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h5><p>​        USE mysql ;</p><p>​        SELECT * FROM user ;</p><h5 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h5><p>​        CREATE USER ‘用户名’ @ ‘主机名’  IDENIFIED BY ‘密码’ ;</p><h5 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h5><p>​        ALTER USER ‘用户名’ @ ‘主机名’ IDENIFIED  WITH  mysql_native_password BY ‘新密码’ ;</p><h5 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h5><p>​        DROP USER ‘用户名’ @ ‘主机名’ ;</p><h4 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h4><h5 id="查询权限"><a href="#查询权限" class="headerlink" title="查询权限"></a>查询权限</h5><p>​        SHOW GRANTS FOR ‘用户名’ @ ‘主机名’ ;</p><h5 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h5><p>​        GRANT 权限列表 ON 数据库名.表名 TO ‘用户名’ @ ‘主机名’ ;</p><h5 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h5><p>​        REVOKE 权限列表 ON 数据库名.表名 FROM ‘用户名’ @ ‘主机名’ ;</p><blockquote><p>注意 ! </p><ul><li>多个权限之间,使用逗号分隔</li><li>授权时,数据库名和表名可以使用 * 进行统配,代表所有 .</li></ul></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">权限</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">ALL,ALL,PRIVILEGES</td><td style="text-align:center">所有权限</td></tr><tr><td style="text-align:center">SELECT</td><td style="text-align:center">查询数据</td></tr><tr><td style="text-align:center">INLECT</td><td style="text-align:center">插入数据</td></tr><tr><td style="text-align:center">UPDATE</td><td style="text-align:center">修改数据</td></tr><tr><td style="text-align:center">DELETE</td><td style="text-align:center">删除数据</td></tr><tr><td style="text-align:center">ALTER</td><td style="text-align:center">修改表</td></tr><tr><td style="text-align:center">DROP</td><td style="text-align:center">删除数据库/表/视图</td></tr><tr><td style="text-align:center">CREATE</td><td style="text-align:center">创建数据库/表</td></tr></tbody></table></div><p>​    </p><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>函数是指一段可以直接被另一段程序调用的程序或代码</p><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><div class="table-container"><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">CONCAT(S1,S2,S3,…..Sn)</td><td style="text-align:center">字符串拼接,将S1,S2,…Sn拼接成一个字符串</td></tr><tr><td style="text-align:center">LOWER(str)</td><td style="text-align:center">将字符串str全部转为小写</td></tr><tr><td style="text-align:center">UPPER(str)</td><td style="text-align:center">将字符串str全部转为大写</td></tr><tr><td style="text-align:center">LPAD(str,n,pad)</td><td style="text-align:center">左填充,用字符串pad对str的左边进行填充,达到n个字符串长度</td></tr><tr><td style="text-align:center">RPAD(str,n,pad)</td><td style="text-align:center">左填充,用字符串pad对str的左边进行填充,达到n个字符串长度</td></tr><tr><td style="text-align:center">TRIM(str)</td><td style="text-align:center">去掉字符串头部和尾部的空格</td></tr><tr><td style="text-align:center">SUBSTRING(str,start,len)</td><td style="text-align:center">返回从字符串str从start位置起的len个长度的字符串</td></tr></tbody></table></div><ul><li>语法</li></ul><p>SELECT 函数() ;</p><hr><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><div class="table-container"><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">CEIL(x)</td><td style="text-align:center">向上取整</td></tr><tr><td style="text-align:center">FLOOR(x)</td><td style="text-align:center">向下取整</td></tr><tr><td style="text-align:center">MOD(x , y)</td><td style="text-align:center">返回X / Y 的模</td></tr><tr><td style="text-align:center">RAND()</td><td style="text-align:center">返回0~1内的随机数</td></tr><tr><td style="text-align:center">ROUND(x , y)</td><td style="text-align:center">求参数X的四舍五入的值,保留y位小数</td></tr></tbody></table></div><hr><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><div class="table-container"><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">CURDATE()</td><td style="text-align:center">返回当前日期</td></tr><tr><td style="text-align:center">CURTIME()</td><td style="text-align:center">返回当前时间</td></tr><tr><td style="text-align:center">NOW()</td><td style="text-align:center">返回当前日期和时间</td></tr><tr><td style="text-align:center">YEAR(data)</td><td style="text-align:center">获取指定date的年份</td></tr><tr><td style="text-align:center">MONTH(date)</td><td style="text-align:center">获取指定date的月份</td></tr><tr><td style="text-align:center">DAY(date)</td><td style="text-align:center">获取指定date的日期</td></tr><tr><td style="text-align:center">DATE_ADD(date,INTERVAL expr type)</td><td style="text-align:center">返回一个日期 / 时间值加上一个时间间隔expr后的时间值</td></tr><tr><td style="text-align:center">DATEDIFF(date 1, date 2)</td><td style="text-align:center">返回起始时间date 1 和结束时间data 2之间的天数</td></tr></tbody></table></div><hr><h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>流程函数也是很常用的一类函数,可以在SQL语句中实现条件筛选,从而提高语句的效率</p><div class="table-container"><table><thead><tr><th style="text-align:center">函数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">IF(value , t , f)</td><td style="text-align:center">如果value为true,则返回t,否则返回f</td></tr><tr><td style="text-align:center">IFNULL(value1, value2)</td><td style="text-align:center">如果value1不为空，返回value1，否则返回value2</td></tr><tr><td style="text-align:center">CASE WHEN [val1 ] THEN [res1] … ELSE[ default] END</td><td style="text-align:center">如果val1为true，返回res1，… 否则返回default默认值</td></tr><tr><td style="text-align:center">CASE[ expr] WHEN [val1 ] THEN [res1] … ELSE[ default] END</td><td style="text-align:center">如果expr的值等于val1，返回res1，… 否则返回default默认值</td></tr></tbody></table></div><hr><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><h3 id="常见约束"><a href="#常见约束" class="headerlink" title="常见约束"></a>常见约束</h3><ul><li>概念: 约束是作用于表中字段上的规则, 用于限制储存在表中的数据</li><li>目的: 保证数据库中数据的正确性, 有效性和完整性</li><li>分类</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">约束</th><th style="text-align:center">描述</th><th style="text-align:center">关键字</th></tr></thead><tbody><tr><td style="text-align:center">非空约束</td><td style="text-align:center">限制该字段的数据不能为null</td><td style="text-align:center">NOT NULL</td></tr><tr><td style="text-align:center">唯一约束</td><td style="text-align:center">保证该字段的所有数据都是唯一的,不重复的</td><td style="text-align:center">UNIQE</td></tr><tr><td style="text-align:center">主键约束</td><td style="text-align:center">主键是一行数据的唯一标识,要求非空且唯一</td><td style="text-align:center">PRIMARY KEY</td></tr><tr><td style="text-align:center">默认约束</td><td style="text-align:center">保存数据时,如果为指定该字段的值,则采用默认值</td><td style="text-align:center">DEFAULT</td></tr><tr><td style="text-align:center">检查约束(8.0.16版本之后)</td><td style="text-align:center">保证字段值满足某一条件</td><td style="text-align:center">CHECK</td></tr><tr><td style="text-align:center">外键约束</td><td style="text-align:center">用来让两张表的数据之间建立链接,保证数据的一致性和完整性</td><td style="text-align:center">FOREIGN KEY</td></tr></tbody></table></div><blockquote><p>注意 ! </p><ul><li>约束时作用于表中字段上的, 可以在创建表 / 修改表的时候添加约束</li><li>AUTO INCREMENT 自动增长约束</li></ul></blockquote><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><ul><li><p>概念: 外键用来让两张表的数据之间建立链接,从而保证数据的一致性和完整性 .</p></li><li><p>语法</p><p>​    ~ 添加外键</p><p>​    CREATE TABLE 表名(<br>​        字段名 数据类型</p><p>​        …</p><p>​        [CONSTRAINT[外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)</p><p>);</p><p>ALTER TABLE 表名 ADD CONSTRAINT 外铺名称 FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名) ;</p><p>~删除 / 更新行为</p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">行为</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">NO ACTION</td><td style="text-align:center">当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新。(与 RESTRICT一致)</td></tr><tr><td style="text-align:center">RESTRICT</td><td style="text-align:center">当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除 / 更新。(与 NO ACTION 一致)</td></tr><tr><td style="text-align:center">CASCADE</td><td style="text-align:center">当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有，则也删除 / 更新外键在子表中的记录。</td></tr><tr><td style="text-align:center">SET NULL</td><td style="text-align:center">当在父表中删除对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为(这就要求该外键允许取null)。</td></tr><tr><td style="text-align:center">SET DEFAULT</td><td style="text-align:center">父表有变更时，子表将外键列设置成一个默认的值(Innodb不支持)</td></tr></tbody></table></div><ul><li><p>语法</p><p>ALTER TABLE 表名 ADD CONSTRAIN 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE CASCADE ON DELETE CASCADE ;</p></li></ul><hr><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h3><ul><li><p>概述</p><p>项目开发中,在进行数据库表结构设计时,会根据业务需求及业务模块之间的关系,分析并设计表结构,由于业务之间相互关联,所一个个表结构之间也存在着各种联系,基本上分为三种 : </p><ul><li><p>一对多(多对一)</p></li><li><p>多对多</p></li><li>一对一 : 多用于单表拆分,将一张表的基础字段放在一张表中,其他详情字段放在另一张表中,以提升操作效率</li></ul></li></ul><hr><h3 id="多表查询概述"><a href="#多表查询概述" class="headerlink" title="多表查询概述"></a>多表查询概述</h3><ul><li>概述: 指从多张表中查询数据</li><li>笛卡尔积: 笛卡尔乘积是指在数学中, 两个集合A集合 和 B集合的所有组合情况.(在多表查询时 , 需要消除无效的笛卡尔积)</li></ul><hr><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>内连接查询语法:</p><ul><li><p>隐式内连接</p><p>SELECT 字段列表 FROM 表1,表2 WHERE 条件… ;</p></li><li><p>显式内连接</p><p>SELECT 字段列表 FROM 表1 [INNER] JOIN 表2 ON 连接条件… ;</p></li></ul><blockquote><p>内连接查询的时两张表交集的部分</p></blockquote><hr><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><p>外连接查询语法:</p><ul><li><p>左外连接</p><p>SELECT 字段列表 FROM 表1 LEFT [OUTER] JOIN 表2 ON 条件… ;</p><blockquote><p>先当于查询表1(左表)的所有数据 包含 表1和表2交集部分的数据</p></blockquote></li><li><p>右外链接</p><p>SELECT 字段列表 FROM 表1 RIGHT [OUTER] JOIN 表2 ON 条件 … ;</p><blockquote><p>相当于查询表2(右表)的所有数据 包含 表1和表2交集部分的数据</p></blockquote></li></ul><hr><h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><p>自连接查询语法: </p><p>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 … ;</p><p>自连接查询,可以是内连接查询,也可以是外连接查询 .</p><hr><h3 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h3><p>对于union查询,就是把多次查询的结果合并起来,形成一个新的查询结果集.</p><p>SELECT 字段列表 FROM 表A …</p><p>UNION [ALL]</p><p>SELECT 字段列表 FROM 表B ;</p><blockquote><p>对于联合查询的多张表的列数必须保持一致 , 字段类型也需要保持一致 .</p><p>union all 会将全部的数据直接合并在一起 , union会对合并之后的数据去重 .</p></blockquote><hr><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><ul><li><p>概念 : SQL语句中嵌套SELECT语句 , 称为嵌套查询 , 又称子查询 .</p><p>SELECT * FROM t1 WHERE column1 = (SELECT column1 FROM t2) ;</p></li><li><p>根据子查询的结果不同 , 分为 : </p><ul><li>标量子查询 (子查询结果为单个值)</li><li>列子查询 (子查询结果为一列)</li><li>行子查询 (子查询结果为一行)</li><li>表子查询 (子查询结果为多行多列)</li></ul></li><li><p>根据子查询的位置不同 , 分为 :</p><ul><li>WHERE之后</li><li>FROM之后</li><li>SELECT之后</li></ul></li></ul><h4 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h4><p>​    子查询返回的结果是单个值(数字 , 字符串 , 日期等) , 最简单的形式 , 这种子查询称为标量子查询</p><p>​    常用的操作符 : =  &lt;&gt;  &gt;  &gt;=  &lt;  &lt;=</p><hr><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="事务的简介"><a href="#事务的简介" class="headerlink" title="事务的简介"></a>事务的简介</h3><p>​    事务是一组操作的集合 , 他是一个不可分割的工作单位 , 事务所会把所有的操作作为一个整体一起向系统提交或撤销操作请求 , 即这些操作要么同时成功 , 要么同时失败 .</p><h3 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h3><p>方式一 :</p><ul><li><p>查看 / 设置事务的提交方式</p><p>SELECT @@autocommit ;</p><p>SET @@autocommit = 0 ;   //设置为手动提交</p></li><li><p>提交事务</p><p>COMMIT ;</p></li><li><p>回滚事务</p><p>ROLLBACK ;</p></li></ul><p>方式二 :</p><ul><li><p>开启事务</p><p>START TRANSACTION 或 BEGIN ;</p></li><li><p>提交事务</p><p>COMMIT ;</p></li><li><p>回滚事务</p><p>ROLLBACK ;</p></li></ul><h3 id="事务的四大特性"><a href="#事务的四大特性" class="headerlink" title="事务的四大特性"></a>事务的四大特性</h3><ul><li>原子性 (Atomicity) : 事务是不可分割的最小单元 , 要么全部成功 , 要么全部失败 .</li><li>一致性 (Consistency) : 事务完成时 , 必须使用所有的数据都保持一致状态 .</li><li>隔离性 (Isolation) : 数据库系统提供的隔离机制 , 保证十五在不受外部并发操作影响的独立环境下运行 .</li><li>持久性 (Durability) : 事务一旦提交或回滚 , 它对数据库中的数据的改变就是永久的 .</li></ul><h3 id="并发事务问题"><a href="#并发事务问题" class="headerlink" title="并发事务问题"></a>并发事务问题</h3><div class="table-container"><table><thead><tr><th style="text-align:center">问题</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">脏读</td><td style="text-align:center">一个事务读到另外一个事务还没有提交的数据.</td></tr><tr><td style="text-align:center">不可重复读</td><td style="text-align:center">一个事务先后读取同一条记录 , 但两次读取的数据内容不同 , 称之为不可重复读</td></tr><tr><td style="text-align:center">幻读</td><td style="text-align:center">一个事务按照条件查询数据时,没有对象的数据行,但是在插入数据时,又发现这行数据已经存在,好像出现了”幻影”.</td></tr></tbody></table></div><h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><div class="table-container"><table><thead><tr><th style="text-align:center">隔离级别</th><th style="text-align:center">脏读</th><th style="text-align:center">不可重复读</th><th style="text-align:center">幻读</th></tr></thead><tbody><tr><td style="text-align:center">Read uncommitted</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">Read committed</td><td style="text-align:center">×</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">Repeatable Read (默认)</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">Serializable</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr></tbody></table></div><ul><li><p>查看事务的隔离级别</p><p>SELECT @@TRANSACTION_ISOLATION ;</p></li><li><p>设置事务隔离级别</p><p>SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL { READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE }</p></li></ul><blockquote><p>注意 !</p><ul><li>事务的隔离级别越高  , 数据越安全 , 但是性能越低 .</li></ul></blockquote><hr><h1 id="MySQL进阶"><a href="#MySQL进阶" class="headerlink" title="MySQL进阶"></a>MySQL进阶</h1><hr><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><h3 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h3><ul><li><p>连接层 :连接池</p><p>最上层是一些客户端和连接服务 , 主要完成一些类似于连接处理 , 授权认证 , 及相关的安全方案 . 服务器也会为安全接入的每个客户端验证它所具有的操作权限 .</p></li></ul><ul><li><p>服务层 : SQL接口  解析器  查询优化器  缓存</p><p>第二层架构主要完成大多数的核心服务功能 , 如SQL接口 , 并完成缓存的查询 , SQL的分析和优化 , 部分内置函数的执行 . 所有跨存储引擎的功能也在这一层实现 , 如 过程 , 函数等 .</p></li></ul><ul><li><p>引擎层 : 可插拔存储引擎</p><p>存储引擎真正的负责了MySQL中数据的存储和提取 , 服务器通过API和存储引擎进行通信 . 不同的存储引擎具有不同的功能 , 这样我们可以根据自己的需要来选取合适的存储引擎 .</p></li></ul><ul><li><p>存储层 : 系统文件  文件和日志</p><p>主要是将数据存储在文件系统之上 , 并完成与储存引擎的交互 .</p></li></ul><h3 id="存储引擎简介"><a href="#存储引擎简介" class="headerlink" title="存储引擎简介"></a>存储引擎简介</h3><p>存储引擎就是存储数据 , 建立索引 , 跟新 / 查询数据等技术的实现方式 . 存储引擎是基于表的 , 而不是基于库的 , 所以存储引擎也可以被称为表类型 . </p><p>在创建表是,指定存储引擎</p><p>​    CREATE TABLE 表名(</p><p>​        字段1 字段1类型 [COMMENT 字段1注释]</p><p>​        ……</p><p>​        字段n 字段n类型 [COMMENT 字段n注释]</p><p>)    ENGINE = INNODB [COMMENT 表注释] ;</p><h3 id="存储引擎特点"><a href="#存储引擎特点" class="headerlink" title="存储引擎特点"></a>存储引擎特点</h3><h4 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h4><ul><li><p>介绍 :</p><p>InnoDB是一种兼顾高可靠性和高性能的通用存储引擎 , 在MySQL 5.5 之后 , InnoDB是默认的MySQL存储引擎 .</p></li><li><p>特点 :</p><p>DML操作遵循ACID模型 , 支持事务 ;</p><p>行级锁 , 提高并发访问性能 ;</p><p>支持外键 FOREIGN KEY 约束 , 保证数据的完整性和正确性 ;</p></li><li><p>文件 :</p><p>xxx.ibd:xxx代表的是表名innoDB引擎的每张表都会对应这样一个表空间文件，存储该表的表结构(frm、sdi)、数据和索引。</p><p>参数:innodb file_per table</p></li></ul><h4 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h4><ul><li><p>介绍</p><p>MyISAM是MySQL早期的默认储存引擎 .</p></li><li><p>特点</p><p>不支持事务 , 不支持外键</p><p>支持表锁 , 不支持表锁</p><p>访问速度快</p></li></ul><h4 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h4><ul><li><p>介绍</p><p>Memory引擎的表数据是存储在内存中的 , 由于受到硬件问题 , 或断电问题的影响 , 只能将这些表作为临时表或缓存使用</p></li><li><p>特点</p><p>内存存放</p><p>hash索引 (默认)</p></li><li><p>文件</p><p>xxx.sdi : 储存表结构信息</p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">特点</th><th style="text-align:center">InnoDB</th><th style="text-align:center">MyISAM</th><th style="text-align:center">Memory</th></tr></thead><tbody><tr><td style="text-align:center">存储限制</td><td style="text-align:center">64TB</td><td style="text-align:center">有</td><td style="text-align:center">有</td></tr><tr><td style="text-align:center">事务安全</td><td style="text-align:center">支持</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">锁机制</td><td style="text-align:center">行锁</td><td style="text-align:center">表锁</td><td style="text-align:center">表锁</td></tr><tr><td style="text-align:center">B+tree索引</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">Hash索引</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">全文索引</td><td style="text-align:center">支持(5.6版本之后)</td><td style="text-align:center">支持</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">空间使用</td><td style="text-align:center">高</td><td style="text-align:center">低</td><td style="text-align:center">N/A</td></tr><tr><td style="text-align:center">内存使用</td><td style="text-align:center">高</td><td style="text-align:center">低</td><td style="text-align:center">中等</td></tr><tr><td style="text-align:center">批量插入速度</td><td style="text-align:center">低</td><td style="text-align:center">高</td><td style="text-align:center">高</td></tr><tr><td style="text-align:center">支持外键</td><td style="text-align:center">支持</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table></div><h3 id="存储引擎选择"><a href="#存储引擎选择" class="headerlink" title="存储引擎选择"></a>存储引擎选择</h3><p>在选择存储引擎时 , 应该根据应用系统的特点选择合适的存储引擎 . 对于复杂的应用系统 , 还可以根据实际情况选择多种存储引擎进行组合 .</p><ul><li>InnoDB : 是MySQL的默认存储引擎 , 支持事务 ,外键 . 如果应用对事务的完整性有比较高的要求 , 在并发条件下要求数据的一致性 , 数据操作除了插入和查询之外 , 还包含很多的更新 , 删除操作 , 那么InnoDB存储引擎是比较合适的选择</li><li>MyISAM : 如果应用是以读操作和插入操作为主 , 只有很少的更新和删除操作 , 并且对事务的完整性 , 并发性要求不是很高 , 那么选择这个存储引擎是非常合适的 .</li><li>MEMORY : 将所有的数据保存在内存中 , 访问速度快 , 通常用于临时表及缓存 . MEMORY的缺陷就是对表的大小有限制 , 太大的表无法缓存在内存中 , 而且无法保障数据的安全性 .</li></ul><hr><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="索引概述"><a href="#索引概述" class="headerlink" title="索引概述"></a>索引概述</h3><ul><li><p>介绍</p><p>索引(index) 是帮助MySQL高效获取数据的数据结构(有序) . 在数据之外 , 数据库系统还维护者满足特定查找算法的数据结构 , 这些数据结构以某种方式引用 (指向) 数据 , 这样就可以在这些数据结构上实现高级查找算法 , 这种数据结构就是索引 .</p></li></ul><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><p>​    MySQL的索引是在存储引擎层实现的 , 不同的存储引擎有不同的结构 , 主要包含以下集中 :</p><div class="table-container"><table><thead><tr><th style="text-align:center">索引结构</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">B + Tree索引</td><td style="text-align:center">最常见的索引类型, 大部分引擎都支持B+ 树索引</td></tr><tr><td style="text-align:center">Hash索引</td><td style="text-align:center">底层数据结构是用哈希表实现的,只有精确匹配索引列的查询才有效,不支持范围查询</td></tr><tr><td style="text-align:center">R - tree(空间索引)</td><td style="text-align:center">空间索引是MyISAM引擎的一个特殊索引类型,主要用于地理空间数据类型,通常使用较少</td></tr><tr><td style="text-align:center">Full - text(全文索引)</td><td style="text-align:center">是一种通过建立倒排索引,快速匹配文档的方式.类似于Lucene ,Solr , ES</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th style="text-align:center">索引</th><th style="text-align:center">InnoDB</th><th style="text-align:center">MySQL</th><th style="text-align:center">Memory</th></tr></thead><tbody><tr><td style="text-align:center">B + Tree索引</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">Hash索引</td><td style="text-align:center">不支持</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">R - tree索引</td><td style="text-align:center">不支持</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr><tr><td style="text-align:center">Full - text</td><td style="text-align:center">5.6版本之后支持</td><td style="text-align:center">支持</td><td style="text-align:center">不支持</td></tr></tbody></table></div><ul><li><p>二叉树缺点</p><p>顺序插入是 , 会形成一个链表 , 查询性能大大降低 . 大数据量情况下 , 层级较深 , 检索速度慢 .</p></li><li><p>红黑树</p><p>大数据量情况下 , 层级较深 ,检索速度慢 .</p></li><li><p>B + Tree </p><p>MySQL索引数据结构对经典的B + Tree 进行了优化 . 在原B + Tree 的基础上增加了一个指向相邻叶子节点的链表指针 , 就形成了带有顺序指针的B + Tree  , 提高区间访问的性能 .</p></li><li><p>Hash</p><p>哈希索引就是采用一定的Hash算法 , 将键值换算成新的Hash值 , 映射到对应的槽位上 , 然后存储在Hash表中 .</p><p>如果两个(或多个)键值 , 映射到到一个相同槽位上 , 他们就产生了Hash冲突 (也成为Hash碰撞) , 可以通过链表来解决 .</p><ul><li><p>特点</p><p>Hash索引只能用于对等比较(= , in) , 不支持范围查询 (between , &gt; , &lt; , …)</p><p>无法利用索引完成排序操作</p><p>查询效率高 , 通常只需要一次检索就可以了 , 效率通常要高于B + Tree索引</p></li></ul><p>在MySQL中 , 支持Hash索引的是Memory引擎 , 而InnoDB中具有自适应Hash功能 , Hash索引是存储引擎根据B + Tree索引在指定条件下自动构建的 .</p></li></ul><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><div class="table-container"><table><thead><tr><th style="text-align:center">分类</th><th style="text-align:center">含义</th><th style="text-align:center">特点</th><th style="text-align:center">关键字</th></tr></thead><tbody><tr><td style="text-align:center">主键索引</td><td style="text-align:center">针对于表中主键创建的索引</td><td style="text-align:center">默认自动创建,只能有一个</td><td style="text-align:center">PRIMARY</td></tr><tr><td style="text-align:center">唯一索引</td><td style="text-align:center">避免同一个表中某数据列中的值重复</td><td style="text-align:center">可以有多个</td><td style="text-align:center">UNIQUE</td></tr><tr><td style="text-align:center">常规索引</td><td style="text-align:center">快速定位特定数据</td><td style="text-align:center">可以有多个</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">全文索引</td><td style="text-align:center">全文索引查找的是文本中的关键词 , 而不是比较索引中的值</td><td style="text-align:center">可以有多个</td><td style="text-align:center">FULLTEXT</td></tr></tbody></table></div><p>在InnoDB存储引擎中 , 根据索引的存储形式 , 又可以分为以下两种 : </p><div class="table-container"><table><thead><tr><th style="text-align:center">分类</th><th style="text-align:center">含义</th><th style="text-align:center">特点</th></tr></thead><tbody><tr><td style="text-align:center">聚集索引</td><td style="text-align:center">将数据存储与索引放到了一块,索引结构的叶子节点保存了行数据</td><td style="text-align:center">必须有,而且只有一个</td></tr><tr><td style="text-align:center">二级索引</td><td style="text-align:center">将数据与索引分开储存,索引结构的叶子节点关联的是对应的主键</td><td style="text-align:center">可以存在多个</td></tr></tbody></table></div><p>救济索引选取规则:</p><ul><li>如果存在主键 , 主键索引就是聚集索引</li><li>如果不存在主键 , 将使用第一唯一 (UNIQUE) 索引作为聚集索引</li><li>如果表没有主键 , 或没有合适的唯一索引 , 则InnoDB会自动生成一个rowid作为隐藏的聚集索引 .</li></ul><h3 id="索引语法"><a href="#索引语法" class="headerlink" title="索引语法"></a>索引语法</h3><ul><li><p>创建索引</p><p>CREATE [UNIQUE | FULLTEXT] INDEX index_name ON table_name (index_col_name,…) ;</p></li><li><p>查看索引</p><p>SHOW INDEX FROM table_name ;</p></li><li><p>删除索引</p><p>DROP INDEX index_name ON table_name ;</p></li></ul><h3 id="SQL性能分析"><a href="#SQL性能分析" class="headerlink" title="SQL性能分析"></a>SQL性能分析</h3><ul><li><p>SQL执行频率</p><p>MySQL客户端连接成功后 , 通过show [session  |  global ]  status 命令可以提供服务器状态信息 . 通过加入下指令 , 可以查看当前数据库的INSERT , UPDATE , DELETE , SELECT的访问频次 ;</p><p>SHOW  GLOBAL  STAUS  LIKE  ‘Com<em>_</em>‘ ;</p></li><li><p>慢查询日志</p><p>慢查询日志记录了所有执行时间超过指定参数 (long_quert_time , 单位 : 秒 , 默认10秒) 的所有SQL语句的日志</p><p>MySQL的慢查询日志默认没有开启 , 需要在MySQL的配置文件 (/etc/my.cnf) 中配置如下信息 :</p></li></ul><blockquote><h1 id="开启MySQL慢日志查询开关"><a href="#开启MySQL慢日志查询开关" class="headerlink" title="开启MySQL慢日志查询开关"></a>开启MySQL慢日志查询开关</h1><p>slow_query_log = 1</p><h1 id="设置慢日志的时间为2秒-SQL语句执行时间超过2秒-就会视为慢查询-记录慢查询日志"><a href="#设置慢日志的时间为2秒-SQL语句执行时间超过2秒-就会视为慢查询-记录慢查询日志" class="headerlink" title="设置慢日志的时间为2秒 ,SQL语句执行时间超过2秒 , 就会视为慢查询 , 记录慢查询日志"></a>设置慢日志的时间为2秒 ,SQL语句执行时间超过2秒 , 就会视为慢查询 , 记录慢查询日志</h1><p>long_quert_time = 2</p></blockquote><p>  配置完毕之后，通过以下指令重新启动MySQL服务器进行测试，查看慢日志文件中记录的信息 var/lib/mysq/localhost-slow.log.</p><ul><li><p>profile详情</p><p>show profiles 能够在做SQL优化时帮助我们了解时间都耗费到哪里去了。通过have profiling参数，能够看到当前MySQL是否支持<br>profile操作:</p><p>SELECT @@have_profiling ;</p><p>执行一系列的业务SQL的操作 , 然后通过如下指令查看指令的执行耗时:</p><blockquote><h1 id="查看每一条SQL的好事基本情况"><a href="#查看每一条SQL的好事基本情况" class="headerlink" title="查看每一条SQL的好事基本情况"></a>查看每一条SQL的好事基本情况</h1><p>show profiles ;</p><h1 id="查看指定query-id的SQL语句各个阶段的耗时情况"><a href="#查看指定query-id的SQL语句各个阶段的耗时情况" class="headerlink" title="查看指定query_id的SQL语句各个阶段的耗时情况"></a>查看指定query_id的SQL语句各个阶段的耗时情况</h1><p>show profile for query query_id ;</p><h1 id="查看指定query-id的SQL语句CPU的使用情况"><a href="#查看指定query-id的SQL语句CPU的使用情况" class="headerlink" title="查看指定query_id的SQL语句CPU的使用情况"></a>查看指定query_id的SQL语句CPU的使用情况</h1><p>show profile cpu for query query_id ;</p></blockquote></li><li><p>explain执行计划</p><p>EXPLAIN或者DESC命令获取MySQL如何执行SELECT语句的信息 , 包括在SELECT语句执行过程中表如何连接和连接的顺序</p><p>语法</p><blockquote><h1 id="直接在select语句之前加上关键字-explain-desc"><a href="#直接在select语句之前加上关键字-explain-desc" class="headerlink" title="直接在select语句之前加上关键字 explain / desc"></a>直接在select语句之前加上关键字 explain / desc</h1><p>EXPLAIN  SELECT  字段列表  FROM  表名  WHERE  条件  ;</p></blockquote><p>EXPLAIN 执行计划个字段含义 :</p><ul><li><p>ID</p><p>select查询的序列号 , 表示查询中执行sekect子句或者是操作表的顺序(id相同 , 执行顺序从上到下 ; id不同 , 值越大 , 越先执行) ;</p></li><li><p>select type</p><p>表示SELECT 的类型，常见的取值有 SIMPLE(简单表，即不使用表连接或者子查询)、PRIMARY(主查询，即外层的查询)UNION(UNION 中的第二个或者后面的查询语句)、SUBQUERY(SELECT/WHERE之后包含了子查询)等</p></li><li><p>type</p><p>表示连接类型，性能由好到差的连接类型为NULL、System、const、eg ref、ref、range、index、all。</p></li><li><p>possible key</p><p>显示可能应用在这张表上的索引 , 一个或多个 .</p></li><li><p>Key</p><p>实际使用的索引 , 如果为NULL , 则没有使用索引 .</p></li><li><p>Ken_len</p><p>表示索引中使用的字节数 , 该值为索引字段最大可能长度 , 并非实际使用长度 , 再不损失精确性的前提下 , 长度越短越好.</p></li><li><p>rows</p><p>MySQL认为必须要执行查询的行数 , 在innodb引擎的表中 , 是一个估计值 , 可能并不总是准确的 .</p></li><li><p>filtered</p><p>表示返回结果的行数占所需读取行数的百分比 , filtered的值越大越好 .</p></li></ul></li></ul><h3 id="索引使用"><a href="#索引使用" class="headerlink" title="索引使用"></a>索引使用</h3><ul><li><p>验证索引效率</p><ul><li><p>在未建立索引之前 , 执行如下SQL语句 , 查看SQL的耗时 . </p><blockquote><p>SELECT * FEOM tb_sku WHERE sn =  ‘100000003145001’ ;</p></blockquote></li><li><p>针对字段创建索引</p><blockquote><p>create  index  idx_sku _sn on tb_sku(sn) ;</p></blockquote></li><li><p>然后再次执行相同的SQL语句 , 再次查看SQL的耗时</p><blockquote><p>SELECT * FEOM tb_sku WHERE sn =  ‘100000003145001’ ;</p></blockquote></li></ul></li><li><p>最左前缀法则</p><p>如果索引了多列 (联合索引) , 要遵守最左前缀法则 . 最左前缀法则值得是查询从索引的最左列开始 , 并且不跳过索引中的列 . </p><p>如果跳跃某一列 , 索引将部分失效 (后面的字段索引失效)</p></li><li><p>范围查询</p><p>联合索引中 , 出现范围查询 ( &gt; ,  &lt; ) , 范围查询右侧的列索引失效</p></li><li><p>索引列运算</p><p>不要再索引列上进行运算操作 , 索引将失效 .</p><p>explain select * from tb_user where substring(phone , 10 ,2) =  ‘ 15 ‘ ;</p></li><li><p>字符串不加引号</p><p>字符串类型字段使用时 , 不加引号 ,索引将失效</p></li><li><p>模糊查询</p><p>如果仅仅是尾部模糊匹配 , 索引不会失效 . 如果是头部模糊匹配 ,索引失效.</p></li><li><p>or连接的条件</p><p>用or分割开的条件,如果or前的条件中的列有索引 ,而后面的列中没有索引 , 那么涉及的索引都不会被用到 .</p></li></ul><ul><li><p>SQL提示</p><p>SQL提示 , 是优化数据库的一个重要手段 , 简单来说 , 就是在SQL语句中加入一些认为的提示来达到优化操作的目的.</p><p>use index :</p><blockquote><p>explain select * from tb_user use index (idx_use_pro) where profession = ‘软件工程’ ;</p></blockquote><p>ignore index :</p><blockquote><p>explain select * from tb_user ignore index (idx_user_pro) where profession = ‘软件工程’ ;</p></blockquote></li><li><p>force index :</p><blockquote><p>explain select * from tb_user force index (idx_user_pro) where profession = ‘软件工程’ ;</p></blockquote></li><li><p>覆盖索引</p><p>尽量使用覆盖索引 (查询使用了索引, 并且需要返回的列 , 在该索引中已经全部能够找到) , 减少select  * .</p><blockquote><p>explain select id, profession from tb user where profession = 软件工程’ and age = 31 and status = ‘0’ ;</p><p>explain select id,profession,age, status from tb user where profession = 软件工程’and age = 31 and status = ‘0’  ;</p><p>explain select id,profession,age, status, name from tb user where profession = 件’and age = 31 and status = ‘0’ ;</p><p>explain select * from tb user where profession =软工程’ and age =31 and status = ‘0’ ;</p></blockquote></li></ul><blockquote><p>using index condition : 查找使用了索引, 但是需要回表查询数据</p><p>using where ;using index : 查找使用了索引 , 但是需要的数据都在索引列中能找到 , 所以不需要回表查询数据</p></blockquote><ul><li><p>前缀索引</p><p>当前字段类型为字符串 (varcher , text等 )时 , 有时候需要索引很长的字符串 , 这会让索引变得很大 , 查询时 , 浪费大量的磁盘IO, 影响查询效率 . 此时可以只将字符串的一部分前缀 , 建立索引 , 这样可以大大节约索引空间 , 从而提高索引效率 .</p><ul><li><p>语法:</p><blockquote><p>create index idx_xxxx on table_name(column (n) );</p></blockquote></li><li><p>前缀长度</p><p>可以根据索引的选择性来决定 , 而选择性是指不重复的索引值 (基数) 和数据表的记录总数的比值 , 索引选择性越高则查询效率越高 , 唯一索引的选择性是 1 , 这是最好的索引选择性 , 性能也是最好的 .</p><blockquote><p>select count (distinct email) / count (*) from tb_user ;</p><p>select count (distinct substring (email , 1 , 5)) / count (*) from tb_user ;</p></blockquote></li></ul></li><li><p>单列索引与联合索引</p><p>单列索引 : 即一个索引只包含单个列 .</p><p>联合索引 : 即一个索引包含了多个列 .</p><p>在业务场景中 , 如果存在多个查询条件 , 考虑针对于查询字段建立索引时 , 建议建立联合索引 , 而非单列索引 . </p><ul><li><p>单列索引情况 : </p><blockquote><p>explain select id , phone , name from tb_user where phone = ‘17799990010’ and name = ‘韩信’ ;</p></blockquote></li></ul><p>多条件查询时 , MySQL优化器会评估那个字段的索引效率更高 , 会选择该索引完成本次查询 .</p></li></ul><h3 id="索引设计原则"><a href="#索引设计原则" class="headerlink" title="索引设计原则"></a>索引设计原则</h3><p>1.针对数据量较大 , 并且查询比较频繁的表建立索引</p><p>2.针对于常作为查询条件(where) , 排序(order by) , 分组(group by) 操作的字段建立索引</p><p>3.尽量选择区分度高的列作为索引 , 尽量建立唯一索引 , 区分度越高 , 使用索引的效率越高</p><p>4.如果时字符串类型的字段 , 字段的长度较长 , 可以针对于字段的特点 , 建立前缀索引</p><p>5.尽量使用联合索引 , 减少单列索引 , 查询时 , 联合索引很多时候可以覆盖索引 , 节省存储空间 , 避免回表 , 提高查询效率</p><p>6.要控制索引的数量 , 索引并不是多多益善 , 索引越多维护索引结构的代价也就越大 , 会影响增删改的效率</p><p>7.如果索引列不能储存NULL值 , 请在创建表时使用NOT NULL约束它 . 当优化器知道每列是否包含NULL值时 , 它可以更好地确定哪个索         引最有效地用于查询 .</p><hr><h2 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><ul><li><p>insert优化</p><ul><li><p>批量插入</p><blockquote><p>Insert into tb_test balues(1, ‘TOM’) , (2 , ‘CAT’) , (3 , ‘JERRY’) ;</p></blockquote></li><li><p>手动提交事务</p><blockquote><p>start transaction ;</p><p>insert into tb_test values (1, ‘TOM’) , (2 , ‘CAT’) , (3 , ‘JERRY’) ;</p><p>insert into tb_test values (4, ‘TOM’) , (5 , ‘CAT’) , (6 , ‘JERRY’) ;</p><p>insert into tb_test values (7, ‘TOM’) , (8 , ‘CAT’) , (9 , ‘JERRY’) ;</p><p>commit ;</p></blockquote></li><li><p>主键顺序插入</p><blockquote><p>主键乱序插入 : 0    1    9    21    88    2    4    15    89    5    7    3</p><p>主键顺序插入 : 1    2    3    4    5    7    8    9    15    21    88    89</p></blockquote></li></ul></li></ul><ul><li><p>大批量插入数据</p><p>如果一次性需要插入大批量数据 , 使用insert语句插入性能较低 , 此时可以使用MySQL数据库提供的load指令进行插入 . </p><blockquote><h1 id="客户端连接服务端时-加上参数-—local-infile"><a href="#客户端连接服务端时-加上参数-—local-infile" class="headerlink" title="客户端连接服务端时 , 加上参数 —local-infile"></a>客户端连接服务端时 , 加上参数 —local-infile</h1><p>mysql —local-infile -u root -p ;</p><h1 id="设置全局参数local-infile为1-开启从本地加载文件导入数据的开关"><a href="#设置全局参数local-infile为1-开启从本地加载文件导入数据的开关" class="headerlink" title="设置全局参数local_infile为1 , 开启从本地加载文件导入数据的开关"></a>设置全局参数local_infile为1 , 开启从本地加载文件导入数据的开关</h1><p>set global local_infile = 1 ;</p><h1 id="执行load指令将准备好的数据-加载到表结构中"><a href="#执行load指令将准备好的数据-加载到表结构中" class="headerlink" title="执行load指令将准备好的数据 , 加载到表结构中"></a>执行load指令将准备好的数据 , 加载到表结构中</h1><p>load data local infile ‘/root/sql1.log’ into table ‘tb_user’ fuelds terminated by ‘,’ lines terminated by ‘\n’ ;</p></blockquote><p>主键顺序插入性能高于乱序插入</p></li></ul><h3 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h3><ul><li><p>数据组织方式</p><p>在InnoDB存储引擎中 , 表数据都是根据主键顺序组织存放的 , 这种存储方式的表称为索引组织表 (index organized table IOT).</p></li><li><p>页分裂</p><p>页可以为空 , 也可以填充一般 , 也可以填充100% . 煤业包含了2-N行数据(如果一行数据多大 , 会行溢出) , 根据主键排列 . </p></li><li><p>页合并</p><p>当删除一行记录时 , 实际上记录并没有被物理删除 , 只是记录被标记 (flaged) 为删除并且它的空间变得允许被其他记录声明使用 .</p><p>当页中删除的记录达到 MERGE_THRESHOLD (默认为页的50%) , InnoDB会开始寻找最靠近的页 (前或后) 看看是否可以将两个页合并以优化空间使用 .</p></li><li><p>主键的设计原则</p><blockquote><ul><li><p>满足业务需求的情况下 , 尽量降低主键的长度 .</p></li><li><p>插入数据时 , 尽量选择顺序插入 , 选择使用AUTO_INCREMENT自增主键</p></li><li><p>尽量给不要使用UUID做质检或者是其他自然主键 , 如身份证号</p></li><li><p>业务操作时, 避免对主键的修改</p></li></ul></blockquote></li></ul><h3 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h3><ul><li><p>.Using filesort : 通过表的索引或全表扫描 , 读取满足条件的数据行 , 然后在排序缓冲区sort buffer中完成操作排序 , 所有不是通过索引直接返回排序结果的排序都叫FileSort排序</p></li><li><p>.Using index : 通过有序索引顺序扫描直接返回有序数组 , 这种情况即为 using index , 不需要额外排序 , 操作效率高 .</p><blockquote><h1 id="没有创建索引时-根据age-phone-进行排序"><a href="#没有创建索引时-根据age-phone-进行排序" class="headerlink" title="没有创建索引时 , 根据age , phone 进行排序"></a>没有创建索引时 , 根据age , phone 进行排序</h1><p>explain select id , age , phone from tb_user order by age , phone ;</p><h1 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h1><p>create index idx_user_age_phone_aa on tb_user(age,phone);</p><h1 id="创建索引后-根据age-phone进行升序排序"><a href="#创建索引后-根据age-phone进行升序排序" class="headerlink" title="创建索引后 , 根据age , phone进行升序排序"></a>创建索引后 , 根据age , phone进行升序排序</h1><p>explain select id , age , phone from tb_user order by age , phone;</p><h1 id="创建索引后-根据age-phone进行降序排序"><a href="#创建索引后-根据age-phone进行降序排序" class="headerlink" title="创建索引后 , 根据age , phone进行降序排序"></a>创建索引后 , 根据age , phone进行降序排序</h1><p>explain select id , age , phone from tb_user order by age desc , phone desc ;</p></blockquote></li></ul><blockquote><h1 id="根据age-phone进行排序-一个升序-一个降序"><a href="#根据age-phone进行排序-一个升序-一个降序" class="headerlink" title="根据age , phone进行排序 , 一个升序 , 一个降序"></a>根据age , phone进行排序 , 一个升序 , 一个降序</h1><p>explain select id,age,phone from tb_user order by age asc , phone desc;</p><h1 id="创建索引-1"><a href="#创建索引-1" class="headerlink" title="创建索引"></a>创建索引</h1><p>create index idx_user_age-phone_ad on tb_user(age asc , phone desc);</p><h1 id="根据age-phone-进行排序-一个升序-一个降序"><a href="#根据age-phone-进行排序-一个升序-一个降序" class="headerlink" title="根据age ,phone 进行排序 一个升序 , 一个降序"></a>根据age ,phone 进行排序 一个升序 , 一个降序</h1><p>explain select id,age,phone from tb_user order by age asc , phone desc;</p><ul><li>根据排序字段建立合适的索引 , 多字段排序时 , 也遵循最左前缀法则 .</li><li>尽量使用覆盖索引</li><li>多字段排序 , 一个升序 , 一个降序 , 此时需要注意联合索引在创建时的规则(ASC/DESC)</li><li>如果不可避免的出现filesort , 大数据量排序是 , 可以适当增大排序缓冲区大小 , sort_buffer_size(默认256k)</li></ul></blockquote><h3 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h3><blockquote><h1 id="删除掉目前的联合索引idx-user-pro-age-sta"><a href="#删除掉目前的联合索引idx-user-pro-age-sta" class="headerlink" title="删除掉目前的联合索引idx user _pro age sta"></a>删除掉目前的联合索引idx user _pro age sta</h1><p>drop index idx user pro age sta on tb user;</p><h1 id="执行分组操作，根据profession字段分组"><a href="#执行分组操作，根据profession字段分组" class="headerlink" title="执行分组操作，根据profession字段分组"></a>执行分组操作，根据profession字段分组</h1><p>explain select profession , count(*) from tb user group by profession ;</p><h1 id="创建索引-2"><a href="#创建索引-2" class="headerlink" title="创建索引"></a>创建索引</h1><p>Create index idx user_pro age sta on tb user(profession , age , status);</p><h1 id="执行分组操作，根据profession字段分组-1"><a href="#执行分组操作，根据profession字段分组-1" class="headerlink" title="执行分组操作，根据profession字段分组"></a>执行分组操作，根据profession字段分组</h1><p>explain select profession , count(<em>) from tb user group by profession ;</em></p><p><em>#执行分组操作，根据profession字段分组</em></p><p><em>explain select profession , count(</em>) from tb user group by profession , age;</p></blockquote><h3 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h3><p>一个常见又非常头疼的问题就是 limit 2000000 , 10 , 此时需要MySQL排序前200010记录 , 进返回2000000 - 2000010 的记录 , 其他记录丢弃, 查询排序的代价非常大 .</p><p>优化思路 : 一般分页查询时 , 通过创建覆盖索引, 能够比较好地提高性能 , 可以通过覆盖索引加子查询形式进行优化</p><blockquote><p>explain select * from tb sku t , (select id from tb sku order by id limit 2000000,10) a where t.id = a.id;</p></blockquote><h3 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h3><blockquote><p>explain select count( * ) from tb_user ;</p></blockquote><ul><li>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高 .</li><li>InnoDB引擎就麻烦了，它执行 count(*)的时候，需要把数据一行一行地从引擎里面读出来，然后累积计数 .</li></ul><blockquote><ul><li>优化思路 : 自己计数 .</li></ul></blockquote><ul><li><p>count 的几种用法</p><blockquote><ul><li><p>count() 是一个聚合函数 , 对于返回的结果集 一一地进行判断 , 如果count函数的参数不是NULL , 累计值就加1 , 否则不加 , 最后返回累计值 .</p></li><li><p>用法: count (*) , count (主键) , count (字段) , count ( 1 ) .</p></li><li><p>InnoDB引擎会遍历整张表，把每一行的 主键id 值都取出来，返回给服务层。服务层拿到主键后，直接按行进行累加(主键不可能为nu)。</p></li><li><p>count (字段)<br>没有not nul 约束:InnoDB引会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加。有not null约束:InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加。</p></li><li><p>count (1)</p><p>InnoDB引擎遍历整张表, 但不取值 . 服务层对于返回的每一行 , 放一个数字 “ 1 “ 进去 , 直接按行进行累加 .</p></li><li><p>count( * )</p><p>InnoDB引擎并不会把全部字段取出来 , 而是专门做了优化 , 不取值 , 服务层直接按行进行累加 .</p></li></ul></blockquote><p>按照效率排序的话 , count(字段) &lt;  count(主键 id) &lt; count (1) ≈ count( <em> )  ,所以尽量使用 count(</em>)</p></li></ul><h3 id="update优化"><a href="#update优化" class="headerlink" title="update优化"></a>update优化</h3><blockquote><p>update  student set no = ‘2000100100’ where id = 1 ;</p><p>update student set no = ‘2000100105’ where name = ‘韦一笑’ ;</p></blockquote><ul><li>InnoDB的行锁是针对索引加的锁 , 不是针对记录加的锁 , 并且该索引不能失效 , 否则会从行锁升级为表锁 .</li></ul><hr><h2 id="视图-存储过程-触发器"><a href="#视图-存储过程-触发器" class="headerlink" title="视图 / 存储过程 / 触发器"></a>视图 / 存储过程 / 触发器</h2><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><ul><li><p>介绍 : </p><p>视图(View) 是一种虚拟存在的表 . 视图中的数据并不在数据库中实际存在 , 行和列数据来自定义视图的查询中使用的表 , 并且是在使用视图是动态生成的.</p><p>通俗的讲 , 视图只保存了查询的SQL逻辑 , 不保存拆线呢结果 . 所以我们在创建视图的时候 , 主要的工作就落在这条SQL查询语句上.</p></li><li><p>创建</p><blockquote><p>CREATE [OR REPLACE] VIEW 视图名称 [(列名列表)]  AS SELECT语句 [WITH [CASCADED |  LOCAL] CHECK OPTION]</p></blockquote></li><li><p>查询</p><blockquote><p>查看创建视图语句 : SHOW CREATE VIEW 视图名称 ;</p><p>查看视图数据 : SELECT * FROM 视图名称…… ;</p></blockquote></li><li><p>修改</p><blockquote><p>方式一 : CREATE [OR REPLACE] VIEW 视图名称[(列名列表)] AS SELECT语句 [WITH [CASCADED  |  LOCAL] CHECK OPTION] ;</p><p>方式二 : ALTER  VIEW  视图名称 [(列名列表) ] AS SELECT 语句 [WITH [CASCAD | LOCAL] CHECK OPTION] ;</p></blockquote></li><li><p>删除</p><blockquote><p>DROP VIEW [IF EXISTS] 视图名称  [视图名称] ;</p></blockquote></li><li><p>视图的检查选项</p><blockquote><p>当使用WITH CHRCK OPTION子句创建试图时 , MySQL会通过视图检查正在更改的每个行 , 例如 插入 , 更新 , 删除 , 以使其符合视图的定义 . MySQL允许基于另一个视图创建视图 , 他还会检查以来视图中的规则以保持一致性 . 为了确定检查的范围 ,  MySQL提供了两个选项 : CASCADED 和 LOCAL ,默认值为 CASCADED .</p></blockquote></li><li><p>视图的更新</p><ul><li><p>要使视图可以更新 , 视图中的行与基础表中的行之间必须存在一对一的关系 . 如果试图包含以下任何一项 , 则该视图不可更新 : </p><ol><li><p>聚合函数或窗口函数 ( SUM () , MIN () , MAX () , COUNT() 等)</p></li><li><p>DISTINCT</p></li><li>GROUP BY</li><li>HAVING</li><li>UNION 或者 UNION ALL</li></ol></li><li><p>作用</p><blockquote><ul><li><p>简单</p><p>视图不仅可以简化用户对数据的理解 , 也可以简化他们的操作 . 那些被经常使用的查询可以被定义为视图 , 从而使得用户不必为以后的操作每次指定全部的条件 .</p></li><li><p>安全</p><p>数据库可以授权 , 但不能授权到数据库特定行个特定的列上.通过视图用户只能查询和修改他们们所能见到的数据</p></li><li><p>数据独立</p><p>视图可以帮之用户屏蔽真实表结构变化带来的影响 .</p></li></ul></blockquote></li></ul></li></ul><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><ul><li><p>介绍</p><p>存储过程是实现经过编译并储存在数据库中的一段SQL语句的集合 , 调用存储过程可以简化应用开发人员的很多工作 , 减少数据在数据库和应用服务器之间的传输 , 对于提高数据处理的效率是有好处的 . </p><p>储存过程思想很简单 , 就是数据库SQL语言层面的代码封装与重用 .</p></li><li><p>特点</p><p>封装 , 复用</p><p>可以接收参数 , 也可以返回数据</p><p>减少网络交互 , 效率提升</p></li><li><p>创建</p><blockquote><p>CREATE PROCEDURE 存储过程名称 ([参数列表])</p><p>BEGIN</p><p>​                —-SQL语句</p><p>END ;</p></blockquote></li><li><p>调用</p><blockquote><p>CALL 名称 ([参数]) ;</p></blockquote></li><li><p>查看</p><blockquote><p>查询指定数据库的存储过程及状态信息</p><p>SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA = ‘xxx’ ;</p><p>查询某个存储过程的定义</p><p>SHOW CREATE PROCEDURE 存储过程名称 ;</p></blockquote></li><li><p>删除</p><blockquote><p>DROP PROCEDURE [IF EXISTS] 存储过程名称 ; </p></blockquote></li><li><p>变量</p><ul><li><p>系统变量</p><p>是MySQL服务器提供 , 不是用户定义的 , 属于服务器层面 . 分为全局变量 (GLOBAL) , 会话变量 (SESSION) .</p><blockquote><ul><li><p>查看系统变量</p><p>查看所有系统变量</p><p>SHOW [SESSION | GLOBAL] VARIABLES;</p><p>可以通过LIKE模糊匹配的方式查找变量</p><p>SHOW [SESSION | GLOBAL] VARIABLES LIKE ‘……’ ;</p><p>查看指定变量的值</p><p>SELECT @@[SESSION | GLOBAL] 系统变量名 ;</p></li><li><p>设置系统变量</p><blockquote><p>SET [SESSION | GLOBAL] 系统变量名 = 值 ;</p><p>SET @@[SESSION | GLOBAL] 系统变量名 = 值 ;</p></blockquote></li></ul></blockquote></li><li><p>用户自定义变量</p><p>是用户根据需要自己定义的变量 , 用户变量不用提前声明 , 在用的时候直接用 “@变量名” 使用就可以 . 其作用域为当前连接.</p><blockquote><ul><li><p>赋值</p><blockquote><p>SET @var_name = expr [,@var_name = expr]… ;</p><p>SET @var_name := expr [,@var_name := expr]… ;</p><p>SELECT @var_name := expr [,@var_name := expr]… ;</p><p>SELECT  字段名 INTO @var_name FROM 表名 ;</p></blockquote></li><li><p>使用</p><blockquote><p>SELECT @var_name ;</p></blockquote></li><li><p>注意</p><blockquote><p>用户定义的变量无需对其进行声明或初始化 , 只不过获取到的值为NULL.</p></blockquote></li></ul></blockquote></li><li><p>局部变量</p><p>是跟据需要定义的在局部生效的变量 , 访问之前 , 需要DECLARE声明 . 可以用作储存过程内的局部变量和输入参数 , 局部变量的范围是在其内生命的BEGIN … END 块 .</p><blockquote><ul><li><p>声明</p><blockquote><p>DECLARE 变量名 变量类型 [DEFAULT…] ;</p></blockquote><p>变量类型就是数据库字段类型 : INT , BIGNT , CHAR  , VARCHAR  ,  DATE  ,  TIME等.</p></li></ul></blockquote></li><li><p>if</p><blockquote><ul><li><p>语法: </p><p>IF 条件1 THEN</p><p>​            …</p><p>ELSEIF 条件2 THEN        —-可选</p><p>​            …</p><p>ELSE                                —-可选</p><p>​            …</p><p>END IF;</p></li></ul></blockquote></li><li><p>参数</p><p>| 类型  |                     含义                      | 备注 |<br>| :—-: | :—————————————————————-: | :—: |<br>|  IN   |   该类参数作为输入 , 也就是需要调用时传入值   | 默认 |<br>|  OUT  | 该类参数作为输入 , 也就是该参数可以作为返回值 |      |<br>| INOUT |    即可以作为输入参数 , 也可以作为输出参数    |      |</p><p>用法</p><blockquote><p>CREATE PROCEDURE 存储过程名称 ([IN / OUT  /  INOUT  参数名  参数类型])</p><p>BEGIN</p><p>​            —-SQL语句</p><p>END ;</p></blockquote></li><li><p>case</p><blockquote><ul><li><p>语法一 </p><p>CASE case_value</p><p>​            WHEN when_value1 THEN statement_list1</p><p>​            [WHEN when_value2 THEN statement_list2]…</p><p>​            [ELSE statement_list]</p><p>END CASE ;</p></li><li><p>语法二</p><p>CASE</p><p>​        WHEN search_condition1 THEN statement_list1</p><p>​        [WHEN search_condition2 THEN statement_list2]…</p><p>​        [ELSE statement_list]</p><p>END CASE ;</p></li></ul></blockquote></li><li><p>while</p><p>while 循环是有条件的循环控制语句 . 满足条件后 , 再执行循环体中的 SQL 语句 , 具体语法为 :</p><blockquote><h1 id="先判定条件-如果条件为true-则执行逻辑-否则-不执行逻辑"><a href="#先判定条件-如果条件为true-则执行逻辑-否则-不执行逻辑" class="headerlink" title="先判定条件  , 如果条件为true , 则执行逻辑 , 否则 , 不执行逻辑"></a>先判定条件  , 如果条件为true , 则执行逻辑 , 否则 , 不执行逻辑</h1><p>WHILE 条件 DO</p><p>​            SQL 逻辑…</p><p>END WHILE ;</p></blockquote></li><li><p>repeat </p><p>repeat是有条件的循环控制语句 , 当满足条件的时候退出循环 . 具体语法为:</p><blockquote><h1 id="先执行一次逻辑-然后判定逻辑是否满足-如果满足-则退出-如果不满足-则继续下一次循环"><a href="#先执行一次逻辑-然后判定逻辑是否满足-如果满足-则退出-如果不满足-则继续下一次循环" class="headerlink" title="先执行一次逻辑 , 然后判定逻辑是否满足 , 如果满足 , 则退出 , 如果不满足 , 则继续下一次循环"></a>先执行一次逻辑 , 然后判定逻辑是否满足 , 如果满足 , 则退出 , 如果不满足 , 则继续下一次循环</h1><p>REPRAT </p><p>​        SQL逻辑…</p><p>​        UNTIL 条件</p><p>END REPEAT ;</p></blockquote></li><li><p>loop</p><p>loop实现简单的循环, 如果不在SQL逻辑中增加推出循环的条件 , 可以采用其来实现简单的死循环 . LOOP可以配合以下两个语句使用:</p><blockquote><p>LEAVE : 配合循环使用, 退出循环</p><p>ITERATE : 必须用在循环中 , 作用是跳过当前循环剩下的语句 , 直接进入下一次循环.</p><p> [begin_label : ] LOOP</p><p> ​            SQL逻辑…</p><p> END LOOP [end_label] ;</p><p>LEAVE lable; —-退出指定标记的循环体</p><p>ITERTE lable; —-直接进入下一次循环</p></blockquote></li><li><p>游标</p><p>游标 (CURSOR) 是用来存储查询结果集的数据类型  , 在存储过程和函数中可以使用游标对结果集进行循环的处理 . 游标的使用包括游标的声明 , OPEN , FETCH 和 CLOSE , 其语法分别如下 :</p><blockquote><ul><li><p>声明游标</p><p>DECLARE 游标名称 CURSOR FOR 查询语句 ;</p></li><li><p>打开游标</p><p>OPEN 游标名称 ;</p></li><li><p>获取游标记录</p><p>FETCH 游标名称 INTO 变量 [, 变量] ;</p></li><li><p>关闭游标</p><p>CLOSE 游标名称 ;</p></li></ul></blockquote></li><li><p>条件处理程序</p><p>条件处理程序 (Handler) 可以用来定义在流程控制结构执行过程中遇到问题时相应的处理步骤 . 具体语法为:</p><blockquote><p>DECLARE  handler_actionHANDLER FOR condition_value [, condition_value] … statement ;</p><p>handler_action</p><p>​        CONTINUE : 继续执行当前程序</p><p>​        EXIT : 终止执行当前程序</p><p>condition_value</p><p>​        SQLSTATE sqlstate_value : 状态码, 如02000</p><p>​        SQLWARNING : 所有以01开头的SQLSTATE代码的简写</p><p>​        NOT FOUND: 所有以02开头的SQLSTATE代码的简写</p><p>​        SQLEXCEPTION : 所有没有别SQLWARNING 或 NOT FOUND 捕获的SQLSTATE代码的简写</p></blockquote></li></ul></li></ul><h3 id="存储函数"><a href="#存储函数" class="headerlink" title="存储函数"></a>存储函数</h3><p>存储函数是有返回值的存储过程 , 存储函数的参数只能是IN类型的 . 具体语法如下 :</p><blockquote><p>CREATE FUNICTION 存储函数名称 ([参数列表])</p><p>RETURNS type [characteristic …]</p><p>BEGIN</p><p>​        —SQL语句</p><p>​        RETURN…;</p><p>END;</p><p>characteristic说明 : </p><ul><li>DETERMINISTIC : 相同的输出参数总是产生相同的结果</li><li>NO SQL : 不包含SQL语句 .</li><li>READS SQL DATA : 包含读取数据的语句 , 但不包含写入数据的语句 .</li></ul></blockquote><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><ul><li><p>介绍</p><p>触发器时与表有关的数据库对象 , 指在insert / update / delete 之前或之后 , 出发并执行触发器中定义的SQL语句集合 . 触发器的这种特性可以协助应用在数据库端确保数据的完整性 , 日志记录 , 数据校验等操作 . </p><p>使用别名OLD 和 NEW 来引用触发器中发生变化的记录内容 , 这与其它的数据库是相似的 . 现在触发器还只支持行级触发 , 不支持语句级触发 .</p><p>|   触发器类型   |                       NEW 和 OLD                       |<br>| :——————: | :——————————————————————————: |<br>| INSERT型触发器 |             NEW 表示将要或者已经新增的数据             |<br>| UPDATE型触发器 | OLD表示修改之前的数据 , NEW 表示将要或已经修改后的数据 |<br>| DELETE型触发器 |             OLD 表示将要或者已经删除的数据             |</p></li><li><p>语法</p><blockquote><ul><li><p>创建</p><p>CREATE TRIGGER trigger_name</p><p>BEFORE/AFTER INSERT/UPDATE/DELETE</p><p>ON tbl_name FOR EACH ROW  —行级触发器</p><p>BEGIN</p><p>​        tigger_shmt;</p><p>END ;</p></li></ul><hr><ul><li><p>查看</p><p>SHOW TRIGGERS ;</p></li></ul><hr><ul><li><p>删除</p><p>DROP TRIGGER [schema_name.]trigger_name ; —-如果没有指定schema_name , 默认为当前数据库</p></li></ul></blockquote></li></ul><hr><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>介绍</p><p>锁是计算机协调多个进程或线程并发访问某一资源的机制  . 在数据库中 , 除传统的计算资源 (CPU , RAM , I / O)的征用以外 , 数据也是一种供许多用户共享的资源 . 如何保证数据并发访问的一致性 , 有效性是所有数据库必须解决的一个问题 ,所冲突也是影响数据库并发访问性能的一个重要因素 . 从这个角度来说 , 锁对数据库而言显得尤其重要 , 也更加复杂 .</p></li><li><p>分类</p><p>M有SQL中的锁 , 按照锁的力度分  , 分为以下三类 :</p><ol><li>全局锁 : 锁定数据库中的所有表 .</li><li>表级锁 : 每次操作锁住整张表 .</li><li>行级锁 : 每次操作锁住对应的行数据 .</li></ol></li></ul><h3 id="全局锁"><a href="#全局锁" class="headerlink" title="全局锁"></a>全局锁</h3><ul><li><p>介绍<br>全局锁就是对整个数据库实例加锁 , 加锁后整个实例就处于只读状态, 后续的DML的语句 , DLL语句 , 已经更新操作的事务提交语句都将被堵塞 .</p><p>其典型的使用场景是做全库的逻辑备份 , 对所有的表进行锁定 , 从而获取一致性视图 , 保证数据的完整性 .</p></li><li><p>特点</p><p>数据库中加全局锁 , 是一个比较重要的操作 , 存在以下问题 :</p><ol><li>如果在主库上备份 , 那么在备份期间都不能执行更新 , 业务基本上就得停摆 .</li><li>如果在从库上备份 , 那么在备份期间从库不能执行主库同步过来的二进制日志 (binlog) , 会导致主从延迟 .</li></ol></li></ul><blockquote><ul><li><p>在InnoDB引擎中 , 我们可以在备份时加上参数 —single-transaction参数来完成不加锁的一致性数据备份</p><p>mysqldump —single-transaction -u root - p 123456 要备份的数据库 &gt; 备份名</p></li></ul></blockquote><h3 id="表级锁"><a href="#表级锁" class="headerlink" title="表级锁"></a>表级锁</h3><ul><li><p>介绍</p><p>表级锁 , 每次操作锁住整张表 . 锁定力度大 , 发生冲突的概率最高 , 并发性最低 . 应用在MyISAM , InnoDB , BDB 等存储引擎中 .</p></li></ul><p>  对于表级锁 , 主要分为以下三类 :</p><ol><li>表锁</li><li>元数据锁 (meta data lock , MDL)</li><li>意向锁</li></ol><ul><li><p>表锁</p><p>对于表锁 ,分为两类:</p><ol><li>表共享读锁 (read lock)</li><li>表独占写锁 (write lock)</li></ol></li></ul><p>  语法</p><ol><li>加锁 : lock tables 表名… read /write .</li><li>释放锁 : unlock tables / 客户端断开连接 .</li></ol><ul><li><p>元数据锁 (meta data lock , MDL)</p><p>MDL加锁过程是系统自动控制 , 无需显示使用 , 在访问一张表的同时会自动加上 . MDL锁主要作用是维护表元数据的数据一致性</p></li><li><p>意向锁</p><p>为了避免DML在执行时 , 加的行锁与表锁的冲突 , 在InnoDB引擎中引入了意向锁 , 使得表锁不用检查每行数据是否加锁 , 使用意向锁来减少表锁的检查 . </p></li></ul><ol><li>意向共享锁 (IS) : 与表锁共享锁 ( read ) 兼容 , 与表锁排他锁 ( write ) 互斥</li><li>意向排他锁 (IX) : 与表锁共享锁 ( read ) 及排他锁( write ) 都互斥 . 意向锁之间不会互斥 .</li></ol><p>  可以通过以下SQL , 查看意向锁及行锁的加锁情况: </p><blockquote><p>select object_schema , object_name , index_name , lock_type , lock_mode , lock_data from performance_schema.data_locks ;</p></blockquote><h3 id="行级锁"><a href="#行级锁" class="headerlink" title="行级锁"></a>行级锁</h3><ul><li><p>介绍</p><p>行级锁 , 每次操作所住对应的行数据 . 锁定粒度最小 , 发生锁冲突的改率最低 ,并发度最高 , 应用在InnoDB存储引擎中 .</p><p>InnoDB的数据是基于索引组织的 , 行锁是通过对索引上的索引项加锁来实现的 , 而不是对记录加的锁 . 对于行级锁 , 主要分为三类 :</p><blockquote><ol><li>行锁 (Record Lock) :锁定单个行记录的锁 , 防止其他事务对此进行update和delete . 在RC , RR 隔离级别下都支持 .</li><li>间隙锁 (Gap Lock) : 锁定索引记录间隙 ( 不含该记录 ) , 确保索引记录间隙不变 , 防止其他食物在这个间隙进行insert , 产生幻读 . 在RR隔离级别下都支持 .</li><li>临键锁 (Next-Key Lock) : 行锁和间隙锁组合 , 同时锁住数据 , 并锁住数据前面的间隙Gap . 在RR隔离级别下支持 .</li></ol></blockquote></li><li><p>行锁</p><p>InnoDB实现了以下两种类型的行锁 : </p><ol><li>共享锁 (S) : 允许一个事务去读一行 , 组织其他事务获得相同数据集的排他锁 .</li><li>排他锁 (X) : 允许获取排他锁的事务更新数据 , 阻止其他事务获得相同数据集的共享锁和排他锁 .</li></ol><p>| 当前锁类型 \ 请求锁类型 | S (共享锁) | X (排他锁) |<br>| :——————————-: | :————: | :————: |<br>|        S(共享锁)        |    兼容    |    冲突    |<br>|        X(排他锁)        |    冲突    |    冲突    |</p><p>|             SQL             |  行锁类型  |                   说明                   |<br>| :————————————-: | :————: | :———————————————————: |<br>|          INSERT…          |   排他锁   |                 自动加锁                 |<br>|          UPDATE…          |   排他锁   |                 自动加锁                 |<br>|          DELETE…          |   排他锁   |                 自动加锁                 |<br>|        SELECT(正常)         | 不加任何锁 |                                          |<br>| SELECT…LOCK IN SHARE MODE |   共享锁   | 需要手动在SELECT之后加LOCK IN SHARE MODE |<br>|     SELECT..FOR UPDATE      |   排他锁   |     需要手动在SELECT之后加FOR UPDATE     |</p><ul><li>行锁演示</li></ul><blockquote><p>默认情况下 , InnoDB在 REPEATABLE READ 事务隔离级别运行 , InnoDB使用next-key 锁进行搜索和索引扫描 , 防止幻读</p><ol><li>针对唯一索引进行检索时 , 对已存在的记录进行等值匹配时 , 将会自动优化为行锁</li><li>InnoDB的行锁是针对于索引加的锁 , 不通过索引条件检索数据 , 那么InnoDB将对表中的所有记录加锁 , 此时 就会升级为表锁</li></ol></blockquote><p>可以通过一下SQL ,查看意向锁及行锁的加锁情况</p><p>select object_schema,object_name,index_name,lock_type,lock_mode,lock_data from perfomance_schema.data_locks;</p></li><li><p>间隙锁 / 临键锁-演示</p><p>默认情况下 , InnoDB在 REPEATABLE READ 事务隔离级别运行 , InnoDB使用next-key锁进行搜索和索引扫描 , 防止幻读 .</p><ol><li>索引上的等值查询 (唯一索引) , 给不存在的记录枷锁时 , 优化为间隙锁 .</li><li>索引上的等值查询 (普通索引) , 向右遍历时最后一个值不满足查询需求时 , nex-key lock 退化为间隙锁 .</li><li>索引上的范围查询 (唯一索引) — 会访问到不满足条件的第一个值为止 .</li></ol><blockquote><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>间隙锁唯一目的是防止其他事务插入间隙 . 间隙锁可以共存 , 一个事务采用的间隙锁不会阻止另一个事务在同一个间隙锁上采用间隙锁</p></blockquote></li></ul><hr><h2 id="InnoDB引擎"><a href="#InnoDB引擎" class="headerlink" title="InnoDB引擎"></a>InnoDB引擎</h2><h3 id="逻辑存储结构"><a href="#逻辑存储结构" class="headerlink" title="逻辑存储结构"></a>逻辑存储结构</h3><ul><li>表空间 (ibd文件)，一个mysql实例可以对应多个表空间，用于存储记录、索引等数据.</li><li>段，分为数据段(Leafnode segment)、索引段(Non-leaf node segment)、回滚段(Rolback segment)，InnoDB是索引组织表，数据段就是B+树的叶子节点，索引段即为B+树的非叶子节点。段用来管理多个Extent(区)。</li><li>区，表空间的单元结构，每个区的大小为1M。默认情况下，InnoDB存储引擎页大小为16K，即一个区中一共有64个连续的页。</li><li>页，是lnnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，innoDB 存储引警每次从磁盘申请 4-5个区。</li><li>行，InnoDB 存储引擎数据是按行进行存放的。</li><li>Trx id: 每次对某条记录进行改动时，都会把对应的事务id赋值给trx id隐藏列。<br>Rol pointer: 每次对某条引记录进行改动时，都会把目的版本写入到undo日志中，然后这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息，</li></ul><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>MySOL5.5 版本开始，默认使用lnnoDB存储引肇，它擅长事务处理，具有崩溃恢复特性，在日常开发中使用非常广泛。下面是InnoDB架构图，左侧为内存结构，右侧为磁盘结构。</p><ul><li><p>内存架构</p><blockquote><ul><li><p>Buffer Pool: 缓冲池是主内存中的一个区域，里面可以缓存磁盘上经常操作的真实数据，在执行增删改查操作时，先操作缓冲池中的数据(若缓冲池没有数据，则从磁盘加载并缓存)，然后再以一定频率刷新到磁盘，从而减少磁盘10，加快处理速度</p></li><li><p>缓冲池以Page页为单位，底层采用链表数据结构管理Page。根据状态，将Page分为三种类型</p><ul><li>free page:空闲page，未被使用。</li><li>clean page:被使用page，数据没有被修改过</li><li>dirty page: 脏页，被使用page，数据被修改过，也中数据与磁盘的数据产生了不一致</li></ul></li><li><p>Change Buffer: 更改缓冲区(针对于非唯一二级索引页)，在执行DML语句时，如果这些数据Page没有在Buffer Pool中，不会直接操作磁盘，而会将数据变更存在更改缓冲区Change Buffer 中，在未来数据被读取时，再将数据合并恢复到Buffer Pool中，再将合并后的数据刷新到磁盘中。</p></li><li><p>Change Buffer的意义是什么?<br>与聚集索引不同，二级索引通常是非唯一的，并且以相对随机的顺序插入二级索引。同样，删除和更新可能会影响索引树中不相邻的二级索引页，如果每一次都操作磁盘，会造成大量的磁盘10。有了ChangeBuffer之后，我们可以在缓冲池中进行合并处理，减少磁盘IO。</p></li><li><p>Adaptive Hash lndex: 自适应hash索引，用于优化对Buffer Pool数据的查询。InnoDB存储引警会监控对表上各索引页的查询，如果观察到hash索引可以提升速度，则建立hash索引，称之为自适应hash索引。</p></li><li><p>自适应哈希索引，无需人工干预，是系统根据情况自动完成。</p></li></ul><p>参数:adaptive hash index</p><ul><li>Log Buffer: 日志缓冲区，用来保存要写入到磁盘中的log日志数据 (redo log、undo log)，默认大小为 16MB，日志缓冲区的日志会定期刷新到磁盘中。如果需要更新、插入或删除许多行的事务，增加日志缓冲区的大小可以节省磁盘 1/0<br>参数:<br>innodb log_buffer_size: 缓冲区大小<br>innodb flush log_at trx commit: 日志刷新到磁盘时机</li></ul></blockquote></li></ul><ul><li><p>磁盘结构</p><blockquote><ul><li><p>System Tablespace: 系统表空间是更改缓冲区的存储区域。如果表是在系统表空间而不是每个表文件或通用表空间中创建的，它也可能包含表和索引数据。(在MySQL5.x版本中还包含lnnoDB数据字典、undolog等)<br>参数:innodb data file_path</p></li><li><p>File-Per-Table Tablespaces:每个表的文件表空间包含单个InnoDB表的数据和索引，并存储在文件系统上的单个数据文件中<br>参数:innodb file per_table</p></li><li><p>GeneralTablespaces: 通用表空间，需要通过CREATE TABLESPACE 语法创建通用表空间，在创建表时，可以指定该表空间。</p><blockquote><p>CREATE TABLESPACE XXXX ADD</p><p>DATAFILE ‘file_name’</p><p>ENGINE =engine_name;</p></blockquote></li><li><p>Doublewrite Buffer Files: 双写缓冲区，innoDB引警将数据页从Buffer Pool刷新到磁盘前，先将数据页写入双写缓冲区文件中，便于系统异常时恢复数据.</p></li><li><p>Redo Log: 重做日志，是用来实现事务的持久性。该日志文件由两部分组成:重做日志缓冲(redo log buffer)以及重做日志文件(redo log),前者是在内存中，后者在磁盘中。当事务提交之后会把所有修改信息都会存到该日志中,用于在刷新脏页到磁盘时,发生错误时,进行数据恢复使用。</p></li></ul></blockquote></li><li><p>后台线程</p><blockquote><ul><li><p>Master Thread<br>核心后台线程，负责调度其他线程，还负责将缓冲池中的数据异步刷新到磁盘中,保持数据的一致性还包括脏页的刷新、合并插入缓存、undo页的回收。</p></li><li><p>I0 Thread<br>在InnoDB存储引擎中大量使用了AIO来处理IO请求,这样可以极大地提高数据库的性能，而I0Thread主要负责这些IO请求的回调。</p><p>|       线程类型       | 默认个数 |             职责             |<br>| :—————————: | :———: | :—————————————: |<br>|     Read thread      |    4     |          负责读操作          |<br>|     Write thread     |    4     |          负责写操作          |<br>|      Log thread      |    1     |  负责将日志缓冲区刷新到磁盘  |<br>| Insert buffer thread |    1     | 负责将写缓冲区内容刷新到磁盘 |</p></li><li><p>Purge Thread</p><p>主要用来回收事务已经提交了的undo log , 在事务提交之后 , undo log可能不用了 , 就用它来回收 .</p></li><li><p>Page Cleaner Thread</p><p>协助 Master Thread 刷新脏页到磁盘的线程 , 它可以减轻Master Thread的工作压力 , 减少阻塞 .</p></li></ul></blockquote></li></ul><h3 id="事务原理"><a href="#事务原理" class="headerlink" title="事务原理"></a>事务原理</h3><ul><li><p>事务</p><p>事务是一组操作的集合 , 他是一个不可分割的工作单位 , 事务会把所有的操作作为一个整体一起像系统提交或撤销操作请求 , 即这些操作要么同时成功 , 要么同时失败 . </p></li><li><p>特性</p><p>原子性 ( Atomicity ) : 事务时不可分割的最小操作单元 , 要么全部成功 , 要么全部失败 .</p><p>一致性  (Consistency) : 事务完成时 , 必须使用所有i的数据都保持一致状态 .</p><p>隔离性 ( Isolation ) : 数据库系统提供的隔离机制 , 保证事务在不受外部并发操作影响的独立环境下运行 .</p><p>持久性 ( Durability ) : 事务一旦提交或回滚, 他对数据库中的数据的改变就是永久的 .</p></li><li><p>原子性</p><blockquote><ul><li><p>redo log</p><p>重做日志 , 记录的是事务提交时的数据页的物理修改 , 是用来实现事务的持久性 .</p><p>该日志文件由两部分组成 : 重做日志缓冲 ( redo log buffer ) 以及重做日志文件 ( redo log file ) , 前者是在内存中 , 后者在磁盘中 . 当事务提交之后会把所有的修改信息都存到该日志文件中 , 用于再刷新脏页到磁盘 , 发生错误时 , 进行数据恢复使用 .</p></li><li><p>undo log</p><p>回滚日志 , 用于记录数据被修改前的信息 , 作用包含两个 : 提供回滚 和 MVCC (多版本并发控制) .</p><p>updo log 和 redo log记录物理日志不一样 , 它是逻辑日志 . 可以认为当delete一条记录时 , undo log 中会记录一条对应的insert记录 ，反之亦然 , 当update一条记录时，它记录一条对应相反的update记录。当执行rollback时，就可以从undolog中的逻辑记录读取到相应的内容并进行回滚。</p><p>Undo log销毁: undo log在事务执行时产生，事务提交时，并不会立即删除undo log，因为这些日志可能还用于MVCC。</p><p>Undo log存储:undo log采用段的方式进行管理和记录，存放在前面介绍的 rolback segment 回滚段中，内部包含1024个undo </p><p>log segment.</p></li></ul></blockquote></li></ul><h3 id="MVCC"><a href="#MVCC" class="headerlink" title="MVCC"></a>MVCC</h3><ul><li><p>基本概念</p><ul><li><p>当前读</p><p>读取的是记录的最新版本 , 读取时要保证其他并发事务不能修改当前记录 , 会对读取的记录进行加锁 . 对于我们日常的操作 , 如:</p><p>select…lock in share mode(共享锁) , select … for update , insert , delete(排他锁)都是一种当前读 .</p></li><li><p>快照读</p><p>简单的select ( 不加锁 ) 就是快照读 , 快照读 , 读取的是记录数据的可见版本 , 有可能是历史数据 , 不加锁 , 是非阻塞读 .</p><ul><li>Read Committed : 每次select , 都生成一个快照读 . </li><li>Repeatable Read : 开启事务后第一个select语句才是快照读的地方 .</li><li>Serializable : 快照读会退化为当前读</li></ul></li></ul></li><li><p>实现原理</p><ul><li><p>记录中的隐藏字段</p><p>|  隐藏字段   |                             含义                             |<br>| :————-: | :—————————————————————————————: |<br>|  DB_TRX_ID  | 最近修改事务ID , 记录插入这条记录或最后一次修改该记录的事务ID . |<br>| DB_ROLL_PTR | 回滚指针,指向这条记录的上一个版本 , 用于配合undo log, 指向上一个版本 |<br>|  DB_ROW_ID  |    隐藏主键, 如果表结构没有指定主键 , 将会生成该隐藏字段     |</p></li><li><p>undo log</p><p>回滚日志，在insert、update、delete的时候产生的便于数据回滚的日志。</p><p>当insert的时候，产生的undo log日志只在回滚时需要，在事务提交后，可被立即删除。</p><p>而update、delete的时候，产生的undo log日志不仅在回滚时需要，在快照读时也需要，不会立即被删除。</p><blockquote><p>不同事务或相同事务对同一条记录进行修改 , 会导致该记录的undo log生成一条记录版本链表 , 链表的头部是最新的旧记录 ,  链表尾部是最早的旧记录 .</p></blockquote></li><li><p>readview</p><p>ReadView (读视图) 是 快照读 SQL 执行时MVCC提取数据的依据 , 记录并维护系统当前活跃的事务 (未提交的) id .</p><p>ReadView中包含了四个核心字段 :</p><p>|      字段      |                         含义                          |<br>| :——————: | :—————————————————————————-: |<br>|     m_ids      |                 当前活跃的事务ID集合                  |<br>|   min_trx_id   |                    最小活跃事务ID                     |<br>|   max_trx_id   | 预分配事务ID , 当前最大事务ID + 1(因为事务ID是自增的) |<br>| creator_trx_id |                ReadView创建者的事务ID                 |</p><blockquote><p>不同的隔离级别 , 生成ReadView的时机不同 :</p><ul><li>READ COMMITTED : 在事务中每一次执行快照读时生成ReadView .</li><li>REPEATABLE READ : 仅在事务中第一次执行快照读时生成ReadView , 后续复用该ReadView</li></ul><p>RC隔离级别下 , 在事务中每一次执行快照读时生成ReadView</p><p>RR隔离级别下 , 仅在事务中第一次执行快照读时 , 生成ReadView , 后续复用该ReadView.</p></blockquote></li></ul></li></ul><hr><h2 id="MySQL管理"><a href="#MySQL管理" class="headerlink" title="MySQL管理"></a>MySQL管理</h2><h3 id="系统数据库"><a href="#系统数据库" class="headerlink" title="系统数据库"></a>系统数据库</h3><p>MySQL数据库安装完成后 , 自带了以下四个数据库 , 具体作用如下 : </p><div class="table-container"><table><thead><tr><th style="text-align:center">数据库</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">MySQL</td><td style="text-align:center">存储MySQL服务器正常运行所需要的各种信息 (时区、主从、用户、权限等)</td></tr><tr><td style="text-align:center">information_schema</td><td style="text-align:center">提供了访问数据库元数据的各种表和视图，包含数据库、表、字段类型及访问权限等</td></tr><tr><td style="text-align:center">performance_schema</td><td style="text-align:center">为MySQL服务器运行时状态提供了一个底层监控功能，主要用于收集数据库服务器性能参数</td></tr><tr><td style="text-align:center">sys</td><td style="text-align:center">包含了一系列方便DBA和开发人员利用 performance schema 性能数据库进行性能调优和诊断的视图</td></tr></tbody></table></div><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><ul><li><p>MySQL </p><p>该MySQL不是指MySQL服务 , 而是指MySQL的客户端工具.</p><blockquote><p>语法 :</p><p>​    MySQL [OPTIONS] [DATABASE]</p><p>选项 : </p><p>​        -u, —user = name                   #指定用户名</p><p>​        -p, —password[= name]         #指定密码</p><p>​        -h, —host = name                   #指定服务器IP或域名</p><p>​        -p, —port = port                      #指定连接端口</p><p>​        -e, —execute = name             #执行SQL语句并退出</p></blockquote><p>-e选项可以在MySQL客户端执行SQL语句 , 而不用连接到MySQL数据库在执行 , 对于一些批量处理的脚本 , 这种方式尤其方便</p><blockquote><ul><li><p>示例</p><p>mysql -u root -p 123456 db01 -e “select * from stu” ;</p></li></ul></blockquote></li><li><p>MySQLadmin</p><p>MySQLadmin是一个执行管理操作的客户端程序 . 可以用它来检查服务器的配置和当前的状态 , 创建并删除数据库等 .</p><blockquote><p>通过帮助文档查看选项</p><p>​        MySQLadmin —help</p></blockquote></li><li><p>MySQLbinlog</p><p>由于服务器生成的二进制日志文件以二进制格式保存 , 所以如果想要检查这些文本格式 , 就会使用到MySQLbinlog日志管理工具</p><blockquote><p>语法 :</p><p>​    MySQLbinlog [options] log-files1 log-files2…</p><p>选项 :<br>   -d , —database = name                                                 指定数据库名称, 只列出指定的数据库相关操作</p><p>​    -o , —offset = #                                                              忽略掉日志中的前n行命令</p><p>​    -r , -result-file = name                                                   将输出的文本格式日志输出到指定文件</p><p>​    -s , —short-form                                                            显示简单格式 , 省略到一些信息</p><p>​    —start-datatime = date1 —stop-datetime = date2         指定日期间隔内的所有日志</p><p>​    —start-position=pos1 —stop-position = pos2                指定位置间隔内的所有日志</p></blockquote></li><li><p>MySQLshow</p><p>MySQLshow客户端对象查找工具 , 用来很快地查找存在哪些数据库 , 数据库中的表 , 表中的列或者索引 .</p><blockquote><p>mysqlshow [options] [db_name [table_name [col_name]ll<br>选项 :</p><p>​            -count    显示数据库及表的统计信息 (数据库，表 均可以不指定)</p><p>​            -i            显示指定数据库或者指定表的状态信息    </p><p>示例:</p><pre><code>#查询每个数据库的表的数量及表中记录的数量</code></pre><ul><li>​    mysqlshow -uroot -p2143 —count</li></ul><p>​    #查询test库中每个表中的字段书，及行数</p><ul><li>​    mysglshow -uroot -p2143 test —count</li></ul><p>​    #查询test库中book表的详细情况</p><ul><li>​    mysqlshow -uroot -p2143 test book —count</li></ul></blockquote></li><li><p>mysqldump</p><p>mysqldump 客户端工具用来备份数据库或在不同数据库之间进行数据迁移。备份内容包含创建表，及插入表的SQL语句。</p><blockquote><p>语法:</p><pre><code>   mysaldump [options] db_name (tables)   mysaldump [options] --database/-B db1 [db2 db3....]   mysaldump [options] --all-databases/-A</code></pre><p>连接选项:</p><pre><code>   -U,--user=name                        指定用户名   -p, --password(=name]             指定密码   -h, --host=name                        指定服务器ip或域名   -P,--port-#                                 指定连接端口</code></pre><p>输出选项:</p><pre><code>   -add-drop-database                 在每个数据库创建语句前加上 drop database 语句   --add-drop-table                       在每个表创建语句前加上 drop table 语句，默认开启; 不开启(--skip-add-drop-table)   -n, --no-create-db                     不包含数据库的创建语句   -t, --no-create-info                    不包含数据表的创建语句   -d --no-data                              不包含数据   -T.--tab=name                          自动生成两个文件:一个.sgl文件，创建表结构的语句;一个.txt文件，数据文件</code></pre></blockquote></li><li><p>mysqlimport / source</p><p>mtsqlimport 是客户端数据导入工具 , 用来导入mysqldump 加 -T 参数后导出的文本文件 .</p><blockquote><p>语法 :</p><p>​                mysqlimport [options] db_name textfile1 [ textfile2 ]</p><p>示例 :</p><p>​                mysqlimport -uroot  -p2143 test/tmp/city.txt</p></blockquote><p>如果需要导入sql文件 , 可以使用 mtsql 中的 source 指令 :</p><blockquote><p>语法 : </p><p>​                source / root / xxxxx.sql</p></blockquote></li></ul><hr><h1 id="MySQL运维"><a href="#MySQL运维" class="headerlink" title="MySQL运维"></a>MySQL运维</h1><hr><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><p>错误日志时MySQL中最重要的日志之一 , 它记录了当mysqld 启动和停止时 , 以及服务器在运行过程中发生任何严重错误时的相关信息.当数据库出现任何故障导致无法整成使用时 , 建议首先查看此日志 .</p><p>该日志是默认开启的 , 存放目录 /var/log/ , 默认的日志文件名为 mysqld.log . 查看日志位置 :</p><blockquote><p>show variables like ‘%log_error%’</p></blockquote><hr><h3 id="二进制日志"><a href="#二进制日志" class="headerlink" title="二进制日志"></a>二进制日志</h3><ul><li><p>介绍</p><p>二进制日志 (BINLOG) 记录了所有的DDL (数据定义语言) 语句和DML (数据操纵语言) 语句 , 但不包括数据查询 (SELECT , SHOW)语句 .</p><p>作用 : </p><ol><li><p>灾难时的数据恢复;</p></li><li><p>MySQL的主从复制 在MySQL8版本中 , 默认二进制日志是开启着的 , 涉及到的参数如下 :</p><blockquote><p>show variables like ‘ %log_bin%’</p></blockquote></li></ol></li></ul><ul><li><p>日志格式</p><p>MySQL服务器中提供了多种格式来记录二进制日志，具体格式及特点如下:</p><p>| 日志格式  |                             含义                             |<br>| :———-: | :—————————————————————————————: |<br>| STATEMENT | 基于SQL语句的日志记录，记录的是SQL语句，对数据进行修改的SQL都会记录在日志文件中。 |<br>|    ROW    |      基于行的日志记录，记录的是每一行的数据变更。(默认)      |<br>|   MIXED   | 混合了STATEMENT和ROW两种格式，默认采用STATEMENT，在某些特殊情况下会自动切换为ROW进行记录. |</p><blockquote><p>shaw variables like ‘%binlog_formnat%’;</p></blockquote><p>由于日志是以二进制方式存储的 , 不能直接读取 , 需要通过二进制日志查询工具 mysqlbinlog 来查看 , 具体语法 :</p><blockquote><p>mysqlbinlog [参数选项] logfilename</p><p>参数选项:</p><p>​        -d           指定数据库名称 , 只列出指定的数据库相关操作 .</p><p>​        -o           忽略掉日志中的前n行命令 .</p><p>​        -v           将行事件 (数据变更) 重构为SQL语句</p><p>​        -vv         将行事件 (数据变更) 重构为SQL语句 , 并输出注释信息</p></blockquote></li><li><p>日志删除</p><p>对于比较繁忙的业务系统 , 每天生成的binlog数据巨大 , 如果长时间不清除 , 将会占用大量的磁盘空间 . 可以通过以下几种方式清理日志 :</p><p>|                       指令                       |                             含义                             |<br>| :———————————————————————: | :—————————————————————————————: |<br>|                   reset master                   | 删除全部binlog日志 , 删除之后 , 日志编号 , 将从binlog.000001重新开始 |<br>|        purge master logs to ‘binlog.<strong><strong>‘        |                 删除*</strong></strong>编号之前的所有日志                  |<br>| purge master logs before ‘yyyy-mm-dd hh24:mi:ss’ |     删除日志为”yyyy-mm-dd hh24:mi:ss”之前产生的所有日志      |</p><p>也可以在mysql的配置文件中配置二进制的过期时间 , 设置了之后 , 二进制日志过期会自动删除 .</p><blockquote><p>show variables like ‘%binlog_expire_logs_seconds%’ ;</p></blockquote></li></ul><hr><h3 id="查询日志"><a href="#查询日志" class="headerlink" title="查询日志"></a>查询日志</h3><p>查询日志中记录了客户端的所有操作语句 , 而二进制日志不包含查询数据的SQL语句 . 默认情况下 , 查询日志是未开启的 . 如果需要开启查询日志 , 可以设置以下配置</p><p>修改MySQL的配置文件 /etc/my.cnf 文件，添加如下内容:</p><blockquote><h1 id="该选项用来开启查询日志-，-可选值-0-或者1-0-代表关闭，-1代表开启-general-log-1"><a href="#该选项用来开启查询日志-，-可选值-0-或者1-0-代表关闭，-1代表开启-general-log-1" class="headerlink" title="该选项用来开启查询日志 ， 可选值 : 0 或者1;0 代表关闭， 1代表开启                                                                                  general_log=1"></a>该选项用来开启查询日志 ， 可选值 : 0 或者1;0 代表关闭， 1代表开启                                                                                  general_log=1</h1><h1 id="设置日志的文件名，如果没有指定，默认的文件名为-host-name-log-general-log-file-mysql-query-log"><a href="#设置日志的文件名，如果没有指定，默认的文件名为-host-name-log-general-log-file-mysql-query-log" class="headerlink" title="设置日志的文件名，如果没有指定，默认的文件名为 host name.log                                                           general_log_file=mysql_query.log"></a>设置日志的文件名，如果没有指定，默认的文件名为 host name.log                                                           general_log_file=mysql_query.log</h1></blockquote><hr><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录了所有执行时间超过参数 long_query_time 设置值并且扫描记录数不小于 min_examined_row_limit的所有的SQL语句的日志，默认未开启。long_query_time 默认为 10 秒，最小为0，精度可以到微秒。</p><blockquote><h1 id="慢查询日志-slow-query-log-1"><a href="#慢查询日志-slow-query-log-1" class="headerlink" title="慢查询日志                                                                                                                                                                      slow_query_log=1"></a>慢查询日志                                                                                                                                                                      slow_query_log=1</h1><h1 id="执行时间参数-long-query-time-2"><a href="#执行时间参数-long-query-time-2" class="headerlink" title="执行时间参数                                                                                                                                                           long_query_time=2"></a>执行时间参数                                                                                                                                                           long_query_time=2</h1></blockquote><p>默认情况下，不会记录管理语句，也不会记录不使用索引进行查找的查询。可以使用log slow admin statements和更改此行为 log_queries not using indexes，如下所述</p><blockquote><h1 id="记录执行较慢的管理语句"><a href="#记录执行较慢的管理语句" class="headerlink" title="记录执行较慢的管理语句"></a>记录执行较慢的管理语句</h1><p>log slow admin statements =1</p><h1 id="记录执行较慢的未使用索引的语句"><a href="#记录执行较慢的未使用索引的语句" class="headerlink" title="记录执行较慢的未使用索引的语句"></a>记录执行较慢的未使用索引的语句</h1><p>log queries not using indexes = 1</p></blockquote><hr><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>主从复制是指将主数据库的DDL 和 DML 操作通过二进制日支传导从库服务器中, 然后再从库上对这些日志重新执行 (也叫重做) , 从而使得从库和主库的数据保持同步 .</p><p>MySQL支持一台主库同时向多台从库进行复制 , 从库同时也可以作为其他从服务器的主库 , 实现链状复制 .</p><p>MySQL复制的优点主要包含以下三个方面</p><ol><li>主库出现问题 , 可以快速切换到从库提供服务 .</li><li>实现读写分离 , 降低主库的访问压力</li><li>可以在从库中执行备份 , 以避免备份期间影响主库服务</li></ol><hr><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>MySQL的主从复制原理如下 :</p><ol><li>Master 主库在事务提交时 , 会把数据变更记录在二进制日志文件 Binlog 中.</li><li>从库读取的主库的二进制日志文件 Binlog , 写入到从库的中继日志Relay Log </li><li>slave重做中继日志中的时间 , 将改变反应他自己的数据 .</li></ol><hr><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><ul><li><p>服务器准备</p><p>准备至少两台服务器</p><p>开放指定的3306端口号</p><blockquote><p>firewall-cmd —zone=public —add-port=3306/tcp -permanent</p><p>firewall-cmd —cme -reload</p></blockquote><p>关闭服务器中的防火墙</p><blockquote><p>systemctl stop firewalld</p><p>systemctl disable firewalld</p></blockquote><p>准备好服务器之后 , 在上述的服务器中分别安装好MySQL , 并完成基础的初始化准备工作 .</p></li><li><p>主库配置</p><ol><li><p>修改配置文件 /etc/my.cnf</p><blockquote><h1 id="mysql-服务ID，保证整个集群环境中唯一，取值范围-1-2-32-1，默认为1-server-id-1"><a href="#mysql-服务ID，保证整个集群环境中唯一，取值范围-1-2-32-1，默认为1-server-id-1" class="headerlink" title="mysql 服务ID，保证整个集群环境中唯一，取值范围: 1 - 2^32-1，默认为1                                                                     server-id=1"></a>mysql 服务ID，保证整个集群环境中唯一，取值范围: 1 - 2^32-1，默认为1                                                                     server-id=1</h1><h1 id="是否只读-1-代表只读-0-代表读写"><a href="#是否只读-1-代表只读-0-代表读写" class="headerlink" title="是否只读,1 代表只读,0 代表读写"></a>是否只读,1 代表只读,0 代表读写</h1><p>read-only=0</p><h1 id="忽略的数据-指不需要同步的数据库"><a href="#忽略的数据-指不需要同步的数据库" class="headerlink" title="忽略的数据,指不需要同步的数据库"></a>忽略的数据,指不需要同步的数据库</h1><h1 id="binlog-ignore-db-mysal"><a href="#binlog-ignore-db-mysal" class="headerlink" title="binlog-ignore-db=mysal"></a>binlog-ignore-db=mysal</h1><h1 id="指定同步的数据库"><a href="#指定同步的数据库" class="headerlink" title="指定同步的数据库"></a>指定同步的数据库</h1><h1 id="binlog-do-db-db01"><a href="#binlog-do-db-db01" class="headerlink" title="binlog-do-db=db01"></a>binlog-do-db=db01</h1></blockquote></li><li><p>重启MySQL服务器</p><blockquote><p>systemctl restart mysqld</p></blockquote></li><li><p>登录MySQL  , 创建远程连接的帐号 , 并授予主从复制权限</p><blockquote><h1 id="创建itcast用户，并设置密码，该用户可在任意主机连接该MySQL服务-CREATE-USER-‘itcast’-’-’-IDENTIFIED-WITH-mysal-native-password-BY-‘Root-123456’"><a href="#创建itcast用户，并设置密码，该用户可在任意主机连接该MySQL服务-CREATE-USER-‘itcast’-’-’-IDENTIFIED-WITH-mysal-native-password-BY-‘Root-123456’" class="headerlink" title="创建itcast用户，并设置密码，该用户可在任意主机连接该MySQL服务                                                                                 CREATE USER ‘itcast’@’%’ IDENTIFIED WITH mysal native password BY ‘Root@123456’ ;"></a>创建itcast用户，并设置密码，该用户可在任意主机连接该MySQL服务                                                                                 CREATE USER ‘itcast’@’%’ IDENTIFIED WITH mysal native password BY ‘Root@123456’ ;</h1><h1 id="为”itcast-’-’用户分配主从复制权限"><a href="#为”itcast-’-’用户分配主从复制权限" class="headerlink" title="为”itcast @’%’用户分配主从复制权限"></a>为”itcast @’%’用户分配主从复制权限</h1><p>GRANT REPLICATION SLAVE ON ** TO itcast @’%’ ;</p></blockquote></li><li><p>通过指令 , 查看二进制日志坐标</p><blockquote><p>show master status ;</p></blockquote></li></ol><p>字段含义说明 : </p><blockquote><p>file:         从哪个日志文件开始推送日志文件</p><p>position: 从哪个位置开始推送日志</p><p>binlog_ignore_db : 指定不需要同步的数据库</p></blockquote></li><li><p>从库配置</p><ol><li><p>修改配置文件 /etc/my.cnf</p><blockquote><h1 id="mysql-服务ID，保证整个集群环境中唯一，取值范围-1-2-32-1-和主库不一样即可-server-id-1"><a href="#mysql-服务ID，保证整个集群环境中唯一，取值范围-1-2-32-1-和主库不一样即可-server-id-1" class="headerlink" title="mysql 服务ID，保证整个集群环境中唯一，取值范围: 1 - 2^32-1, 和主库不一样即可                                                                  server-id=1"></a>mysql 服务ID，保证整个集群环境中唯一，取值范围: 1 - 2^32-1, 和主库不一样即可                                                                  server-id=1</h1><h1 id="是否只读-1-代表只读-0-代表读写-1"><a href="#是否只读-1-代表只读-0-代表读写-1" class="headerlink" title="是否只读,1 代表只读,0 代表读写"></a>是否只读,1 代表只读,0 代表读写</h1><p>read-only=0</p></blockquote></li><li><p>重新启动MySQL服务</p><blockquote><p>systemctl restart mysqld</p></blockquote></li><li><p>登录MySQL , 设置主库配置</p><blockquote><p>CHANGE REPLICATION OURCE TO SOURCE_HOST-‘xxx.xxx’,SOURCE_USER=’xxx’, SOURCE_PASSWORD-‘xxx’, SOURCE_LOG_FLE-‘xxx’, SOURCE_LOG_POS=’xxx’;</p></blockquote><p>上述是8.0.23中的语法 . 如果mysql是8.0.23之前的版本 , 执行如下sql:</p><blockquote><p>CHANGE MASTER TO MASTER_HOST = ‘xxx.xxx.xxx.xxx’ , MASTER_USER=’xxx’ , MASERT_PASSWORD = ‘xxx’,MASTER_LOG_FILE=’xxx’,MASTER_LOG-POS=xxx;</p></blockquote><p>|     参数名      |        含义        |   8.0.23之前    |<br>| :——————-: | :————————: | :——————-: |<br>|   SOURCE_HOST   |     主库IP地址     |   MASTER_HOST   |<br>|   SOURCE_USER   |  连接主库的用户名  |   MASTER_USER   |<br>| SOURCE_PASSWORD |   连接主库的密码   | MASTER_PASSWORD |<br>| SOURCE_LOG_FILE |  binlog日志文件名  | MASTER_LOG_FILE |<br>| SOURCE_LOG_POS  | binlog日志文件位置 | MASTER_LOG_POS  |</p></li><li><p>开启同步操作</p><blockquote><p>start replica ;        #8.0.22之后</p><p>start slave ;          #8.0.22之前</p></blockquote></li><li><p>查看主从同步状态</p><blockquote><p>show replica staus ;            #8.022之后</p><p>show slave status ;             #8.0.22之前</p></blockquote></li></ol><ul><li><p>测试</p><ol><li><p>在主库上创建数据库 , 表 , 并插入数据</p><blockquote><p>create database db01 ;</p><p>use db01 ;</p><p>create table tb_user(</p><p>​                        id int(11) primary key not null auto_increment ,</p><p>​                        name varchar(50) not null ,</p><p>​                        sex varchar(1)</p><p>)engine = innodb default charset = utf8mb4 ;</p><p>insert into tb_user(id , name msex) values(null , ‘Tom’ , ‘1’) , (null , ‘Trigger’ , ‘0’) , (null , ‘Dawn’ , ‘1’);</p></blockquote></li><li><p>从库中查询数据 , 验证主从是否同步</p></li></ol></li></ul></li></ul><hr><h2 id="分库分表"><a href="#分库分表" class="headerlink" title="分库分表"></a>分库分表</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li><p>问题分析</p><p>随着互联网及移动互联网的发展 , 应用系统的数据量也是成指数式增长 , 若采用单数据库进行数据储存 , 存在以下性能瓶颈:</p><ol><li>IO瓶颈 : 热点数据太多 , 数据库缓存不足 , 产生大量磁盘IO , 效率较低 . 请求数据太多 , 带宽不够 , 网络IO瓶颈 .</li><li>CPU瓶颈 : 排序 , 分组 , 连接查询 , 聚合查询 , 聚合统计等 SQL 会耗费大量的CPU资源 , 请求数太多 , CPU出现瓶颈</li></ol><blockquote><p>分库分表的中心思想都是将数据分散储存 , 使得单一数据库 / 表的数据量变小来缓解单一数据库的性能问题 , 从而达到提升数据库性能的目的 .</p></blockquote></li><li><p>拆分策略</p></li></ul><ol><li><p>垂直拆分</p><ul><li><p>垂直分库 : 以表为依据 , 根据业务将不同表拆分到不同库中.</p><p>特点 :</p><ol><li>每个表的表结构都不一样</li><li>每个库的数据也不一样</li><li>所有库的并集是全量数据</li></ol></li><li><p>垂直分表 : 以字段为依据 , 根据字段属性将不同字段拆分到不同表中</p><p>特点 :</p><ol><li>每个表的结构都不一样</li><li>每个表的数据也不一样 , 一般通过一列 (主键 / 外键) 关联</li><li>所有的表的并集是全量数据</li></ol></li></ul></li><li><p>水平拆分</p><ul><li><p>水平分库 : 以字段为依据 , 按照一定策略 , 将一个库的数据拆分到多个库中</p><p>特点 :</p><ol><li>每个库的表结构都一样</li><li>每个库的数据都不一样</li><li>所有库的并集是全量数据</li></ol></li><li><p>水平分表 : 以字段为依据 , 按照一定策略 , 将一个表的数据拆分到多个表中</p><p>特点 :</p><ol><li>每个表的表结构都一样</li><li>每个表的数据都不一样</li><li>所有表的并集是全量数据</li></ol></li></ul></li></ol><ul><li>实现技术<ul><li>shardingJDBC : 基于AOP原理 , 在应用程序中对本地执行的SQL进行拦截 , 解析 , 改写 , 路由处理 . 需要自行编码配置实现 , 之支持java语言 , 性能较高 .</li><li>MyCat : 数据库分库分表中间件 , 不用调整代码即可实现分库分表 , 支持多种语言 , 性能不及前者</li></ul></li></ul><hr><h3 id="Mycat概述"><a href="#Mycat概述" class="headerlink" title="Mycat概述"></a>Mycat概述</h3><ul><li><p>介绍</p><p>MyCat是开源的 , 活跃的 , 基于Java语言编写的MuSQL数据库中间件 . 可以像使用mysql一样来使用mycat , 对于开发人员来说根本感觉不到mycat的存在 .</p></li><li><p>优势:</p><ol><li>性能可靠稳定</li><li>强大的技术团队</li><li>体系完善</li><li>社区活跃</li></ol></li><li><p>目录结构</p><p>bin : 存放可执行文件 , 用于启动停止mycat</p><p>conf : 存放mycat的配置文件</p><p>lib : 存放mycat的项目依赖包 (jar)</p><p>logs : 存放mycat的日志文件</p></li></ul><hr><h3 id="Mycat入门"><a href="#Mycat入门" class="headerlink" title="Mycat入门"></a>Mycat入门</h3><ul><li><p>需求</p><p>由于tb_order表中数据量很大 , 磁盘IO及容量都到达了瓶颈 , 现在需要对tb_order表进行数据分片 , 分为三个数据节点 , 每一个系欸但主机位于不同的服务器上 .</p></li><li><p>环境配置</p></li><li><p>分片配置</p></li><li><p>启动服务</p><p>切换到MyCat的安装目录 , 执行如下指令 , 启动MyCat :</p><blockquote><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p>bin/mycat start</p><h1 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h1><p>bin/mycat stop</p></blockquote></li><li><p>分片测试</p><p>通过如下指令 , 就可以连接并登录MyCat</p><blockquote><p>mysql -h 192.168.200.210 -p 8066 -uroot -p123456</p></blockquote></li></ul><hr><h3 id="Mycat配置"><a href="#Mycat配置" class="headerlink" title="Mycat配置"></a>Mycat配置</h3><ul><li><p>schema.xml</p><p>schema.xml 作为 MyCat中最重要的配置文件之一 , 涵盖了MyCat的略疾苦 , 逻辑表 , 分片规则 , 分片节点 及数据源的配置.</p><p>主要包含以下三组标签 :</p><ul><li><p>schema标签</p></li><li><p>datanode标签</p></li><li><p>datahost标签</p><blockquote><ul><li><p>schema标签</p><p>schema标签用于定义MyCat示例中的逻辑库 , 一个MyCat实例中 , 可以有多个逻辑库 , 可以通过schema标签来划分不同的逻辑库 . MyCat中的逻辑库的概念 , 等同于MySQL中database概念 , 需要操作某个逻辑库下的表时 , 也需要切换逻辑库(use xxx) .</p><blockquote><ul><li>核心属性<ol><li>name :指定自定义的逻辑库库名</li><li>checkSQLschema : 在SQL语句操作时制定了数据库名称 , 执行时是否自动去除 ; ture : 自动去除 , false : 不自动去除</li><li>sqlMaxLimit : 如果未指定limit进行查询 ,列表查询模式查询多少条记录</li></ol></li></ul></blockquote></li><li><p>schema标签(table)</p><p>table标签定义了MyCat中逻辑库 schema 下的逻辑表 , 所有需要拆分的表都需要在table标签中定义 . </p><blockquote><p>核心属性:</p><ul><li>name :定义逻辑表表名 , 在该逻辑库下唯一</li><li>dataNode :定义逻辑表所属的dataNode , 该属性需要与dataNode标签中name对应; 多个dataNode逗号分隔</li><li>rule : 分片规则的名字 , 分片规则名字是在rule.xml中定义的</li><li>primaryKey : 逻辑表对真是表的主键</li><li>type :逻辑表的类型 , 目前逻辑表只有全局表和普通表 , 如果未配置 , 就是普通表 ; 全局表 , 配置为global</li></ul></blockquote></li><li><p>dataNode标签</p><p>dataNode标签中定义了MyCat中的数据节点 ,也就是我们通常说的数据分片.一个dataNode标签就是一个独立的数据分片</p><blockquote><p>核心属性 :</p><ul><li>name :定义数据节点名称</li><li>dataHost : 数据库实力主机名称, 引用自dataHost标签中name属性</li><li>database: 定义分片所需数据库</li></ul></blockquote></li><li><p>dataHost标签</p><p>该标签在MyCat逻辑库中作为底层标签存在 , 直接定义了具体的数据库实例 , 读写分离 , 心跳语句</p><blockquote><p>核心属性 :</p><ul><li>name : 唯一标识 , 供上层标签使用</li><li>maxCon / minCon : 最大连接数 / 最小连接数</li><li>balance : 负载均衡策略 , 取值 0,1,2,3</li><li>writeType : 写操作分发方式 (0: 写操作转发到第一个writeHost , 第一个挂了 ,切换到第二个 ; 1: 写操作随机分发到配置的writeHost)</li><li>dbDriver : 数据库驱动 , 支持 native , jdbc      </li></ul></blockquote></li><li><p>rule.xml</p><p>rule.xml中定义所有拆分表的规则 , 在使用过程中可以灵活的使用分片算法 , 或者对同一个分片算法使用不同的参数 , 他让分片过程可配置化 . 主要包含两类标签 : tableRule , Function .</p></li><li><p>server.xml</p><p>server.xml配置文件包含了MyCat的系统配置信息 , 主要有两个重要的标签 : system , user </p><ul><li><p>system标签</p><p>对应的系统配置项及其含义 , 参考资料</p></li><li><p>user</p><p>用户以及用户所具备的权限信息</p></li></ul></li></ul></blockquote></li></ul></li></ul><hr><h3 id="Mycat分片"><a href="#Mycat分片" class="headerlink" title="Mycat分片"></a>Mycat分片</h3><ul><li><p>垂直拆分</p><ul><li><p>场景 : 在业务系统中 , 设计一下表结构 ,但是由于用户预订单每天都会产生大量的数据 , 单台服务器的数据存储及处理能力是有限的 , 可以对数据库表进行拆分 .</p></li><li><p>准备</p><p>四台服务器</p><p>分别在三台服务器中创建数据库</p></li><li><p>配置</p></li><li><p>测试</p><p>在mycat的命令行中 , 通过source指令导入表结构 , 以及对应的数据 , 查看数据分布情况</p></li><li><p>全局表配置</p><p>属于数据字典表 ,多个业务模块中可能会遇到 , 可以将其设置为全局表 , 利于业务操作</p></li></ul></li><li><p>水平拆分</p><ul><li><p>场景</p><p>在业务系统中 , 有一张表(日志表) 业务系统每天都会产生大量的日志数据 , 单体服务器的数据存储及处理能力是有限的 , 可以对数据库表进行拆分 .</p></li><li><p>准备</p><p>四台服务器</p><p>分别在三台服务器中创建数据库</p></li><li><p>配置</p></li><li><p>测试</p></li></ul></li><li><p>分片规则-范围</p><p>根据指定的字段及其配置的范围与数据节点的对应情况 , 来决定该数据属于哪一个分片 .</p></li><li><p>分片规则-取模</p><p>根据指定的字段之与节点数量进行求模运算 , 根据运算结果 , 来决定该数据属于哪一个分片 .</p></li><li><p>分片规则-一致性hash</p><p>所谓一致性哈希 , 相同的哈希因子计算值总是被划分到相同的分区表中 , 不会因为分区节点的增加而改变原来数据的分区位置 .</p></li><li><p>分片规则-枚举</p><p>通过在配置文件中配置可能的枚举值 , 指定数据分布到不同数据集欸但上 , 本规则适用于按照省分 , 性别 , 状态拆分数据等业务 .</p></li><li><p>分片规则-应用指定</p><p>运行阶段有应用自主界定路由到哪个分片 , 直接根据字符字串(必须是数字) 计算分片号 .</p></li><li><p>分片规则-固定分片hash算法</p><p>该算法类似于十进制的求模运算 , 但是为二进制的操作 , 例如 , 去id 的二进制低10 位与1111111111 进行位 &amp; 运算</p><blockquote><p>特点: </p><ul><li>如果是求模 , 连续的值 , 分别分配到各个不同的分片 ; 但是此算法会将连续的值可能分配到相同的分片 , 降低事务处理的难度</li><li>可以均匀分配 , 也可以非均匀分配 .</li><li>分片字段必须为数字类型 .</li></ul></blockquote></li><li><p>分片规则- 字符串hash解析</p><p>截取字符串中的指定位置的子字符串 ,进行hash算法 ,算出分片 .</p></li><li><p>分片规则-按 (天) 日期分片</p></li><li><p>分片规则-自然月</p><p>使用场景为按照月份来分片, 每个自然月为一个分片 .</p></li></ul><hr><h3 id="Mycat管理及监控"><a href="#Mycat管理及监控" class="headerlink" title="Mycat管理及监控"></a>Mycat管理及监控</h3><ul><li><p>MyCat原理</p><p>解析SQL -&gt; 分片分析 -&gt; 路由分析 -&gt; 读写分离分析 -&gt; … </p><p>… &lt;- 分页处理 &lt;- 排序处理 &lt;- 聚合处理 &lt;- 结果合并</p></li><li><p>MyCat管理</p><p>Mycat默认开通2个端口 , 可以在server.xml中进行修改 . </p><ul><li><p>8066 数据访问端口 , 即进行DML 和 DDL 操作 .</p></li><li><p>9066 数据库管理端口 , 即 mycat 服务管理控制功能 , 用于管理mycat的整个集群状态</p><blockquote><p>mysql -h 192.168.200.210 -p 9066 -uroot -p123456</p></blockquote></li></ul><p>|       命令        |            含义             |<br>| :———————-: | :————————————-: |<br>|    show @@help    |  查看mycat管理工具帮助文档  |<br>|  show @@version   |       查看mycat的版本       |<br>|  reload @@config  |   重新加载mycat的配置文件   |<br>| show @@datasource |    查看mycat的数据源信息    |<br>|  show @@datanode  | 查看mycat现有的分片节点信息 |<br>| show @@threadpool |    查看mycat的线程池信息    |<br>|    show @@sql     |        查看执行的sql        |<br>|  show @@sql.sum   |      查看执行的sql统计      |</p></li><li><p>mycat - eye</p><ul><li>介绍</li><li>mycat-web (mycat-eye) 是对mycat-server提供监控服务 , 功能不局限于对 mycat-server使用 . 它通过JDBC连接对mycat , mysql监控 , 监控远程服务器(目前仅限于linux系统)的</li></ul><p>黑马程序员MySQL第185集</p></li></ul><hr><hr><h2 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MySQL基础&quot;&gt;&lt;a href=&quot;#MySQL基础&quot; class=&quot;headerlink&quot; title=&quot;MySQL基础&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;em&gt;MySQL基础&lt;/em&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;连接: cmd  输入  mysql -u ro</summary>
      
    
    
    
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>基于瑞吉外卖魔改的数据库课程设计--提瓦特外卖</title>
    <link href="http://example.com/2024/04/21/%E5%9F%BA%E4%BA%8E%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%AD%94%E6%94%B9%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1-%E6%8F%90%E7%93%A6%E7%89%B9%E5%A4%96%E5%8D%96/"/>
    <id>http://example.com/2024/04/21/%E5%9F%BA%E4%BA%8E%E7%91%9E%E5%90%89%E5%A4%96%E5%8D%96%E9%AD%94%E6%94%B9%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1-%E6%8F%90%E7%93%A6%E7%89%B9%E5%A4%96%E5%8D%96/</id>
    <published>2024-04-21T07:08:27.000Z</published>
    <updated>2024-04-28T15:29:13.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><hr><p>本文主要针对于数据库原理及其应用课程设计。<br>首先，此项目是基于<code>瑞吉外卖</code>进行改进而成的<code>原P</code>专属项目，收录了提瓦特大陆中知名的名菜（好不好吃其实我也不知道）。<br>提瓦特外卖是在瑞吉的基础上，去除了一些数据库的字段，后端同样基于<code>springboot</code>框架，但将原本的<code>过滤器</code>换成了<code>拦截器</code>（作用还是一样的），个人认为更友好一些，总之应付一个课程设计完全足够。<br>本项目前端是我的两位同学敲出来，前端页面如有需要可以联系我。<br>另外声明，本文并非以盈利为目的，如有侵权请联系作者删除。<br>好了，话不多说，直接开始整活：</p><h1 id="数据库建表相关"><a href="#数据库建表相关" class="headerlink" title="数据库建表相关"></a>数据库建表相关</h1><hr><h2 id="员工表"><a href="#员工表" class="headerlink" title="员工表"></a>员工表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">create table employee</span><br><span class="line">(</span><br><span class="line">    id          bigint auto_increment comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    name        varchar(32)   not null comment &#x27;姓名&#x27;,</span><br><span class="line">    username    varchar(32)   not null comment &#x27;用户名&#x27;,</span><br><span class="line">    password    varchar(64)   not null comment &#x27;密码&#x27;,</span><br><span class="line">    phone       varchar(11)   not null comment &#x27;手机号&#x27;,</span><br><span class="line">    sex         varchar(2)    not null comment &#x27;性别&#x27;,</span><br><span class="line">    id_number   varchar(18)   not null comment &#x27;身份证号&#x27;,</span><br><span class="line">    status      int default 1 not null comment &#x27;状态 0:禁用，1:正常&#x27;,</span><br><span class="line">    create_time datetime      not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime      not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint        not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint        not null comment &#x27;修改人&#x27;,</span><br><span class="line">    constraint idx_username</span><br><span class="line">        unique (username)</span><br><span class="line">)</span><br><span class="line">    comment &#x27;员工信息&#x27; collate = utf8_bin</span><br><span class="line">                       row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="菜品信息表"><a href="#菜品信息表" class="headerlink" title="菜品信息表"></a>菜品信息表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">create table dish</span><br><span class="line">(</span><br><span class="line">    id          bigint         not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    name        varchar(64)    not null comment &#x27;菜品名称&#x27;,</span><br><span class="line">    category_id bigint         not null comment &#x27;菜品分类id&#x27;,</span><br><span class="line">    price       decimal(10, 2) null comment &#x27;菜品价格&#x27;,</span><br><span class="line">    code        varchar(64)    not null comment &#x27;商品码&#x27;,</span><br><span class="line">    image       varchar(200)   not null comment &#x27;图片&#x27;,</span><br><span class="line">    description varchar(400)   null comment &#x27;描述信息&#x27;,</span><br><span class="line">    status      int default 1  not null comment &#x27;0 停售 1 起售&#x27;,</span><br><span class="line">    sort        int default 0  not null comment &#x27;顺序&#x27;,</span><br><span class="line">    create_time datetime       not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime       not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint         not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint         not null comment &#x27;修改人&#x27;,</span><br><span class="line">    constraint idx_dish_name</span><br><span class="line">        unique (name)</span><br><span class="line">)</span><br><span class="line">    comment &#x27;菜品管理&#x27; collate = utf8_bin</span><br><span class="line">                       row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="菜品口味关系表"><a href="#菜品口味关系表" class="headerlink" title="菜品口味关系表"></a>菜品口味关系表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">create table dish_flavor</span><br><span class="line">(</span><br><span class="line">    id          bigint       not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    dish_id     bigint       not null comment &#x27;菜品&#x27;,</span><br><span class="line">    name        varchar(64)  not null comment &#x27;口味名称&#x27;,</span><br><span class="line">    value       varchar(500) null comment &#x27;口味数据list&#x27;,</span><br><span class="line">    create_time datetime     not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime     not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint       not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint       not null comment &#x27;修改人&#x27;</span><br><span class="line">)</span><br><span class="line">    comment &#x27;菜品口味关系表&#x27; collate = utf8_bin</span><br><span class="line">                             row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="菜品及套餐分类表"><a href="#菜品及套餐分类表" class="headerlink" title="菜品及套餐分类表"></a>菜品及套餐分类表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">create table category</span><br><span class="line">(</span><br><span class="line">    id          bigint      not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    type        int         null comment &#x27;类型   1 菜品分类 2 套餐分类&#x27;,</span><br><span class="line">    name        varchar(64) not null comment &#x27;分类名称&#x27;,</span><br><span class="line">    sort        int         not null comment &#x27;顺序&#x27;,</span><br><span class="line">    create_time datetime    not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime    not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint      not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint      not null comment &#x27;修改人&#x27;,</span><br><span class="line">    constraint idx_category_name</span><br><span class="line">        unique (name)</span><br><span class="line">)</span><br><span class="line">    comment &#x27;菜品及套餐分类&#x27; collate = utf8_bin</span><br><span class="line">                             row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="套餐表"><a href="#套餐表" class="headerlink" title="套餐表"></a>套餐表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">create table setmeal</span><br><span class="line">(</span><br><span class="line">    id          bigint         not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    category_id bigint         not null comment &#x27;菜品分类id&#x27;,</span><br><span class="line">    name        varchar(64)    not null comment &#x27;套餐名称&#x27;,</span><br><span class="line">    price       decimal(10, 2) not null comment &#x27;套餐价格&#x27;,</span><br><span class="line">    status      int            null comment &#x27;状态 0:停用 1:启用&#x27;,</span><br><span class="line">    code        varchar(32)    null comment &#x27;编码&#x27;,</span><br><span class="line">    description varchar(512)   null comment &#x27;描述信息&#x27;,</span><br><span class="line">    image       varchar(255)   null comment &#x27;图片&#x27;,</span><br><span class="line">    create_time datetime       not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime       not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint         not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint         not null comment &#x27;修改人&#x27;,</span><br><span class="line">    constraint idx_setmeal_name</span><br><span class="line">        unique (name)</span><br><span class="line">)</span><br><span class="line">    comment &#x27;套餐&#x27; collate = utf8_bin</span><br><span class="line">                   row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="套餐菜品关系表"><a href="#套餐菜品关系表" class="headerlink" title="套餐菜品关系表"></a>套餐菜品关系表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create table setmeal_dish</span><br><span class="line">(</span><br><span class="line">    id          bigint         not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    setmeal_id  varchar(32)    not null comment &#x27;套餐id &#x27;,</span><br><span class="line">    dish_id     varchar(32)    not null comment &#x27;菜品id&#x27;,</span><br><span class="line">    name        varchar(32)    null comment &#x27;菜品名称 （冗余字段）&#x27;,</span><br><span class="line">    price       decimal(10, 2) null comment &#x27;菜品原价（冗余字段）&#x27;,</span><br><span class="line">    copies      int            not null comment &#x27;份数&#x27;,</span><br><span class="line">    sort        int default 0  not null comment &#x27;排序&#x27;,</span><br><span class="line">    create_time datetime       not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime       not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint         not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint         not null comment &#x27;修改人&#x27;</span><br><span class="line">)</span><br><span class="line">    comment &#x27;套餐菜品关系&#x27; collate = utf8_bin</span><br><span class="line">                           row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="订单明细表"><a href="#订单明细表" class="headerlink" title="订单明细表"></a>订单明细表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">create table order_detail</span><br><span class="line">(</span><br><span class="line">    id          bigint         not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    name        varchar(50)    null comment &#x27;名字&#x27;,</span><br><span class="line">    image       varchar(100)   null comment &#x27;图片&#x27;,</span><br><span class="line">    order_id    bigint         not null comment &#x27;订单id&#x27;,</span><br><span class="line">    dish_id     bigint         null comment &#x27;菜品id&#x27;,</span><br><span class="line">    setmeal_id  bigint         null comment &#x27;套餐id&#x27;,</span><br><span class="line">    dish_flavor varchar(50)    null comment &#x27;口味&#x27;,</span><br><span class="line">    number      int default 1  not null comment &#x27;数量&#x27;,</span><br><span class="line">    amount      decimal(10, 2) not null comment &#x27;金额&#x27;</span><br><span class="line">)</span><br><span class="line">    comment &#x27;订单明细表&#x27; collate = utf8_bin</span><br><span class="line">                         row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="用户信息表"><a href="#用户信息表" class="headerlink" title="用户信息表"></a>用户信息表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create table user</span><br><span class="line">(</span><br><span class="line">    id        bigint        not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    name      varchar(50)   null comment &#x27;姓名&#x27;,</span><br><span class="line">    phone     varchar(100)  not null comment &#x27;手机号&#x27;,</span><br><span class="line">    sex       varchar(2)    null comment &#x27;性别&#x27;,</span><br><span class="line">    id_number varchar(18)   null comment &#x27;身份证号&#x27;,</span><br><span class="line">    avatar    varchar(500)  null comment &#x27;头像&#x27;,</span><br><span class="line">    status    int default 0 null comment &#x27;状态 0:禁用，1:正常&#x27;</span><br><span class="line">)</span><br><span class="line">    comment &#x27;用户信息&#x27; collate = utf8_bin</span><br><span class="line">                       row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="订单表"><a href="#订单表" class="headerlink" title="订单表"></a>订单表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">create table orders</span><br><span class="line">(</span><br><span class="line">    id              bigint         not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    number          varchar(50)    null comment &#x27;订单号&#x27;,</span><br><span class="line">    status          int default 1  not null comment &#x27;订单状态 1待付款，2待派送，3已派送，4已完成，5已取消&#x27;,</span><br><span class="line">    user_id         bigint         not null comment &#x27;下单用户&#x27;,</span><br><span class="line">    address_book_id bigint         not null comment &#x27;地址id&#x27;,</span><br><span class="line">    order_time      datetime       not null comment &#x27;下单时间&#x27;,</span><br><span class="line">    checkout_time   datetime       not null comment &#x27;结账时间&#x27;,</span><br><span class="line">    pay_method      int default 1  not null comment &#x27;支付方式 1微信,2支付宝&#x27;,</span><br><span class="line">    amount          decimal(10, 2) not null comment &#x27;实收金额&#x27;,</span><br><span class="line">    remark          varchar(100)   null comment &#x27;备注&#x27;,</span><br><span class="line">    phone           varchar(255)   null,</span><br><span class="line">    address         varchar(255)   null,</span><br><span class="line">    user_name       varchar(255)   null,</span><br><span class="line">    consignee       varchar(255)   null</span><br><span class="line">)</span><br><span class="line">    comment &#x27;订单表&#x27; collate = utf8_bin</span><br><span class="line">                     row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="地址表"><a href="#地址表" class="headerlink" title="地址表"></a>地址表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">create table address_book</span><br><span class="line">(</span><br><span class="line">    id          bigint                       not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    user_id     bigint                       not null comment &#x27;用户id&#x27;,</span><br><span class="line">    consignee   varchar(50)                  not null comment &#x27;收货人&#x27;,</span><br><span class="line">    sex         tinyint                      not null comment &#x27;性别 0 女 1 男&#x27;,</span><br><span class="line">    phone       varchar(11)                  not null comment &#x27;手机号&#x27;,</span><br><span class="line">    detail      varchar(200) charset utf8mb4 null comment &#x27;详细地址&#x27;,</span><br><span class="line">    label       varchar(100) charset utf8mb4 null comment &#x27;标签&#x27;,</span><br><span class="line">    is_default  tinyint(1) default 0         not null comment &#x27;默认 0 否 1是&#x27;,</span><br><span class="line">    create_time datetime                     not null comment &#x27;创建时间&#x27;,</span><br><span class="line">    update_time datetime                     not null comment &#x27;更新时间&#x27;,</span><br><span class="line">    create_user bigint                       not null comment &#x27;创建人&#x27;,</span><br><span class="line">    update_user bigint                       not null comment &#x27;修改人&#x27;,</span><br><span class="line">    constraint address_book_pk</span><br><span class="line">        unique (id)</span><br><span class="line">)</span><br><span class="line">    comment &#x27;地址管理&#x27; collate = utf8_bin</span><br><span class="line">                       row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h2 id="购物车"><a href="#购物车" class="headerlink" title="购物车"></a>购物车</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">create table shopping_cart</span><br><span class="line">(</span><br><span class="line">    id          bigint         not null comment &#x27;主键&#x27;</span><br><span class="line">        primary key,</span><br><span class="line">    name        varchar(50)    null comment &#x27;名称&#x27;,</span><br><span class="line">    image       varchar(100)   null comment &#x27;图片&#x27;,</span><br><span class="line">    user_id     bigint         not null comment &#x27;主键&#x27;,</span><br><span class="line">    dish_id     bigint         null comment &#x27;菜品id&#x27;,</span><br><span class="line">    setmeal_id  bigint         null comment &#x27;套餐id&#x27;,</span><br><span class="line">    dish_flavor varchar(50)    null comment &#x27;口味&#x27;,</span><br><span class="line">    number      int default 1  not null comment &#x27;数量&#x27;,</span><br><span class="line">    amount      decimal(10, 2) not null comment &#x27;金额&#x27;,</span><br><span class="line">    create_time datetime       null comment &#x27;创建时间&#x27;</span><br><span class="line">)</span><br><span class="line">    comment &#x27;购物车&#x27; collate = utf8_bin</span><br><span class="line">                     row_format = DYNAMIC;</span><br></pre></td></tr></table></figure><h1 id="正式开发前的相关配置"><a href="#正式开发前的相关配置" class="headerlink" title="正式开发前的相关配置"></a>正式开发前的相关配置</h1><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><h3 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h3><h4 id="地址簿"><a href="#地址簿" class="headerlink" title="地址簿"></a>地址簿</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 地址簿</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AddressBook</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//用户id</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line">    <span class="comment">//收货人</span></span><br><span class="line">    <span class="keyword">private</span> String consignee;</span><br><span class="line">    <span class="comment">//性别 0 女 1 男</span></span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="comment">//手机号</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="comment">//详细地址</span></span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line">    <span class="comment">//标签</span></span><br><span class="line">    <span class="keyword">private</span> String label;</span><br><span class="line">    <span class="comment">//是否默认 0 否 1是</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDefault;</span><br><span class="line">    <span class="comment">//创建时间</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="comment">//更新时间</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="comment">//创建人</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="comment">//修改人</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Category</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//类型 1 菜品分类 2 套餐分类</span></span><br><span class="line">    <span class="keyword">private</span> Integer type;</span><br><span class="line">    <span class="comment">//分类名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//顺序</span></span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line">    <span class="comment">//创建时间</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="comment">//更新时间</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="comment">//创建人</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="comment">//修改人</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="菜品"><a href="#菜品" class="headerlink" title="菜品"></a>菜品</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 菜品</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Dish</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//菜品名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//菜品分类id</span></span><br><span class="line">    <span class="keyword">private</span> Long categoryId;</span><br><span class="line">    <span class="comment">//菜品价格</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    <span class="comment">//商品码</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="comment">//图片</span></span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line">    <span class="comment">//描述信息</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="comment">//0 停售 1 起售</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="comment">//顺序</span></span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="菜品口味"><a href="#菜品口味" class="headerlink" title="菜品口味"></a>菜品口味</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">菜品口味</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DishFlavor</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//菜品id</span></span><br><span class="line">    <span class="keyword">private</span> Long dishId;</span><br><span class="line">    <span class="comment">//口味名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//口味数据list</span></span><br><span class="line">    <span class="keyword">private</span> String value;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="员工"><a href="#员工" class="headerlink" title="员工"></a>员工</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String idNumber;</span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="订单明细"><a href="#订单明细" class="headerlink" title="订单明细"></a>订单明细</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单明细</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDetail</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">// 图片</span></span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line">    <span class="comment">//订单id</span></span><br><span class="line">    <span class="keyword">private</span> Long orderId;</span><br><span class="line">    <span class="comment">//菜品id</span></span><br><span class="line">    <span class="keyword">private</span> Long dishId;</span><br><span class="line">    <span class="comment">//套餐id</span></span><br><span class="line">    <span class="keyword">private</span> Long setmealId;</span><br><span class="line">    <span class="comment">//口味</span></span><br><span class="line">    <span class="keyword">private</span> String dishFlavor;</span><br><span class="line">    <span class="comment">//数量</span></span><br><span class="line">    <span class="keyword">private</span> Integer number;</span><br><span class="line">    <span class="comment">//金额</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal amount;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="订单"><a href="#订单" class="headerlink" title="订单"></a>订单</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Orders</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//订单号</span></span><br><span class="line">    <span class="keyword">private</span> String number;</span><br><span class="line">    <span class="comment">//订单状态 1待付款，2待派送，3已派送，4已完成，5已取消</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="comment">//下单用户id</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line">    <span class="comment">//地址id</span></span><br><span class="line">    <span class="keyword">private</span> Long addressBookId;</span><br><span class="line">    <span class="comment">//下单时间</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime orderTime;</span><br><span class="line">    <span class="comment">//结账时间</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime checkoutTime;</span><br><span class="line">    <span class="comment">//支付方式 1微信，2支付宝</span></span><br><span class="line">    <span class="keyword">private</span> Integer payMethod;</span><br><span class="line">    <span class="comment">//实收金额</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal amount;</span><br><span class="line">    <span class="comment">//备注</span></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line">    <span class="comment">//用户名</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="comment">//手机号</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="comment">//地址</span></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="comment">//收货人</span></span><br><span class="line">    <span class="keyword">private</span> String consignee;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Setmeal</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//分类id</span></span><br><span class="line">    <span class="keyword">private</span> Long categoryId;</span><br><span class="line">    <span class="comment">//套餐名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//套餐价格</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    <span class="comment">//状态 0:停用 1:启用</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="comment">//编码</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="comment">//描述信息</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="comment">//图片</span></span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="套餐菜品关系"><a href="#套餐菜品关系" class="headerlink" title="套餐菜品关系"></a>套餐菜品关系</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 套餐菜品关系</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetmealDish</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//套餐id</span></span><br><span class="line">    <span class="keyword">private</span> Long setmealId;</span><br><span class="line">    <span class="comment">//菜品id</span></span><br><span class="line">    <span class="keyword">private</span> Long dishId;</span><br><span class="line">    <span class="comment">//菜品名称 （冗余字段）</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//菜品原价</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    <span class="comment">//份数</span></span><br><span class="line">    <span class="keyword">private</span> Integer copies;</span><br><span class="line">    <span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Long createUser;</span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Long updateUser;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="购物车-1"><a href="#购物车-1" class="headerlink" title="购物车"></a>购物车</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 购物车</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShoppingCart</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//用户id</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line">    <span class="comment">//菜品id</span></span><br><span class="line">    <span class="keyword">private</span> Long dishId;</span><br><span class="line">    <span class="comment">//套餐id</span></span><br><span class="line">    <span class="keyword">private</span> Long setmealId;</span><br><span class="line">    <span class="comment">//口味</span></span><br><span class="line">    <span class="keyword">private</span> String dishFlavor;</span><br><span class="line">    <span class="comment">//数量</span></span><br><span class="line">    <span class="keyword">private</span> Integer number;</span><br><span class="line">    <span class="comment">//金额</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal amount;</span><br><span class="line">    <span class="comment">//图片</span></span><br><span class="line">    <span class="keyword">private</span> String image;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//手机号</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="comment">//性别 0 女 1 男</span></span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="comment">//身份证号</span></span><br><span class="line">    <span class="keyword">private</span> String idNumber;</span><br><span class="line">    <span class="comment">//头像</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="comment">//状态 0:禁用，1:正常</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Dto"><a href="#Dto" class="headerlink" title="Dto"></a>Dto</h3><h4 id="DishDto"><a href="#DishDto" class="headerlink" title="DishDto"></a>DishDto</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Dto;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Dish;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.DishFlavor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DishDto</span> <span class="keyword">extends</span> <span class="title class_">Dish</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;DishFlavor&gt; flavors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String categoryName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer copies;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SetMealDto"><a href="#SetMealDto" class="headerlink" title="SetMealDto"></a>SetMealDto</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.Dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Setmeal;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.SetmealDish;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetmealDto</span> <span class="keyword">extends</span> <span class="title class_">Setmeal</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;SetmealDish&gt; setmealDishes;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String categoryName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="VO"><a href="#VO" class="headerlink" title="VO"></a>VO</h3><p>这个是新加的，为了向前端展示数据，主要的目的还是数据安全</p><h4 id="EmployeeVO"><a href="#EmployeeVO" class="headerlink" title="EmployeeVO"></a>EmployeeVO</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.VO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeVO</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserVo"><a href="#UserVo" class="headerlink" title="UserVo"></a>UserVo</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.DoMain.VO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserVO</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String token;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="正式开发前的相关配置-1"><a href="#正式开发前的相关配置-1" class="headerlink" title="正式开发前的相关配置"></a>正式开发前的相关配置</h2><h3 id="引入POM依赖"><a href="#引入POM依赖" class="headerlink" title="引入POM依赖"></a>引入<code>POM</code>依赖</h3><p>本项目使用<code>JDK17</code>进行编译和开发，如果有使用其他版本的请直接复制依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--suppress ALL --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.myc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Tivat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>17<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.19.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="应用程序的配置文件"><a href="#应用程序的配置文件" class="headerlink" title="应用程序的配置文件"></a>应用程序的配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment">#应用的名称，可选</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Tivat</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-circular-references:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="comment">#需要修改成你自己的，如果库的名字也是tivat就不用修改</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/tivat?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">      <span class="comment">#这里的用户名和密码就是你自己的用户名和密码</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">ASSIGN_ID</span></span><br><span class="line"><span class="attr">tivat:</span></span><br><span class="line"><span class="comment">#本地图片上传和下载缓存地址，可以根据自己的需要修改</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">D:\images\\</span></span><br></pre></td></tr></table></figure><h3 id="配置用户保存和获取当前登录id工具类"><a href="#配置用户保存和获取当前登录id工具类" class="headerlink" title="配置用户保存和获取当前登录id工具类"></a>配置用户保存和获取当前登录id工具类</h3><p>此处我没有修改，直接照搬瑞吉的，但是后面我因为偷懒把token传到了session里面，有的地方就直接获取session里面的token进行数据解析了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Common;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于ThreadLocal封装工具类, 用户保存和获取当前登录用户id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseContext</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal&lt;Long&gt; threadLocal = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setCurrentId</span><span class="params">(Long id)</span>&#123;</span><br><span class="line">        threadLocal.set(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title function_">getCurrentId</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Common;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义业务异常类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CustomException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局异常处理类"><a href="#全局异常处理类" class="headerlink" title="全局异常处理类"></a>全局异常处理类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLIntegrityConstraintViolationException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局异常处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice(annotations = &#123;RestController.class, Controller.class&#125;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(SQLIntegrityConstraintViolationException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">exceptionHandler</span><span class="params">(SQLIntegrityConstraintViolationException ex)</span>&#123;</span><br><span class="line">        log.info(ex.getMessage());</span><br><span class="line">        <span class="keyword">if</span> (ex.getMessage().contains(<span class="string">&quot;Duplicate entry&quot;</span>))&#123;</span><br><span class="line">            String[] split = ex.getMessage().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> split[<span class="number">2</span>] + <span class="string">&quot;已存在&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> Result.error(msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;未知错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(CustomException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">exceptionHandler</span><span class="params">(CustomException ex)</span>&#123;</span><br><span class="line">        log.info(ex.getMessage());</span><br><span class="line">        <span class="keyword">return</span> Result.error(ex.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象映射器"><a href="#对象映射器" class="headerlink" title="对象映射器"></a>对象映射器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.DeserializationFeature;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.<span class="keyword">module</span>.SimpleModule;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ser.std.ToStringSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对象映射器:基于jackson将Java对象转为json，或者将json转为Java对象</span></span><br><span class="line"><span class="comment"> * 将JSON解析为Java对象的过程称为 [从JSON反序列化Java对象]</span></span><br><span class="line"><span class="comment"> * 从Java对象生成JSON的过程称为 [序列化Java对象到JSON]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JacksonObjectMapper</span> <span class="keyword">extends</span> <span class="title class_">ObjectMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_DATE_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_DATE_TIME_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_TIME_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;HH:mm:ss&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JacksonObjectMapper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="comment">//收到未知属性时不报异常</span></span><br><span class="line">        <span class="built_in">this</span>.configure(FAIL_ON_UNKNOWN_PROPERTIES, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//反序列化时，属性不存在的兼容处理</span></span><br><span class="line">        <span class="built_in">this</span>.getDeserializationConfig().withoutFeatures(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">SimpleModule</span> <span class="variable">simpleModule</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleModule</span>()</span><br><span class="line">                .addDeserializer(LocalDateTime.class, <span class="keyword">new</span> <span class="title class_">LocalDateTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)))</span><br><span class="line">                .addDeserializer(LocalDate.class, <span class="keyword">new</span> <span class="title class_">LocalDateDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)))</span><br><span class="line">                .addDeserializer(LocalTime.class, <span class="keyword">new</span> <span class="title class_">LocalTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)))</span><br><span class="line"></span><br><span class="line">                .addSerializer(BigInteger.class, ToStringSerializer.instance)</span><br><span class="line">                .addSerializer(Long.class, ToStringSerializer.instance)</span><br><span class="line">                .addSerializer(LocalDateTime.class, <span class="keyword">new</span> <span class="title class_">LocalDateTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)))</span><br><span class="line">                .addSerializer(LocalDate.class, <span class="keyword">new</span> <span class="title class_">LocalDateSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)))</span><br><span class="line">                .addSerializer(LocalTime.class, <span class="keyword">new</span> <span class="title class_">LocalTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注册功能模块 例如，可以添加自定义序列化器和反序列化器</span></span><br><span class="line">        <span class="built_in">this</span>.registerModule(simpleModule);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自定义元数据对象处理器"><a href="#自定义元数据对象处理器" class="headerlink" title="自定义元数据对象处理器"></a>自定义元数据对象处理器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义元数据对象处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入的时候自动填充</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;公共字段自动填充[INSERT]...&quot;</span>);</span><br><span class="line">        metaObject.setValue(<span class="string">&quot;createTime&quot;</span>, LocalDateTime.now());</span><br><span class="line">        metaObject.setValue(<span class="string">&quot;updateTime&quot;</span>, LocalDateTime.now());</span><br><span class="line">        metaObject.setValue(<span class="string">&quot;createUser&quot;</span>,BaseContext.getCurrentId());</span><br><span class="line">        metaObject.setValue(<span class="string">&quot;updateUser&quot;</span>,BaseContext.getCurrentId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新操作的时候自动填充</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        metaObject.setValue(<span class="string">&quot;updateTime&quot;</span>, LocalDateTime.now());</span><br><span class="line">        metaObject.setValue(<span class="string">&quot;updateUser&quot;</span>,BaseContext.getCurrentId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通用返回结果类"><a href="#通用返回结果类" class="headerlink" title="通用返回结果类"></a>通用返回结果类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用返回结果类,服务端响应的数据最终都会封装成此对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer code; <span class="comment">//编码 1成功, 0和其他数字为失败</span></span><br><span class="line">    <span class="keyword">private</span> String msg;   <span class="comment">//错误信息</span></span><br><span class="line">    <span class="keyword">private</span> T data;       <span class="comment">//数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>(); <span class="comment">//动态数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">(T object)</span> &#123;</span><br><span class="line">        Result&lt;T&gt; result = <span class="keyword">new</span> <span class="title class_">Result</span>&lt;T&gt;();</span><br><span class="line">        result.data = object;</span><br><span class="line">        result.msg = <span class="string">&quot;成功&quot;</span>;</span><br><span class="line">        result.code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="type">Result</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Result</span>();</span><br><span class="line">        result.msg = msg;</span><br><span class="line">        result.code = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Result&lt;T&gt; <span class="title function_">add</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.map.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="JWT工具类"><a href="#JWT工具类" class="headerlink" title="JWT工具类"></a>JWT工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWTCreator;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.algorithms.Algorithm;</span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.interfaces.DecodedJWT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JWTUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//公共签名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SIGN</span> <span class="operator">=</span> <span class="string">&quot;TIVAT&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成token   header.payload.sing</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">createToken</span><span class="params">(Map&lt;String,String&gt; map)</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">instance</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        <span class="comment">//默认7天过期</span></span><br><span class="line">        instance.add(Calendar.DATE, <span class="number">7</span>);</span><br><span class="line">        <span class="comment">//创建jwt builder</span></span><br><span class="line">        JWTCreator.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> JWT.create();</span><br><span class="line">        <span class="comment">//payload</span></span><br><span class="line">        map.forEach(builder::withClaim);</span><br><span class="line">        <span class="comment">//指定过期时间,生成token并返回</span></span><br><span class="line">        <span class="keyword">return</span> builder.withExpiresAt(instance.getTime()).sign(Algorithm.HMAC256(SIGN));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">verify</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        JWT.require(Algorithm.HMAC256(SIGN)).build().verify(token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取token信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> decodedJWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DecodedJWT <span class="title function_">getTokenInfo</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> JWT.require(Algorithm.HMAC256(SIGN)).build().verify(token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MybatisPlus配置类"><a href="#MybatisPlus配置类" class="headerlink" title="MybatisPlus配置类"></a><code>MybatisPlus</code>配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">mybatisPlusInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        mybatisPlusInterceptor.addInnerInterceptor(<span class="keyword">new</span>  <span class="title class_">PaginationInnerInterceptor</span>());</span><br><span class="line">        <span class="keyword">return</span> mybatisPlusInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="拦截器及消息转换器配置类"><a href="#拦截器及消息转换器配置类" class="headerlink" title="拦截器及消息转换器配置类"></a>拦截器及消息转换器配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.JacksonObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Interceptor.JWTInterceptor;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InterceptorConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;拦截器配置启动...&quot;</span>);</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> <span class="title class_">JWTInterceptor</span>())</span><br><span class="line">                <span class="comment">//.addPathPatterns(&quot;/**&quot;)</span></span><br><span class="line">                .excludePathPatterns(</span><br><span class="line">                        <span class="string">&quot;/employee/login&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;/employee/logout&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;/user/login&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;user/logout&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;/common/upload&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;/common/download&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">extendMessageConverters</span><span class="params">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;拓展消息转换器...&quot;</span>);</span><br><span class="line">        <span class="comment">//创建消息转换器对象</span></span><br><span class="line">        <span class="type">MappingJackson2HttpMessageConverter</span> <span class="variable">messageConverter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MappingJackson2HttpMessageConverter</span>();</span><br><span class="line">        <span class="comment">//设置对象转换器,底层使用jackson将java对象转为json</span></span><br><span class="line">        messageConverter.setObjectMapper(<span class="keyword">new</span> <span class="title class_">JacksonObjectMapper</span>());</span><br><span class="line">        <span class="comment">//将上面的消息转换器对象追加到mvc框架的转换器集合中</span></span><br><span class="line">        converters.add(<span class="number">0</span>,messageConverter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="前后端联调跨域"><a href="#前后端联调跨域" class="headerlink" title="前后端联调跨域"></a>前后端联调跨域</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalCorsConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        <span class="comment">// 设置你要允许的网站域名</span></span><br><span class="line">        config.addAllowedOrigin(<span class="string">&quot;http://localhost:5173&quot;</span>);</span><br><span class="line">        <span class="comment">//允许跨域发送cookie</span></span><br><span class="line">        config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//放行全部原始头信息</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//允许所有请求方法跨域调用</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line">        log.info(<span class="string">&quot;cors跨域配置完成&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="应用启动程序"><a href="#应用启动程序" class="headerlink" title="应用启动程序"></a>应用启动程序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ServletComponentScan</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(App.class,args);</span><br><span class="line">        log.info(<span class="string">&quot;原神启动！！！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="管理端"><a href="#管理端" class="headerlink" title="管理端"></a>管理端</h1><hr><h2 id="员工管理"><a href="#员工管理" class="headerlink" title="员工管理"></a>员工管理</h2><hr><h3 id="Spring框架准备"><a href="#Spring框架准备" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Employee;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmployeeMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Employee&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层"><a href="#业务层" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Employee;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.VO.EmployeeVO;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmployeeService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Employee&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类"><a href="#业务层实现类" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.auth0.jwt.interfaces.DecodedJWT;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Employee;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.VO.EmployeeVO;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Utils.JWTUtils;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.DigestUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;EmployeeMapper, Employee&gt; <span class="keyword">implements</span> <span class="title class_">EmployeeService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层"><a href="#控制层" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Employee;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.VO.EmployeeVO;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/employee&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="员工登录"><a href="#员工登录" class="headerlink" title="员工登录"></a>员工登录</h3><h4 id="接口说明"><a href="#接口说明" class="headerlink" title="接口说明"></a>接口说明</h4><p>用于员工和超级管理员的登录。</p><h4 id="接口设计"><a href="#接口设计" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径"><a href="#请求路径" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee/login</p><h5 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>password</td><td>String</td><td>是</td><td>员工密码</td></tr><tr><td>username</td><td>String</td><td>是</td><td>用户名</td></tr></tbody></table></div><h5 id="请求示例"><a href="#请求示例" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123456&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例"><a href="#响应示例" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;userName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;管理员&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjEiLCJleHAiOjE3MTQzNTAzNzYsInVzZXJuYW1lIjoiYWRtaW4ifQ.E4ijHJ7qZ1__HxggAjmjMeYt6Q2lqW6Ba9Z1VaIOdvo&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;EmployeeVO&gt; <span class="title function_">login</span><span class="params">(HttpServletRequest request, <span class="meta">@RequestBody</span> Employee employee)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.login(request, employee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//员工登录</span></span><br><span class="line">Result&lt;EmployeeVO&gt; <span class="title function_">login</span><span class="params">(HttpServletRequest request, Employee employee)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl"><a href="#ServiceImpl" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> employeeVO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;EmployeeVO&gt; <span class="title function_">login</span><span class="params">(HttpServletRequest request, Employee employee)</span> &#123;</span><br><span class="line">    <span class="comment">//将页面提交的代码进行md5加密处理</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> employee.getPassword();</span><br><span class="line">    password = DigestUtils.md5DigestAsHex(password.getBytes());</span><br><span class="line">    <span class="comment">//根据用户名查数据库</span></span><br><span class="line">    LambdaQueryWrapper&lt;Employee&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(Employee::getUsername, employee.getUsername());</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">emp</span> <span class="operator">=</span> employeeService.getOne(queryWrapper);</span><br><span class="line">    <span class="comment">//如果没有查询到则返回登陆失败结果</span></span><br><span class="line">    <span class="keyword">if</span> (emp == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;用户不存在&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//密码比对,如果不一致则返回登录失败的结果</span></span><br><span class="line">    <span class="keyword">if</span> (!emp.getPassword().equals(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查看员工状态,如果为已禁用状态,则返回员工已禁用结果</span></span><br><span class="line">    <span class="keyword">if</span> (emp.getStatus() != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;账号已禁用&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//登陆成功,将员工id存入session并返回登录成功结果</span></span><br><span class="line">    HashMap&lt;String, String&gt; payload = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    payload.put(<span class="string">&quot;id&quot;</span>, emp.getId().toString());</span><br><span class="line">    payload.put(<span class="string">&quot;username&quot;</span>, emp.getUsername());</span><br><span class="line">    <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> JWTUtils.createToken(payload);</span><br><span class="line">    <span class="comment">//将token放在请求头里</span></span><br><span class="line">    request.getSession().setAttribute(<span class="string">&quot;token&quot;</span>, token);</span><br><span class="line">    log.info(token);</span><br><span class="line">    <span class="type">EmployeeVO</span> <span class="variable">employeeVO</span> <span class="operator">=</span> EmployeeVO.builder()</span><br><span class="line">            .id(emp.getId())</span><br><span class="line">            .userName(emp.getUsername())</span><br><span class="line">            .name(emp.getName())</span><br><span class="line">            .token(token)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="keyword">return</span> Result.success(employeeVO);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明"><a href="#逻辑说明" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>用户登录功能，主要实现过程如下：</p><ol><li>接收输入参数：<ul><li><code>HttpServletRequest request</code>：用于获取与当前请求相关的上下文信息，如会话（session）等。</li><li><code>Employee employee</code>：封装了用户在登录页面提交的用户名和原始密码。</li></ul></li><li>密码加密：<ul><li>使用<code>DigestUtils.md5DigestAsHex()</code>方法对用户提交的原始密码进行MD5加密处理，确保密码安全存储和传输。</li></ul></li><li>数据库查询：<ul><li>创建一个<code>LambdaQueryWrapper</code>对象，用于构建SQL查询语句。此处设置查询条件为根据<code>employee.getUsername()</code>获取的用户名，即查找与提交用户名匹配的员工记录。</li><li>调用<code>employeeService.getOne(queryWrapper)</code>方法执行查询，获取数据库中对应用户名的员工信息。返回结果赋值给<code>Employee</code>类型的变量emp。</li></ul></li><li>验证用户存在性：<ul><li>检查emp是否为null。若为null，说明数据库中无匹配的用户名，此时返回一个带有错误信息“用户不存在”的Result.error()对象，表示登录失败。</li></ul></li><li>验证密码正确性：<ul><li>比较加密后的密码<code>（password）</code>与数据库中员工记录的密码<code>（emp.getPassword()）</code>。若二者不相等，说明提交的密码错误，此时返回一个带有错误信息“密码错误”的<code>Result.error()</code>对象，表示登录失败。</li></ul></li><li>验证员工状态：<ul><li>检查<code>emp.getStatus()</code>是否为1（假设1代表未禁用）。若不为1，说明员工账号已被禁用，此时返回一个带有错误信息“账号已禁用”的Result.error()对象，表示登录失败。</li></ul></li><li>生成和存储JWT token：<ul><li>当上述所有验证通过，即登录成功时，创建一个HashMap来存放登录成功的员工信息，包括ID<code>（emp.getId().toString()）</code>和用户名<code>（emp.getUsername()）</code>。</li><li>使用<code>JWTUtils.createToken(payload)</code>方法，以HashMap内容为payload生成一个JWT token。</li><li>将生成的<code>token</code>存入请求的<code>session</code>中，键名为“token”，以便后续请求验证用户身份。同时，将token信息记录在日志中。</li></ul></li><li>构建并返回<code>EmployeeVO</code>对象：<ul><li>使用<code>Builder</code>模式创建一个<code>EmployeeVO</code>对象，填充以下属性：<ul><li>id: <code>emp.getId()</code></li><li>userName: <code>emp.getUsername()</code></li><li>name:<code>emp.getName()</code>（员工姓名）</li><li>token: 之前生成的JWT token</li></ul></li><li>包装登录成功的<code>EmployeeVO</code>对象于一个<code>Result.success()</code>对象中，表示登录成功，返回给调用者。</li></ul></li></ol><h4 id="SQL语句展示"><a href="#SQL语句展示" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><p>由于函数使用了MyBatis-Plus的<code>LambdaQueryWrapper</code>进行数据库查询，实际执行的SQL语句会由MyBatis-Plus动态生成。根据提供的Java代码逻辑，可以推断出生成的SQL语句大致如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employee WHERE username = &#x27;提交的用户名&#x27;</span><br></pre></td></tr></table></figure><p>这里的”提交的用户名”是根据传入的Employee对象中<code>getUsername()</code>方法获取的实际值。<code>LambdaQueryWrapper</code>通过链式调用的方式，以lambda表达式设置查询条件，最终生成上述简单SELECT语句，从employee表中查询与指定用户名匹配的所有字段。</p><hr><h3 id="员工退出"><a href="#员工退出" class="headerlink" title="员工退出"></a>员工退出</h3><h4 id="接口说明-1"><a href="#接口说明-1" class="headerlink" title="接口说明"></a>接口说明</h4><p>用于普通员工和超级管理员的退出。这里我太懒了，直接按照瑞吉的方法删除session，也可以用其它方法，比如手动让token过期等。</p><h4 id="接口设计-1"><a href="#接口设计-1" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式："><a href="#请求方式：" class="headerlink" title="请求方式："></a>请求方式：</h5><p>POST</p><h5 id="请求路径-1"><a href="#请求路径-1" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee/logout</p><h5 id="响应示例-1"><a href="#响应示例-1" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;退出成功!&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-1"><a href="#Controller-1" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/logout&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">logout</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.logout(request);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//员工退出</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">logout</span><span class="params">(HttpServletRequest request)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-1"><a href="#ServiceImpl-1" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 退出</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">logout</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">    request.getSession().removeAttribute(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;退出成功!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-1"><a href="#逻辑说明-1" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>代码的核心任务是清除用户的登录凭证（如session token）。首先通过<code>request.getSession()</code>获取与当前HTTP请求关联的会话对象，然后调用<code>removeAttribute(&quot;token&quot;)</code>方法，从会话中移除名为“token”的属性。这一步操作实质上撤销了用户的登录状态，使得后续请求无法再以此token验证身份，从而实现了退出登录的效果。<br>其实这里可以再生成一个token，使原来的token过期，前端和后端获取到的token不匹配，自然就实现退出功能了。我这里这么写是为了偷懒，直接复制粘贴瑞吉就行，不用自己写了。</p><hr><h3 id="新增员工"><a href="#新增员工" class="headerlink" title="新增员工"></a>新增员工</h3><h4 id="接口说明-2"><a href="#接口说明-2" class="headerlink" title="接口说明"></a>接口说明</h4><p>新增员工，这个接口就没什么好说的，只是一个简单的保存。</p><h4 id="接口设计-2"><a href="#接口设计-2" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-1"><a href="#请求方式-1" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径-2"><a href="#请求路径-2" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee/add</p><h5 id="请求参数-1"><a href="#请求参数-1" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>是</td><td>姓名</td></tr><tr><td>username</td><td>String</td><td>是</td><td>用户名</td></tr><tr><td>sex</td><td>String</td><td>是</td><td>性别（女：0，男：1）</td></tr><tr><td>phone</td><td>String</td><td>是</td><td>手机号</td></tr><tr><td>idNumber</td><td>String</td><td>是</td><td>身份证号</td></tr></tbody></table></div><h5 id="请求示例-1"><a href="#请求示例-1" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;idNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;132134341234121342&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;八重神子&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13740825272&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bcsz&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-2"><a href="#响应示例-2" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;添加成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-2"><a href="#Controller-2" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">saveEmployee</span><span class="params">(HttpServletRequest request, <span class="meta">@RequestBody</span> Employee employee)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.saveEmployee(request, employee);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-2"><a href="#Service-2" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增员工</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">saveEmployee</span><span class="params">(HttpServletRequest request,Employee employee)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-2"><a href="#ServiceImpl-2" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增员工</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">saveEmployee</span><span class="params">(HttpServletRequest request,Employee employee)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> (String) request.getSession().getAttribute(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    <span class="type">DecodedJWT</span> <span class="variable">tokenInfo</span> <span class="operator">=</span> JWTUtils.getTokenInfo(token);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">empId</span> <span class="operator">=</span> Long.valueOf(tokenInfo.getClaim(<span class="string">&quot;id&quot;</span>).asString());</span><br><span class="line">    employee.setPassword(DigestUtils.md5DigestAsHex(<span class="string">&quot;123456&quot;</span>.getBytes()));</span><br><span class="line">    employee.setCreateTime(LocalDateTime.now());</span><br><span class="line">    employee.setUpdateTime(LocalDateTime.now());</span><br><span class="line">    employee.setCreateUser(empId);</span><br><span class="line">    employee.setUpdateUser(empId);</span><br><span class="line">    employeeService.save(employee);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-2"><a href="#逻辑说明-2" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ol><li>函数声明与注释:<ul><li>函数名为<code>saveEmployee</code>，重写了父类或接口中的同名方法。</li><li>注释使用<code>Javadoc</code>格式，简述了函数的主要功能为“新增员工”，并指明了接收的两个参数及返回值类型。</li></ul></li><li>参数说明:<ul><li><code>HttpServletRequest request</code>: 一个HTTP请求对象，用于从中提取当前用户的身份验证信息（即token）。</li><li><code>Employee employee</code>: 要新增的员工对象，包含了员工的各项属性如姓名、职位等，但不包括密码、创建时间、更新时间、创建人和更新人信息。</li></ul></li><li>获取与解析token:<ul><li>从 <code>request</code> 对象的<code>session</code>中获取名为 “token” 的属性值，并将其转换为字符串类型，存储在变量 token 中。</li><li>使用 <code>JWTUtils.getTokenInfo(token)</code> 解析 token，获取其中包含的用户身份信息。假设 JWTUtils 是一个封装了<code>JWT（JSON Web Token）</code>处理逻辑的工具类。</li></ul></li><li>设置员工特定属性:<ul><li>将员工密码设置为固定字符串 “123456” 经过MD5加密后的十六进制表示，使用 <code>DigestUtils.md5DigestAsHex()</code> 方法实现。这表明系统在新增员工时默认为其分配一个固定密码，实际应用中可能需要改进以支持更安全的密码策略。</li><li>设置员工的创建时间<code>（createTime）</code>和更新时间<code>（updateTime）</code>为调用此函数时的当前时间，通过<code>LocalDateTime.now()</code>获取。<br>从解析出的token信息中提取员工ID（empId），并将其分别赋值给员工对象的创建人<code>（createUser）</code>和更新人<code>（updateUser）</code>属性。这表明当前操作用户（持有token的用户）既是新员工的创建者也是最后一次更新者。</li></ul></li><li>保存员工信息:<ul><li>调用<code>employeeService.save(employee)</code>方法，将填充完整信息的 employee 对象持久化到数据库或其他数据存储中。这里假设 <code>employeeService</code> 是一个实现了员工管理业务逻辑的服务类。</li></ul></li><li>返回结果<ul><li>函数返回一个 <code>Result&lt;String&gt;</code>类型的对象，表示操作结果。这里返回的是一个成功的响应，具体内容为字符串 “添加成功”。通常，Result 类会包含状态码、消息等信息，便于客户端或调用方识别操作结果。</li></ul></li></ol><h4 id="SQL语句展示-1"><a href="#SQL语句展示-1" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO employee (</span><br><span class="line">    name,</span><br><span class="line">    username,</span><br><span class="line">    password,</span><br><span class="line">    phone,</span><br><span class="line">    sex,</span><br><span class="line">    id_number,</span><br><span class="line">    status，</span><br><span class="line">    create_time,</span><br><span class="line">    update_time,</span><br><span class="line">    create_user,</span><br><span class="line">    update_user</span><br><span class="line">) VALUES (</span><br><span class="line">    ?, -- 员工姓名</span><br><span class="line">    ?, -- 员工用户名</span><br><span class="line">    ?, -- MD5加密后的密码</span><br><span class="line">    ?, -- 手机号</span><br><span class="line">    ?, -- 性别</span><br><span class="line">    ?, -- 身份证号</span><br><span class="line">    ?, -- 状态</span><br><span class="line">    ?, -- 当前时间（作为创建时间与更新时间）</span><br><span class="line">    ?, -- 当前时间（作为创建时间与更新时间）</span><br><span class="line">    ?, -- 创建人ID（从token中提取）</span><br><span class="line">    ?  -- 更新人ID（与创建人ID相同）</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><h4 id="接口说明-3"><a href="#接口说明-3" class="headerlink" title="接口说明"></a>接口说明</h4><p>pageHelpper貌似不支持jdk17。我这里就是首先创建分页构造器，然后添加查询条件，最后直接调用方法。</p><h4 id="接口设计-3"><a href="#接口设计-3" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-2"><a href="#请求方式-2" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-3"><a href="#请求路径-3" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee/page</p><h5 id="请求参数-2"><a href="#请求参数-2" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>page</td><td>Integer</td><td>是</td><td>输入的页码</td></tr><tr><td>pageSize</td><td>Integer</td><td>是</td><td>每页的大小</td></tr><tr><td>name</td><td>String</td><td>否</td><td>姓名</td></tr></tbody></table></div><h5 id="请求示例-2"><a href="#请求示例-2" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>page</th><th>1</th></tr></thead><tbody><tr><td>pageSize</td><td>5</td></tr><tr><td>name</td><td>管理员</td></tr></tbody></table></div><h5 id="响应示例-3"><a href="#响应示例-3" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;管理员&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e10adc3949ba59abbe56e057f20f883e&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13019161049&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;idNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123123123412341234&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-22 08:22:17&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-22 08:22:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-3"><a href="#Controller-3" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">page</span><span class="params">(Integer page, Integer pageSize, String name)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.empPage(page, pageSize, name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-3"><a href="#Service-3" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line">Result&lt;Page&gt; <span class="title function_">empPage</span><span class="params">(Integer page, Integer pageSize, String name)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-3"><a href="#ServiceImpl-3" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pageSize</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> page</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">empPage</span><span class="params">(Integer page, Integer pageSize, String name)</span> &#123;</span><br><span class="line">    <span class="comment">//构造分页构造器</span></span><br><span class="line">    <span class="type">Page</span> <span class="variable">pageInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.baomidou.mybatisplus.extension.plugins.pagination.Page&lt;&gt;(page, pageSize);</span><br><span class="line">    <span class="comment">//构造条件构造器</span></span><br><span class="line">    LambdaQueryWrapper&lt;Employee&gt; lambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//添加过滤条件</span></span><br><span class="line">    lambdaQueryWrapper.like(StringUtils.isNotEmpty(name), Employee::getName, name);</span><br><span class="line">    lambdaQueryWrapper.orderByDesc(Employee::getUpdateTime);</span><br><span class="line">    <span class="comment">//执行查询</span></span><br><span class="line">    employeeService.page(pageInfo, lambdaQueryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-3"><a href="#逻辑说明-3" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>这是一个分页查询函数，根据输入的页码、每页大小和姓名条件，查询员工信息并返回分页结果。</p><ol><li>首先，构造一个分页构造器 <code>Page pageInfo = new com.baomidou.mybatisplus.extension.plugins.pagination.Page&lt;&gt;(page, pageSize);</code>，其中 <code>page</code> 和<code>pageSize</code> 分别是输入的页码和每页大小。</li><li>然后，构造一个条件构造器 <code>LambdaQueryWrapper&lt;Employee&gt; lambdaQueryWrapper = new LambdaQueryWrapper&lt;&gt;();</code>，用于设置查询条件。</li><li>接着，通过<code>lambdaQueryWrapper.like(StringUtils.isNotEmpty(name), Employee::getName, name);</code> 添加一个过滤条件，只有当 <code>name</code>不为空时，才查询姓名包含 <code>name</code>的员工。这里使用了<code>like</code> 方法，可以根据输入的 <code>name</code>进行模糊查询。</li><li>再通过 <code>lambdaQueryWrapper.orderByDesc(Employee::getUpdateTime);</code>设置排序条件，按照员工的更新时间倒序排序。</li><li>最后，调用<code>employeeService.page(pageInfo, lambdaQueryWrapper);</code>执行查询操作，将分页信息和条件传入。查询结果会自动填充到<code>pageInfo</code> 中。</li><li>最后返回一个成功结果<code>Result.success(pageInfo);</code>，将查询到的分页信息作为数据返回。</li></ol><h4 id="SQL语句展示-2"><a href="#SQL语句展示-2" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM `employee`</span><br><span class="line">WHERE </span><br><span class="line">  CASE WHEN LENGTH(TRIM(?)) &gt; 0 THEN `name` LIKE CONCAT(&#x27;%&#x27;, ?, &#x27;%&#x27;) ELSE 1=1 END</span><br><span class="line">ORDER BY `update_time` DESC</span><br><span class="line">LIMIT ? OFFSET ?;</span><br></pre></td></tr></table></figure><p>参数说明</p><ul><li>第一个问号（?）代表 name 参数，传递时会被替换为实际的姓名筛选值。若为空字符串或空值，则 LIKE 条件不会生效，相当于无筛选。</li><li>第二个问号（?）同样代表 name 参数，与第一个问号一起构成 LIKE 条件的模糊匹配部分。</li><li>第三个问号（?）代表 pageSize 参数，即每页显示的记录数。</li><li>第四个问号（?）代表 (page - 1) * pageSize，用于计算偏移量（OFFSET），确定从哪条记录开始取数据。</li></ul><p>实际的SQL语句可能会因使用的ORM框架（如MyBatis Plus）和数据库方言有所不同，但逻辑大体一致。这里给出的SQL语句是根据函数中提供的查询条件和排序规则人工编写的，旨在直观展示其对应的SQL查询形式。在实际应用中，ORM框架会自动处理这些参数绑定和分页逻辑。</p><hr><h3 id="修改员工"><a href="#修改员工" class="headerlink" title="修改员工"></a>修改员工</h3><h4 id="接口说明-4"><a href="#接口说明-4" class="headerlink" title="接口说明"></a>接口说明</h4><p>根据id先查询到员工，然后再直接根据id进行更改。</p><p>这个接口同时也是禁用和启用员工的接口，都是根据id先查后改。</p><h4 id="接口设计-4"><a href="#接口设计-4" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-3"><a href="#请求方式-3" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-4"><a href="#请求路径-4" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee/update</p><h5 id="请求参数-3"><a href="#请求参数-3" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>员工id</td></tr><tr><td>name</td><td>String</td><td>是</td><td>姓名</td></tr><tr><td>username</td><td>String</td><td>是</td><td>用户名</td></tr><tr><td>phone</td><td>String</td><td>是</td><td>手机号</td></tr><tr><td>idNumber</td><td>String</td><td>是</td><td>身份证号</td></tr><tr><td>sex</td><td>String</td><td>是</td><td>性别（女：0，男：1）</td></tr><tr><td>status</td><td>Integer</td><td>是</td><td>状态</td></tr></tbody></table></div><h5 id="请求示例-3"><a href="#请求示例-3" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;idNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123123123412345678&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;胡桃&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18115272679&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hutao&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-4"><a href="#响应示例-4" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;员工信息修改成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-4"><a href="#Controller-4" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">update</span><span class="params">(HttpServletRequest request, <span class="meta">@RequestBody</span> Employee employee)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.update(request, employee);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="Service-4"><a href="#Service-4" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id修改员工信息</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">update</span><span class="params">(HttpServletRequest request, Employee employee)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-4"><a href="#ServiceImpl-4" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id修改员工信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> employee</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">update</span><span class="params">(HttpServletRequest request, Employee employee)</span> &#123;</span><br><span class="line">    log.info(employee.toString());</span><br><span class="line">    LambdaQueryWrapper&lt;Employee&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(Employee::getId,employee.getId());</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">emp</span> <span class="operator">=</span> employeeService.getOne(queryWrapper);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> emp.getUsername();</span><br><span class="line">    <span class="keyword">if</span> (name.equals(<span class="string">&quot;admin&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;可莉提醒你不要禁用超级管理员！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> (String) request.getSession().getAttribute(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    <span class="type">DecodedJWT</span> <span class="variable">tokenInfo</span> <span class="operator">=</span> JWTUtils.getTokenInfo(token);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">empId</span> <span class="operator">=</span> Long.valueOf(tokenInfo.getClaim(<span class="string">&quot;id&quot;</span>).asString());</span><br><span class="line">    employee.setUpdateTime(LocalDateTime.now());</span><br><span class="line">    employee.setUpdateUser(empId);</span><br><span class="line">    employeeService.updateById(employee);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;员工信息修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-4"><a href="#逻辑说明-4" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>此函数实现了一个更新逻辑，，即根据给定的<code>HttpServletRequest</code>请求对象和<code>Employee</code>实体对象，更新指定员工的详细信息。以下是此函数的具体步骤和功能：</p><ol><li>日志记录：<ul><li>使用<code>log.info()</code>方法记录传入的<code>employee</code>对象的字符串表示形式，即打印其所有属性值，便于追踪调试或记录操作日志。</li></ul></li><li>查询原始员工信息：<ul><li>创建一个<code>LambdaQueryWrapper&lt;Employee&gt;</code>实例，用于构造查询条件。</li><li>使用<code>eq()</code>方法设置查询条件为：根据传入<code>employee</code>对象的id属性值，查询员工表中对应的员工记录。</li><li>调用<code>employeeService.getOne(queryWrapper)</code>方法执行查询，获取与给定id匹配的唯一员工实体（假设存在）。</li></ul></li><li>权限检查：<ul><li>获取查询结果中员工的<code>username</code>属性值，并将其存储在变量<code>name</code>中。</li><li>判断name是否等于字符串<code>&quot;admin&quot;</code>。如果是，说明尝试修改的是名为<code>&quot;admin&quot;</code>的特殊用户，函数返回一个包含错误信息的结果对象，提示不能禁用超级管理员。</li></ul></li><li>提取当前操作用户ID：<ul><li>从<code>HttpServletRequest</code>对象的<code>session</code>中获取名为<code>&quot;token&quot;</code>的属性值，将其转换为String类型并存储在变量token中。</li><li>使用<code>JWTUtils.getTokenInfo(token)</code>方法对token进行解码，得到一个<code>DecodedJWT</code>对象，代表已验证的JSON Web Token（JWT）信息。</li><li>从解码后的JWT中提取出”claim”名为”id”的用户ID信息，将其转换为Long类型并存储在变量empId中。这个ID标识了当前正在操作系统的用户。</li></ul></li><li>更新员工信息：<ul><li>设置employee对象的<code>updateTime</code>属性为当前时间<code>（LocalDateTime.now()）</code>，表示此次更新操作的时间。</li><li>设置employee对象的<code>updateUser</code>属性为当前操作用户的ID<code>（empId）</code>，记录此次更新操作的执行者。</li><li>调用<code>employeeService.updateById(employee)</code>方法，根据<code>employee</code>对象的id属性值更新数据库中的对应员工记录，应用上述更改。</li></ul></li><li>返回结果：<ul><li>函数执行至此，表明员工信息已成功更新且未触发权限异常。因此，返回一个表示成功的<code>Result&lt;String&gt;</code>对象，其内容为字符串”员工信息修改成功”，通知调用方更新操作顺利完成。</li></ul></li></ol><p>综上所述，此函数实现了基于HTTP请求和员工实体数据的员工信息更新操作，同时进行了权限检查和日志记录，确保操作的合法性、安全性以及可追溯性。</p><h4 id="SQL语句展示-3"><a href="#SQL语句展示-3" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>查询初始员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employee WHERE id = ?</span><br></pre></td></tr></table></figure></li><li><p>更新员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">UPDATE employee </span><br><span class="line">  SET update_time = ?, update_user = ?,</span><br><span class="line">      [其他字段的更新语句...]</span><br><span class="line">  WHERE id = ?</span><br></pre></td></tr></table></figure></li></ol><p>参数说明：</p><p>其中，?是占位符，实际执行时会被框架自动替换为对应的参数值：</p><ul><li>查询语句中，第一个?会被替换为传入employee对象的id值。</li><li>更新语句中：<ul><li>第一个?会被替换为<code>LocalDateTime.now()</code>生成的当前时间值。</li><li>第二个?会被替换为从JWT解码得到的当前操作用户ID（empId）。</li><li>最后一个?同样被替换为传入employee对象的id值。</li><li>[其他字段的更新语句…]表示根据employee对象中待更新的非<code>updateTime</code>和<code>updateUser</code>属性，生成相应的SET子句。</li></ul></li></ul><hr><h3 id="删除员工"><a href="#删除员工" class="headerlink" title="删除员工"></a>删除员工</h3><h4 id="接口说明-5"><a href="#接口说明-5" class="headerlink" title="接口说明"></a>接口说明</h4><p>删除接口，可以实现批量删除，删除前需要先禁用该用户，但是任何用户不得删除超级管理员（admin）。</p><h4 id="接口设计-5"><a href="#接口设计-5" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-4"><a href="#请求方式-4" class="headerlink" title="请求方式"></a>请求方式</h5><p>DELETE</p><h5 id="请求路径-5"><a href="#请求路径-5" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee</p><h5 id="请求参数-4"><a href="#请求参数-4" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>ids</td><td>array</td><td>是</td><td>id的数组</td></tr></tbody></table></div><h5 id="请求示例-4"><a href="#请求示例-4" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>ids</td><td>3</td></tr></tbody></table></div><h5 id="响应示例-5"><a href="#响应示例-5" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;删除成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-5"><a href="#代码实现-5" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-5"><a href="#Controller-5" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.delete(ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-5"><a href="#Service-5" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除员工</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-5"><a href="#ServiceImpl-5" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量删除员工</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (Long id : ids) &#123;</span><br><span class="line">        LambdaQueryWrapper&lt;Employee&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(Employee::getId,id);</span><br><span class="line">        <span class="type">Employee</span> <span class="variable">emp</span> <span class="operator">=</span> employeeService.getOne(queryWrapper);</span><br><span class="line">        <span class="keyword">if</span> (emp.getStatus() == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;员工尚未被禁用,不能删除&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(emp.getUsername()==<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="string">&quot;不能删除超级管理员&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        employeeService.removeById(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-5"><a href="#逻辑说明-5" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>此Java函数实现了一个批量删除员工的功能，其主要职责如下：</p><ol><li>函数签名与注释：<ul><li>函数名为<code>delete</code>，重写了父类或接口中同名方法。</li><li>函数接收一个类型为<code>List&lt;Long&gt;</code>的参数 ids，表示待删除的一批员工ID。</li><li>注释说明了函数的主要功能：批量删除员工。</li></ul></li><li>返回类型：<ul><li>函数返回类型为 <code>Result&lt;String&gt;</code>。根据命名习惯推测，Result 是一个封装了操作结果（成功或失败）及对应消息的自定义类，其中 String 类型字段用于存储操作结果的具体描述。</li></ul></li><li>遍历待删除员工ID列表：<ul><li>使用 for-each 循环遍历传入的 ids 列表，对每个 id 进行以下处理：</li></ul></li><li>查询员工信息：<ul><li>创建一个新的 <code>LambdaQueryWrapper&lt;Employee&gt;</code>对象<code>queryWrapper</code>，用于构造SQL查询条件。</li><li>使用 eq 方法设置查询条件，即查询 Employee 表中 id 字段等于当前遍历到的 id 的记录。</li><li>调用<code>employeeService.getOne(queryWrapper)</code>方法执行查询，获取与当前 id 对应的 Employee 实例。</li></ul></li><li>判断删除条件：<ul><li>检查查询到的<code>Employee</code>实例的 status 属性：<ul><li>若 status 值为 1，表示该员工尚未被禁用。此时函数返回一个错误类型的 Result，消息内容为“员工尚未被禁用，不能删除”。</li></ul></li><li>检查查询到的<code>Employee</code>实例的<code>username</code> 属性：<ul><li>若<code>username</code> 值为 <code>&quot;admin&quot;</code>，表示该员工为超级管理员。此时函数返回一个错误类型的 Result，消息内容为“不能删除超级管理员”</li></ul></li></ul></li><li>删除符合条件的员工：<ul><li>如果上述条件均不满足（即员工已禁用且非超级管理员），调用 <code>employeeService.removeById(id)</code> 方法，根据当前 id 删除对应员工记录。</li></ul></li><li>循环结束后返回结果：<ul><li>当所有待删除员工ID都经过上述处理后，若无异常情况发生，函数返回一个成功类型的 <code>Result</code>，消息内容为“删除成功”，表示批量删除操作顺利完成。</li></ul></li></ol><p>综上所述，该函数实现了批量删除指定ID列表中的员工，但在删除前会检查员工状态和身份，确保只有已禁用且非超级管理员的员工才能被删除。操作结果以<code>Result&lt;String&gt;</code> 类型返回，包含成功或失败状态及对应描述信息。</p><h4 id="SQL语句展示-4"><a href="#SQL语句展示-4" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>查询员工信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM employee WHERE id = ?</span><br></pre></td></tr></table></figure></li><li><p>删除符合的员工</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM employee WHERE id = ?</span><br></pre></td></tr></table></figure></li></ol><p>参数说明</p><ul><li>查询语句用于获取指定ID的员工详细信息，其中 ? 代表实际传递的ID值。</li><li>删除语句用于删除指定ID的员工记录，同样 ? 代表实际传递的ID值。</li></ul><hr><h3 id="获取员工信息"><a href="#获取员工信息" class="headerlink" title="获取员工信息"></a>获取员工信息</h3><h4 id="接口设计-6"><a href="#接口设计-6" class="headerlink" title="接口设计"></a>接口设计</h4><p>这个接口主要的作用是修改员工时进行数据回显，根据id进行查询，直接返回员工数据在修改界面的输入框内显示。</p><h5 id="请求方式-5"><a href="#请求方式-5" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-6"><a href="#请求路径-6" class="headerlink" title="请求路径"></a>请求路径</h5><p>/employee</p><h5 id="请求参数-5"><a href="#请求参数-5" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>ID编号</td></tr></tbody></table></div><h5 id="请求示例-5"><a href="#请求示例-5" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>参数值</th></tr></thead><tbody><tr><td>id</td><td>1</td></tr></tbody></table></div><h5 id="响应示例-6"><a href="#响应示例-6" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;管理员&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e10adc3949ba59abbe56e057f20f883e&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13019161049&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;idNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123123123412341234&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-22 08:22:17&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-22 08:22:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-6"><a href="#代码实现-6" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-6"><a href="#Controller-6" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Employee&gt; <span class="title function_">searchEmployeeById</span><span class="params">(<span class="meta">@RequestParam</span> Long id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> employeeService.searchEmployeeById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-6"><a href="#Service-6" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取员工信息</span></span><br><span class="line">Result&lt;Employee&gt; <span class="title function_">searchEmployeeById</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-6"><a href="#ServiceImpl-6" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id获取员工信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Employee&gt; <span class="title function_">searchEmployeeById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;Employee&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(Employee::getId,id);</span><br><span class="line">    <span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> employeeService.getOne(queryWrapper);</span><br><span class="line">    <span class="keyword">if</span>(employee != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(employee);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.error(<span class="string">&quot;没有查到对应员工信息&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-6"><a href="#逻辑说明-6" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>此函数是一个根据员工id获取员工信息的函数。首先，它通过创建一个<code>LambdaQueryWrapper</code>对象并使用eq方法设置查询条件为id等于传入的参数id。然后，它调用<code>employeeService.getOne</code>方法，使用该查询条件查询员工信息。如果查询结果不为空，则返回成功结果，包含查询到的员工信息；否则，返回错误结果，提示没有查到对应员工信息。</p><h4 id="SQL语句展示-5"><a href="#SQL语句展示-5" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM employee</span><br><span class="line">WHERE id = &lt;指定的员工ID&gt;;</span><br></pre></td></tr></table></figure><hr><h2 id="分类管理"><a href="#分类管理" class="headerlink" title="分类管理"></a>分类管理</h2><hr><h3 id="Spring框架准备-1"><a href="#Spring框架准备-1" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-1"><a href="#持久层-1" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Category;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CategoryMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Category&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-1"><a href="#业务层-1" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Category;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CategoryService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Category&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-1"><a href="#业务层实现类-1" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Category;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Dish;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Setmeal;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.CategoryMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.CategoryService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.DishService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.SetMealService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;CategoryMapper, Category&gt; <span class="keyword">implements</span> <span class="title class_">CategoryService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryService categoryService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SetMealService setmealService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DishService dishService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层-1"><a href="#控制层-1" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Category;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.CategoryService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/category&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryService categoryService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="分页查询-1"><a href="#分页查询-1" class="headerlink" title="分页查询"></a>分页查询</h3><h4 id="接口说明-6"><a href="#接口说明-6" class="headerlink" title="接口说明"></a>接口说明</h4><p>又是分页啊~！</p><h4 id="接口设计-7"><a href="#接口设计-7" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-6"><a href="#请求方式-6" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-7"><a href="#请求路径-7" class="headerlink" title="请求路径"></a>请求路径</h5><p>/category/page</p><h5 id="请求参数-6"><a href="#请求参数-6" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>page</td><td>Integer</td><td>是</td><td>输入的页码</td></tr><tr><td>pageSize</td><td>Integer</td><td>是</td><td>每页的大小</td></tr></tbody></table></div><h5 id="请求示例-6"><a href="#请求示例-6" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>page</td><td>1</td></tr><tr><td>pageSize</td><td>10</td></tr></tbody></table></div><h5 id="响应示例-7"><a href="#响应示例-7" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主食&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;店长推荐&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月风味&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德独家&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;稻妻好食&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;须弥特色&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-7"><a href="#代码实现-7" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-7"><a href="#Controller-7" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">page</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> categoryService.categoryPage(page,pageSize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-7"><a href="#Service-7" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line">Result&lt;Page&gt; <span class="title function_">categoryPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-7"><a href="#ServiceImpl-7" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pageSize</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Page</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">categoryPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize)</span> &#123;</span><br><span class="line">    Page&lt;Category&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, pageSize);</span><br><span class="line">    LambdaQueryWrapper&lt;Category&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.orderByAsc(Category::getSort);</span><br><span class="line">    categoryService.page(pageInfo, queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-7"><a href="#逻辑说明-7" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>具体实现中，首先创建一个Page对象，用于存储分页信息。然后使用<code>LambdaQueryWrapper</code>创建查询条件，并按照<code>Category</code>表中的sort字段进行升序排序。接着调用<code>categoryService</code>的<code>page</code>方法进行查询，并将查询结果传入<code>pageInfo</code>对象中。最后，将<code>pageInfo</code>对象放入Result对象中并返回。</p><h4 id="SQL语句展示-6"><a href="#SQL语句展示-6" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM Category</span><br><span class="line">ORDER BY sort ASC</span><br><span class="line">LIMIT (#&#123;page&#125; - 1) * #&#123;pageSize&#125;, #&#123;pageSize&#125;</span><br></pre></td></tr></table></figure><p>参数说明</p><p>这里，<code>#&#123;page&#125;</code> 和<code>#&#123;pageSize&#125;</code> 是占位符，分别代表传入的页码和每页显示数量。实际执行时，框架会将这些占位符替换为对应的值。查询逻辑如下：</p><ol><li><code>SELECT *</code>：从<code>Category</code>表中选择所有列。</li><li><code>ORDER BY sort ASC</code>：按 <code>sort</code> 字段的升序对结果进行排序。</li><li><code>LIMIT (#&#123;page&#125; - 1) * #&#123;pageSize&#125;, #&#123;pageSize&#125;</code>：限制返回的结果集范围，从第<code>(#&#123;page&#125; - 1) * #&#123;pageSize&#125;</code> 条记录开始，取 <code>#&#123;pageSize&#125;</code>条记录，实现分页效果。</li></ol><hr><h3 id="新增分类"><a href="#新增分类" class="headerlink" title="新增分类"></a>新增分类</h3><h4 id="接口说明-7"><a href="#接口说明-7" class="headerlink" title="接口说明"></a>接口说明</h4><p>新增分类，后面还有个新增套餐。。。</p><h4 id="接口设计-8"><a href="#接口设计-8" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-7"><a href="#请求方式-7" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-8"><a href="#请求路径-8" class="headerlink" title="请求路径"></a>请求路径</h5><p>/category/add</p><h5 id="请求参数-7"><a href="#请求参数-7" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>是</td><td>分类名称</td></tr><tr><td>sort</td><td>Integer</td><td>是</td><td>顺序</td></tr><tr><td>type</td><td>Integer</td><td>是</td><td>类型</td></tr></tbody></table></div><h5 id="请求示例-7"><a href="#请求示例-7" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;枫丹特色&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-8"><a href="#响应示例-8" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;分类新增成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-8"><a href="#代码实现-8" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-8"><a href="#Controller-8" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">add</span><span class="params">(<span class="meta">@RequestBody</span> Category category)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> categoryService.add(category);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-8"><a href="#Service-8" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增分类</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">add</span><span class="params">(<span class="meta">@RequestBody</span> Category category)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-8"><a href="#ServiceImpl-8" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增菜品</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">add</span><span class="params">(<span class="meta">@RequestBody</span> Category category)</span>&#123;</span><br><span class="line">    categoryService.save(category);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;分类新增成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-8"><a href="#逻辑说明-8" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>参数：<br><code>@RequestBody Category category</code>：表示通过HTTP请求体中传递过来的Category对象。<br>返回值：返回一个<code>Result&lt;String&gt;</code>对象，其中包含新增操作是否成功的信息。<br>代码中的<code>categoryService.save(category)</code>调用了<code>categoryService</code>接口的save方法，将传入的<code>category</code>对象保存到数据库中。无论保存操作是否成功，该方法都会返回一个包含成功消息的结果对象<code>Result.success(&quot;分类新增成功&quot;)</code>。</p><h4 id="SQL语句展示-7"><a href="#SQL语句展示-7" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO category ( id, type, name, sort, create_time, update_time, create_user, update_user ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure><hr><h3 id="删除分类"><a href="#删除分类" class="headerlink" title="删除分类"></a>删除分类</h3><h4 id="接口说明-8"><a href="#接口说明-8" class="headerlink" title="接口说明"></a>接口说明</h4><p>没写批量删除，只是单纯的根据id进行删除</p><h4 id="接口设计-9"><a href="#接口设计-9" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-8"><a href="#请求方式-8" class="headerlink" title="请求方式"></a>请求方式</h5><p>DELETE</p><h5 id="请求路径-9"><a href="#请求路径-9" class="headerlink" title="请求路径"></a>请求路径</h5><p>/category</p><h5 id="请求参数-8"><a href="#请求参数-8" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>分类id</td></tr></tbody></table></div><h5 id="请求示例-8"><a href="#请求示例-8" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>id</td><td>555</td></tr></tbody></table></div><h5 id="响应示例-9"><a href="#响应示例-9" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;删除成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-9"><a href="#代码实现-9" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-9"><a href="#Controller-9" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(Long id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> categoryService.delete(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-9"><a href="#Service-9" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除分类</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-9"><a href="#ServiceImpl-9" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id删除分类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(Long id)</span>&#123;</span><br><span class="line">    LambdaQueryWrapper&lt;Dish&gt; dishLambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    dishLambdaQueryWrapper.eq(Dish::getCategoryId, id);</span><br><span class="line">    <span class="type">int</span> <span class="variable">count1</span> <span class="operator">=</span> (<span class="type">int</span>) dishService.count(dishLambdaQueryWrapper);</span><br><span class="line">    <span class="comment">//查询当前分类是否关联了套餐,如果已经关联,抛出一个业务异常</span></span><br><span class="line">    <span class="keyword">if</span> (count1 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//已经关联菜品,抛出一个业务异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(<span class="string">&quot;当前分类下关联了菜品,不能删除&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    LambdaQueryWrapper&lt;Setmeal&gt; setmealLambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    setmealLambdaQueryWrapper.eq(Setmeal::getCategoryId,id);</span><br><span class="line">    <span class="type">int</span> <span class="variable">count2</span> <span class="operator">=</span> (<span class="type">int</span>) setmealService.count(setmealLambdaQueryWrapper);</span><br><span class="line">    <span class="comment">//查询当前分类是否关联了套餐,如果已经关联,抛出一个业务异常</span></span><br><span class="line">    <span class="keyword">if</span> (count2 &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//已经关联套餐,抛出一个业务异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(<span class="string">&quot;当前分类下关联了套餐,不能删除&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//正常删除分类</span></span><br><span class="line">    categoryService.removeById(id);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-9"><a href="#逻辑说明-9" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，它会查询当前分类是否关联了菜品或套餐，如果有关联，则抛出一个业务异常。如果没有关联，则正常删除分类，并返回删除成功的消息。</p><h4 id="SQL语句展示-8"><a href="#SQL语句展示-8" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM category WHERE id=?</span><br></pre></td></tr></table></figure><hr><h3 id="修改分类"><a href="#修改分类" class="headerlink" title="修改分类"></a>修改分类</h3><h4 id="接口说明-9"><a href="#接口说明-9" class="headerlink" title="接口说明"></a>接口说明</h4><p>根据id进行修改分类信息</p><h4 id="接口设计-10"><a href="#接口设计-10" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-9"><a href="#请求方式-9" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-10"><a href="#请求路径-10" class="headerlink" title="请求路径"></a>请求路径</h5><p>/category/update</p><h5 id="请求参数-9"><a href="#请求参数-9" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>分类id</td></tr><tr><td>name</td><td>String</td><td>是</td><td>分类名称</td></tr><tr><td>sort</td><td>Integer</td><td>是</td><td>顺序</td></tr><tr><td>type</td><td>Integer</td><td>是</td><td>类型</td></tr></tbody></table></div><h5 id="请求示例-9"><a href="#请求示例-9" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月美食&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-10"><a href="#响应示例-10" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;修改成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-10"><a href="#代码实现-10" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-10"><a href="#Controller-10" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> Category category)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> categoryService.update(category);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改分类</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> Category category)</span>;</span><br></pre></td></tr></table></figure><p>ServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改分类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> Category category)</span>&#123;</span><br><span class="line">    categoryService.updateById(category);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-10"><a href="#逻辑说明-10" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>通过接收一个Category类型的请求体参数，调用<code>categoryService</code>的<code>updateById</code>方法来更新分类信息。最后返回一个包含成功消息的结果对象。</p><h4 id="SQL语句展示-9"><a href="#SQL语句展示-9" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE category SET type=?, name=?, sort=?, update_time=?, update_user=? WHERE id=?</span><br></pre></td></tr></table></figure><hr><h3 id="分类列表查询"><a href="#分类列表查询" class="headerlink" title="分类列表查询"></a>分类列表查询</h3><h4 id="接口说明-10"><a href="#接口说明-10" class="headerlink" title="接口说明"></a>接口说明</h4><p>这个接口实际上是给菜品管理用的，用于在新建菜品页面展示分类或者套餐列表，主要的目的是便于管理员选择菜品的分类或者套餐。</p><h4 id="接口设计-11"><a href="#接口设计-11" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-10"><a href="#请求方式-10" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-11"><a href="#请求路径-11" class="headerlink" title="请求路径"></a>请求路径</h5><p>/category/list</p><h5 id="请求参数-10"><a href="#请求参数-10" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>type</td><td>Integer</td><td>是</td><td>类型</td></tr></tbody></table></div><h5 id="请求示例-10"><a href="#请求示例-10" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>type</td><td>1</td></tr></tbody></table></div><h5 id="响应示例-11"><a href="#响应示例-11" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月美食&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-24 14:47:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-24 14:49:21&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主食&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;店长推荐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月风味&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德独家&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;稻妻好食&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;须弥特色&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-11"><a href="#代码实现-11" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-11"><a href="#Controller-11" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;Category&gt;&gt; <span class="title function_">list</span><span class="params">(Category category)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> categoryService.categoryList(category);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-10"><a href="#Service-10" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分类列表</span></span><br><span class="line">Result&lt;List&lt;Category&gt;&gt; <span class="title function_">categoryList</span><span class="params">(Category category)</span>;</span><br></pre></td></tr></table></figure><h6 id="ServiceImpl-10"><a href="#ServiceImpl-10" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分类列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> category</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;Category&gt;&gt; <span class="title function_">categoryList</span><span class="params">(Category category)</span>&#123;</span><br><span class="line">    LambdaQueryWrapper&lt;Category&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(category.getType() != <span class="literal">null</span>,Category::getType,category.getType());</span><br><span class="line">    queryWrapper.orderByAsc(Category::getSort).orderByDesc(Category::getUpdateTime);</span><br><span class="line">    List&lt;Category&gt; list = categoryService.list(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-11"><a href="#逻辑说明-11" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>接收一个<code>Category</code>对象作为参数，根据该对象的<code>type</code>属性进行查询，并按照<code>sort</code>字段升序、<code>updateTime</code>字段降序进行排序，返回查询结果的数组对象。</p><h4 id="SQL语句展示-10"><a href="#SQL语句展示-10" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM category</span><br><span class="line">WHERE type = :type </span><br><span class="line">ORDER BY sort ASC, update_time DESC;</span><br></pre></td></tr></table></figure><p>参数说明</p><p>这里的<code>:type</code>是预编译参数占位符，实际值将由传入的<code>category.getType()</code>提供。</p><hr><h2 id="菜品管理"><a href="#菜品管理" class="headerlink" title="菜品管理"></a>菜品管理</h2><hr><h3 id="Spring框架准备-2"><a href="#Spring框架准备-2" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-2"><a href="#持久层-2" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Dish;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DishMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Dish&gt;&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-2"><a href="#业务层-2" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Dto.DishDto;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Dish;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DishService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Dish&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-2"><a href="#业务层实现类-2" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.BaseContext;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Dto.DishDto;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Category;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Dish;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.DishFlavor;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.DishMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.CategoryService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.DishFlavorService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.DishService;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DishServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;DishMapper, Dish&gt; <span class="keyword">implements</span> <span class="title class_">DishService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DishService dishService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DishFlavorService dishFlavorService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryService categoryService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层-2"><a href="#控制层-2" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Dto.DishDto;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Dish;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.DishService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/dish&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DishController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DishService dishService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="分页查询-2"><a href="#分页查询-2" class="headerlink" title="分页查询"></a>分页查询</h3><h4 id="接口说明-11"><a href="#接口说明-11" class="headerlink" title="接口说明"></a>接口说明</h4><p>分——页！但是有点不同，这次涉及两张表的查询，需要在查询菜品的同时查询菜品的口味信息。这就要开始使用Dto实体类了，然后用stream流进行数据拷贝。多看一下，其实原理也挺简单的。</p><h4 id="接口设计-12"><a href="#接口设计-12" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-11"><a href="#请求方式-11" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-12"><a href="#请求路径-12" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish/page</p><h5 id="请求参数-11"><a href="#请求参数-11" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>page</td><td>Integer</td><td>是</td><td>输入的页码</td></tr><tr><td>pageSize</td><td>Integer</td><td>是</td><td>每页的大小</td></tr><tr><td>name</td><td>String</td><td>否</td><td>菜品名称</td></tr></tbody></table></div><h5 id="请求示例-11"><a href="#请求示例-11" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>page</td><td>1</td></tr><tr><td>pageSize</td><td>10</td></tr><tr><td>name</td></tr></tbody></table></div><h5 id="响应示例-12"><a href="#响应示例-12" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大碗茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">5.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000001&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;215px-大碗茶.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月特色的茶饮。在幅员辽阔的璃月旅行可是一件苦差事，所以当你看到卖大碗茶的茶摊时，只会期望它的茶碗越大越好。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;沉玉茶露&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">12.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000002&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-沉玉茶露.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;常见的璃月香茗。有时，所谓人生，或许就如细品一盏茶汤时所感受到的余味回甘。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;得闲饮茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">40.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000003&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;215px-得闲饮茶.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;嘉明的特色料理。\n排排坐于蒸笼里的是栩栩如生的猊兽包，让人一下子就想到了梅花桩上威武灵动的少年…「发什么呆啊你？饮杯茶先啦，嗱。」说着，笑容爽朗的少年又递过来一个茶杯。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;果果仙酪&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">7.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000004&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-果果仙酪.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;色彩素净的饮品。融合了果味的酸奶制成冰沙，铺成蓝天白云的模样，底部垫着的是厚厚的一层果丁与晶冻。清爽的味道，正是消暑的好选择。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;双果清露&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">7.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000005&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-双果清露.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;拥有双重果味的饮品。先在底部铺上满满的果粒，再倒入融合了茶底和果汁的冰沙，果香清新且富有层次感，没有人能拒绝这样一杯饮品。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;荞麦面&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">12.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2000006&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-荞麦面.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;朴素简单的面食。将荞麦制成的面条水煮后晾凉，入口滑爽，富有韧性。由于原料便宜、制作简单而广受稻妻人民欢迎。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主食&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;桔桔薄饼&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">10.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2000007&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-桔桔薄饼.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;带有馅料的薄饼。先煎好饼皮，再加入果酱、奶油和水果切片。其实做法并不单一，根据加入的食材不同，口味也是五花八门。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主食&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;8&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;米窝窝&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">5.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2000008&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-米窝窝.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;松软弹牙的主食。稻米和马尾磨粉后揉成面团，做出造型后上笼屉蒸熟。除了直接食用以外还有夹菜馅的吃法。方便携带的同时又很能填饱肚子，是璃月地区一道备受欢迎的主食。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主食&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;应急食品&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">999.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3000009&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;应急食品.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;最好的伙伴！&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;店长推荐&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;仙跳墙&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">648.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;40000010&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-仙跳墙.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;工艺复杂的璃月名菜。\n以高汤浸没精心挑选的食材，慢火熬煮而成。仅仅是凭着回忆抄写食谱，就引得仙人动了凡心，归复人间。&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月风味&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-12"><a href="#代码实现-12" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-12"><a href="#Controller-12" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">page</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String name)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.dishPage(page,pageSize,name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-11"><a href="#Service-11" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页查询</span></span><br><span class="line">Result&lt;Page&gt; <span class="title function_">dishPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String name)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-11"><a href="#ServiceImpl-11" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页查询</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pageSize</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Page</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">dishPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String name)</span> &#123;</span><br><span class="line">    Page&lt;Dish&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, pageSize);</span><br><span class="line">    Page&lt;DishDto&gt; dishDtoPage = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;();</span><br><span class="line">    LambdaQueryWrapper&lt;Dish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.orderByDesc(Dish::getUpdateTime);</span><br><span class="line">    queryWrapper.like(StringUtils.isNotEmpty(name), Dish::getName, name);</span><br><span class="line">    dishService.page(pageInfo, queryWrapper);</span><br><span class="line">    <span class="comment">//对象拷贝</span></span><br><span class="line">    BeanUtils.copyProperties(pageInfo, dishDtoPage, <span class="string">&quot;records&quot;</span>);</span><br><span class="line">    List&lt;Dish&gt; records = pageInfo.getRecords();</span><br><span class="line">    List&lt;DishDto&gt; list = records.stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="type">DishDto</span> <span class="variable">dishDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DishDto</span>();</span><br><span class="line">        BeanUtils.copyProperties(item, dishDto);</span><br><span class="line">        <span class="type">Long</span> <span class="variable">categoryId</span> <span class="operator">=</span> item.getCategoryId();<span class="comment">//分类id</span></span><br><span class="line">        <span class="comment">//根据id查询分类对象</span></span><br><span class="line">        <span class="type">Category</span> <span class="variable">category</span> <span class="operator">=</span> categoryService.getById(categoryId);</span><br><span class="line">        <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> category.getName();</span><br><span class="line">        dishDto.setCategoryName(categoryName);</span><br><span class="line">        <span class="keyword">return</span> dishDto;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    dishDtoPage.setRecords(list);</span><br><span class="line">    <span class="keyword">return</span> Result.success(dishDtoPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-12"><a href="#逻辑说明-12" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>这是是一个分页查询函数，根据提供的页码和每页大小以及名称条件，查询符合条件的菜品信息，并返回分页结果。具体实现过程为：创建一个Page对象用于存储分页信息，根据条件构造查询Wrapper并进行分页查询，将查询结果的分页信息拷贝到另一个Page对象中，然后将查询结果的每个菜品对象转换为另一个DTO对象，并设置其分类名称，最后将转换后的结果设置到DTO对象的分页信息中，并返回成功响应结果。</p><h4 id="SQL语句展示-11"><a href="#SQL语句展示-11" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,category_id,price,code,image,description,status,sort,create_time,update_time,create_user,update_user FROM dish WHERE (name LIKE ?) ORDER BY update_time DESC LIMIT ?</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>第一个?表示如果name值不为空，则按照name值进行模糊查询。</li><li><code>orderByDesc(Dish::getUpdateTime)</code>表示按照<code>update_time</code>字段降序排列。</li></ul><hr><h3 id="查询口味信息"><a href="#查询口味信息" class="headerlink" title="查询口味信息"></a>查询口味信息</h3><h4 id="接口说明-12"><a href="#接口说明-12" class="headerlink" title="接口说明"></a>接口说明</h4><p>这个接口的作用就是查询对应的口味信息，在修改菜品时进行回显。</p><h4 id="接口设计-13"><a href="#接口设计-13" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-12"><a href="#请求方式-12" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-13"><a href="#请求路径-13" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish</p><h5 id="请求参数-12"><a href="#请求参数-12" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>菜品id</td></tr></tbody></table></div><h5 id="请求示例-12"><a href="#请求示例-12" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>id</td><td>1</td></tr></tbody></table></div><h5 id="响应示例-13"><a href="#响应示例-13" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大碗茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">5.00</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000001&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;215px-大碗茶.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月特色的茶饮。在幅员辽阔的璃月旅行可是一件苦差事，所以当你看到卖大碗茶的茶摊时，只会期望它的茶碗越大越好。&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;普通菜&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;不甜\&quot;,\&quot;不辣\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-13"><a href="#代码实现-13" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-13"><a href="#Controller-13" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;DishDto&gt; <span class="title function_">getByIdWithFlavor</span><span class="params">(<span class="meta">@RequestParam</span> Long id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.getByIdWithFlavor(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-12"><a href="#Service-12" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询菜品信息和对应的口味信息</span></span><br><span class="line">Result&lt;DishDto&gt; <span class="title function_">getByIdWithFlavor</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-12"><a href="#ServiceImpl-12" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据id查询菜品信息和对应的口味信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> DishDto</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;DishDto&gt; <span class="title function_">getByIdWithFlavor</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    <span class="comment">//查询菜品基本信息,从dish查询</span></span><br><span class="line">    <span class="type">Dish</span> <span class="variable">dish</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(id);</span><br><span class="line">    <span class="comment">//对象拷贝</span></span><br><span class="line">    <span class="type">DishDto</span> <span class="variable">dishDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DishDto</span>();</span><br><span class="line">    BeanUtils.copyProperties(dish,dishDto);</span><br><span class="line">    <span class="comment">//查询当前菜品对应的口味信息 , 从dish_flavor表查询</span></span><br><span class="line">    LambdaQueryWrapper&lt;DishFlavor&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(DishFlavor::getDishId,dish.getId());</span><br><span class="line">    List&lt;DishFlavor&gt; flavors = dishFlavorService.list(queryWrapper);</span><br><span class="line">    dishDto.setFlavors(flavors);</span><br><span class="line">    <span class="keyword">return</span> Result.success(dishDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-13"><a href="#逻辑说明-13" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，通过id查询菜品基本信息，然后将查询到的结果拷贝到<code>DishDto</code>对象中。接着，通过查询条件（菜品id）查询当前菜品对应的口味信息，并将查询结果设置到<code>DishDto</code>对象中。最后，返回一个包含菜品信息和口味信息的<code>Result</code>对象。</p><h4 id="SQL语句展示-12"><a href="#SQL语句展示-12" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,dish_id,name,value,create_time,update_time,create_user,update_user FROM dish_flavor WHERE (dish_id = ?)</span><br></pre></td></tr></table></figure><hr><h3 id="新增菜品"><a href="#新增菜品" class="headerlink" title="新增菜品"></a>新增菜品</h3><h4 id="接口说明-13"><a href="#接口说明-13" class="headerlink" title="接口说明"></a>接口说明</h4><p>和其它的新增大同小异，只要掌握一个就基本会这个了，但是值得注意的是，这次的新增操作需要操作两张表，即<code>dish</code>表以及，<code>dish_flavor</code>表</p><h4 id="接口设计-14"><a href="#接口设计-14" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-13"><a href="#请求方式-13" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-14"><a href="#请求路径-14" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish/add</p><h5 id="请求参数-13"><a href="#请求参数-13" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>是</td><td>菜品名称</td></tr><tr><td>categoryId</td><td>Integer</td><td>是</td><td>菜品分类id</td></tr><tr><td>code</td><td>String</td><td>是</td><td>商品码</td></tr><tr><td>decription</td><td>String</td><td>是</td><td>描述信息</td></tr><tr><td>image</td><td>String</td><td>是</td><td>图片</td></tr><tr><td>price</td><td>number</td><td>是</td><td>菜品价格</td></tr><tr><td>sort</td><td>Integer</td><td>是</td><td>排序</td></tr><tr><td>status</td><td>Integer</td><td>是</td><td>状态</td></tr><tr><td>flavors</td><td>array</td><td>是</td><td>口味</td></tr></tbody></table></div><h5 id="请求示例-13"><a href="#请求示例-13" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;提瓦特煎蛋&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;199999&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;提瓦特特产&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜味&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜，中甜，不甜&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-14"><a href="#响应示例-14" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新增菜品成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-14"><a href="#代码实现-14" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-14"><a href="#Controller-14" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">saveWithFlavor</span><span class="params">(<span class="meta">@RequestBody</span> DishDto dishDto)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.saveWithFlavor(dishDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-13"><a href="#Service-13" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增菜品</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">saveWithFlavor</span><span class="params">(DishDto dishDto)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-13"><a href="#ServiceImpl-13" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增菜品信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dishDto</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">saveWithFlavor</span><span class="params">(DishDto dishDto)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.save(dishDto);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">dishId</span> <span class="operator">=</span> dishDto.getId();<span class="comment">//菜品id</span></span><br><span class="line">    List&lt;DishFlavor&gt; flavors = dishDto.getFlavors();</span><br><span class="line">    flavors = flavors.stream().map((item) -&gt; &#123;</span><br><span class="line">        item.setDishId(dishId);</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">//保存菜品口味数据到菜品口味dish_flavor</span></span><br><span class="line">    dishFlavorService.saveBatch(flavors);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;新增菜品成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-14"><a href="#逻辑说明-14" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先调用save方法保存菜品基本信息，然后根据菜品ID将口味信息与菜品关联，并使用<code>saveBatch</code>方法保存口味信息到数据库。最后返回成功消息。</p><h4 id="SQL语句展示-13"><a href="#SQL语句展示-13" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO dish ( id, name, category_id, price, code, image, description, status, sort, create_time, update_time, create_user, update_user ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure><hr><h3 id="修改菜品"><a href="#修改菜品" class="headerlink" title="修改菜品"></a>修改菜品</h3><h4 id="接口说明-14"><a href="#接口说明-14" class="headerlink" title="接口说明"></a>接口说明</h4><p>根据id修改菜品信息</p><h4 id="接口设计-15"><a href="#接口设计-15" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-14"><a href="#请求方式-14" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-15"><a href="#请求路径-15" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish/update</p><h5 id="请求参数-14"><a href="#请求参数-14" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>菜品id</td></tr><tr><td>name</td><td>String</td><td>是</td><td>菜品名</td></tr><tr><td>categoryId</td><td>Integer</td><td>是</td><td>菜品分类</td></tr><tr><td>code</td><td>String</td><td>是</td><td>商品码</td></tr><tr><td>description</td><td>String</td><td>是</td><td>描述</td></tr><tr><td>image</td><td>String</td><td>是</td><td>图片</td></tr><tr><td>price</td><td>number</td><td>是</td><td>价格</td></tr><tr><td>sort</td><td>Integer</td><td>是</td><td>排序</td></tr><tr><td>flavors</td><td>array</td><td>是</td><td>口味</td></tr></tbody></table></div><h5 id="请求示例-14"><a href="#请求示例-14" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">55</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜甜花酿鸡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;提瓦特的甜甜花酿鸡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">92</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;flavors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">55</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜味&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="number">55</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜，超甜，超级甜&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应参数"><a href="#响应参数" class="headerlink" title="响应参数"></a>响应参数</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;保存成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-15"><a href="#代码实现-15" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-15"><a href="#Controller-15" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateWithFlavor</span><span class="params">(<span class="meta">@RequestBody</span> DishDto dishDto)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.updateWithFlavor(dishDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-14"><a href="#Service-14" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改菜品信息</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">updateWithFlavor</span><span class="params">(DishDto dishDto)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-14"><a href="#ServiceImpl-14" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改菜品信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dishDto</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateWithFlavor</span><span class="params">(DishDto dishDto)</span> &#123;</span><br><span class="line">    <span class="comment">//更新dish表中基本信息</span></span><br><span class="line">    <span class="built_in">this</span>.updateById(dishDto);</span><br><span class="line">    <span class="comment">//清理当前菜品对应的口味数据 -- dish_flavor表的delete操作</span></span><br><span class="line">    LambdaQueryWrapper&lt;DishFlavor&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(DishFlavor::getDishId,dishDto.getId());</span><br><span class="line"></span><br><span class="line">    dishFlavorService.remove(queryWrapper);</span><br><span class="line">    <span class="comment">//添加当前提交过的口味数据 --- dish_flavor表中的insert操作</span></span><br><span class="line">    List&lt;DishFlavor&gt; flavors = dishDto.getFlavors();</span><br><span class="line">    flavors = flavors.stream().map((item) -&gt; &#123;</span><br><span class="line">        item.setDishId(dishDto.getId());</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    dishFlavorService.saveBatch(flavors);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;保存成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-15"><a href="#逻辑说明-15" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ol><li>调用<code>updateById</code>方法更新菜品的基本信息。</li><li>使用<code>LambdaQueryWrapper</code>构建查询条件，查询当前菜品对应的口味数据。</li><li>调用<code>remove</code>方法删除查询到的口味数据。</li><li>将提交的口味数据添加到菜品口味表中。</li><li>调用<code>saveBatch</code>方法保存口味数据。</li><li>返回成功信息。</li></ol><h4 id="SQL语句展示-14"><a href="#SQL语句展示-14" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO dish_flavor ( id, dish_id, name, value, create_time, update_time, create_user, update_user ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure><hr><h3 id="菜品起售，停售"><a href="#菜品起售，停售" class="headerlink" title="菜品起售，停售"></a>菜品起售，停售</h3><h4 id="接口说明-15"><a href="#接口说明-15" class="headerlink" title="接口说明"></a>接口说明</h4><p>修改菜品的状态，可以进行批量起售和停售。</p><h4 id="接口设计-16"><a href="#接口设计-16" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-15"><a href="#请求方式-15" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-16"><a href="#请求路径-16" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish/status</p><h5 id="请求参数-15"><a href="#请求参数-15" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>status</td><td>Integer</td><td>是</td><td>状态</td></tr><tr><td>ids</td><td>array</td><td>是</td><td>ID编号集合</td></tr></tbody></table></div><h5 id="请求示例-15"><a href="#请求示例-15" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>status</td><td>0</td></tr><tr><td>ids</td><td>1</td></tr></tbody></table></div><h5 id="响应示例-15"><a href="#响应示例-15" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;修改成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-16"><a href="#代码实现-16" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-16"><a href="#Controller-16" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/status&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="meta">@RequestParam</span> <span class="type">int</span> status, <span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.status(status,ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-15"><a href="#Service-15" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量停售,起售</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="type">int</span> status, List&lt;Long&gt; ids)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-15"><a href="#ServiceImpl-15" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量停售, 起售</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> status</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="type">int</span> status, List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">empId</span> <span class="operator">=</span> BaseContext.getCurrentId();</span><br><span class="line">    <span class="keyword">for</span> (Long id : ids) &#123;</span><br><span class="line">        LambdaQueryWrapper&lt;Dish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(Dish::getId, id);</span><br><span class="line">        <span class="type">Dish</span> <span class="variable">dish</span> <span class="operator">=</span> dishService.getOne(queryWrapper);</span><br><span class="line">        dish.setStatus(status);</span><br><span class="line">        dish.setCreateUser(empId);</span><br><span class="line">        dishService.updateById(dish);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-16"><a href="#逻辑说明-16" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>根据传入的状态（status）和菜品ID列表（ids），将指定菜品的状态更新为停售或起售，并记录操作人的ID。循环遍历菜品ID列表，根据每个ID查询对应的菜品信息，更新状态和操作人ID后，保存修改。最后返回成功信息。</p><h4 id="SQL语句展示-15"><a href="#SQL语句展示-15" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>根据id查找菜品信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,category_id,price,code,image,description,status,sort,create_time,update_time,create_user,update_user FROM dish WHERE (id = ?)</span><br></pre></td></tr></table></figure></li><li><p>根据id进行更新操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE dish SET name=?, category_id=?, price=?, code=?, image=?, description=?, status=?, sort=?, create_time=?, update_time=?, create_user=?, update_user=? WHERE id=?</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="删除菜品"><a href="#删除菜品" class="headerlink" title="删除菜品"></a>删除菜品</h3><h4 id="接口说明-16"><a href="#接口说明-16" class="headerlink" title="接口说明"></a>接口说明</h4><p>删除~删除~删除~删除~，可以进行批量删除，这里正常是应该限制一下删除，比如说菜品如果关联了套餐就不能删除菜品，我太懒了，一点不想写。</p><h4 id="接口设计-17"><a href="#接口设计-17" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-16"><a href="#请求方式-16" class="headerlink" title="请求方式"></a>请求方式</h5><p>DELETE</p><h5 id="请求路径-17"><a href="#请求路径-17" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish</p><h5 id="请求参数-16"><a href="#请求参数-16" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>ids</td><td>array</td><td>是</td><td>菜品id</td></tr></tbody></table></div><h5 id="请求示例-16"><a href="#请求示例-16" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>ids</td><td>55</td></tr></tbody></table></div><h5 id="响应示例-16"><a href="#响应示例-16" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;删除成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-17"><a href="#代码实现-17" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-17"><a href="#Controller-17" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.delete(ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-16"><a href="#Service-16" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line">Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(List&lt;Long&gt; ids)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-16"><a href="#ServiceImpl-16" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量删除</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (Long id : ids) &#123;</span><br><span class="line">        dishService.removeById(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-17"><a href="#逻辑说明-17" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>传入一个id列表，循环遍历列表中的每个id，并调用<code>dishService.removeById(id)</code>方法进行删除操作。最后返回一个成功提示信息的<code>Result</code>对象。</p><h4 id="SQL语句展示-16"><a href="#SQL语句展示-16" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM dish WHERE id=?</span><br></pre></td></tr></table></figure><hr><h2 id="套餐管理"><a href="#套餐管理" class="headerlink" title="套餐管理"></a>套餐管理</h2><hr><h3 id="Spring框架准备-3"><a href="#Spring框架准备-3" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-3"><a href="#持久层-3" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Setmeal;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SetMealMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Setmeal&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-3"><a href="#业务层-3" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Dto.SetmealDto;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Setmeal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SetMealService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Setmeal&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-3"><a href="#业务层实现类-3" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Dto.SetmealDto;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Category;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Setmeal;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.SetmealDish;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.SetMealMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.CategoryService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.SetMealDishService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.SetMealService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetMealServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;SetMealMapper, Setmeal&gt; <span class="keyword">implements</span> <span class="title class_">SetMealService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SetMealService setMealService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryService categoryService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SetMealDishService setMealDishService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层-3"><a href="#控制层-3" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Dto.SetmealDto;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Setmeal;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.SetMealService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/setmeal&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetMealController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SetMealService setMealService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="新增套餐"><a href="#新增套餐" class="headerlink" title="新增套餐"></a>新增套餐</h3><h4 id="接口说明-17"><a href="#接口说明-17" class="headerlink" title="接口说明"></a>接口说明</h4><p>添加一个新的套餐，需要操作两张表，即<code>setmeal</code>表以及<code>setmealDish</code>表，原理和添加菜品相同。</p><h4 id="接口设计-18"><a href="#接口设计-18" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-17"><a href="#请求方式-17" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-18"><a href="#请求路径-18" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal/add</p><h5 id="请求参数-17"><a href="#请求参数-17" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>是</td><td>套餐名称</td></tr><tr><td>categoryId</td><td>Integer</td><td>是</td><td>菜品分类id</td></tr><tr><td>code</td><td>String</td><td>是</td><td>编码</td></tr><tr><td>decription</td><td>String</td><td>是</td><td>描述信息</td></tr><tr><td>image</td><td>String</td><td>是</td><td>图片</td></tr><tr><td>price</td><td>number</td><td>是</td><td>套餐价格</td></tr><tr><td>status</td><td>integer</td><td>是</td><td>状态</td></tr><tr><td>setmealDishes</td><td>array</td><td>是</td><td>套餐包含的菜品信息</td></tr></tbody></table></div><h5 id="请求示例-17"><a href="#请求示例-17" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德全鸡套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="number">999</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德甄选&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">999</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大碗茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">98</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;沉玉茶露&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">42</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-17"><a href="#响应示例-17" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;新增套餐成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-18"><a href="#代码实现-18" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-18"><a href="#Controller-18" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">saveWithDish</span><span class="params">(<span class="meta">@RequestBody</span> SetmealDto setmealDto)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setMealService.saveWithDish(setmealDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-17"><a href="#Service-17" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">saveWithDish</span><span class="params">(SetmealDto setmealDto)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-17"><a href="#ServiceImpl-17" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">saveWithDish</span><span class="params">(SetmealDto setmealDto)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.save(setmealDto);</span><br><span class="line">    List&lt;SetmealDish&gt; setmealDishes = setmealDto.getSetmealDishes();</span><br><span class="line">    setmealDishes.stream().map((item) -&gt; &#123;</span><br><span class="line">        item.setSetmealId(setmealDto.getId());</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    setMealDishService.saveBatch(setmealDishes);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;新增套餐成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-18"><a href="#逻辑说明-18" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ol><li>调用<code>this.save(setmealDto)</code>保存套餐信息。</li><li>通过<code>setmealDto.getSetmealDishes()</code>获取套餐所包含的菜品列表。</li><li>使用<code>Stream API</code>遍历菜品列表，为每个菜品设置套餐ID为<code>setmealDto.getId()</code>，并将其返回作为Stream的元素。</li><li>使用<code>Collectors.toList()</code>将Stream转换为List，将设置好套餐ID的菜品列表保存到数据库中，调用的方法为<code>setMealDishService.saveBatch(setmealDishes)</code>。</li><li>返回一个成功结果，包含消息”新增套餐成功”，类型为<code>Result&lt;String&gt;</code>。</li></ol><h4 id="SQL语句展示-17"><a href="#SQL语句展示-17" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO setmeal_dish ( id, setmeal_id, dish_id, name, price, copies, create_time, update_time, create_user, update_user ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure><hr><h3 id="套餐禁用，启用"><a href="#套餐禁用，启用" class="headerlink" title="套餐禁用，启用"></a>套餐禁用，启用</h3><h4 id="接口说明-18"><a href="#接口说明-18" class="headerlink" title="接口说明"></a>接口说明</h4><p>这里写了批量修改，如果不加批量修改就可以和修改套餐写在一起。</p><h4 id="接口设计-19"><a href="#接口设计-19" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-18"><a href="#请求方式-18" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-19"><a href="#请求路径-19" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal/status/{status}</p><h5 id="请求参数-18"><a href="#请求参数-18" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>ids</td><td>array</td><td>是</td><td>id数组</td></tr><tr><td>status</td><td>Integer</td><td>是</td><td>状态</td></tr></tbody></table></div><h5 id="请求示例-18"><a href="#请求示例-18" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>ids</td><td>999</td></tr><tr><td>status</td><td>0</td></tr></tbody></table></div><h5 id="响应示例-18"><a href="#响应示例-18" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;修改菜品状态成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-19"><a href="#代码实现-19" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-19"><a href="#Controller-19" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/status/&#123;status&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">status</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">int</span> status, <span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setMealService.updateStatus(status, ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-18"><a href="#Service-18" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">updateStatus</span><span class="params">(Integer status, List&lt;Long&gt; ids)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-18"><a href="#ServiceImpl-18" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateStatus</span><span class="params">(Integer status, List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    LambdaUpdateWrapper&lt;Setmeal&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">LambdaUpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper.set(Setmeal::getStatus, status).in(Setmeal::getId, ids);</span><br><span class="line">    setMealService.update(updateWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;修改菜品状态成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-19"><a href="#逻辑说明-19" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>函数内部通过构造<code>LambdaUpdateWrapper</code>对象，设置更新条件为ID在输入列表中且状态为输入状态值，然后调用<code>setMealService</code>的<code>update</code>方法执行更新操作。最后返回一个表示操作成功的Result对象。</p><h4 id="SQL语句展示-18"><a href="#SQL语句展示-18" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE setmeal SET status=? WHERE (id IN (?))</span><br></pre></td></tr></table></figure><hr><h3 id="修改套餐"><a href="#修改套餐" class="headerlink" title="修改套餐"></a>修改套餐</h3><h4 id="接口说明-19"><a href="#接口说明-19" class="headerlink" title="接口说明"></a>接口说明</h4><p>和之前一样，根据id修改就行了，但是要注意是操作两张表~~</p><h4 id="接口设计-20"><a href="#接口设计-20" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-19"><a href="#请求方式-19" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-20"><a href="#请求路径-20" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal/update</p><h5 id="请求参数-19"><a href="#请求参数-19" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>套餐id</td></tr><tr><td>name</td><td>String</td><td>是</td><td>套餐名</td></tr><tr><td>categoryId</td><td>Integer</td><td>是</td><td>菜品分类id</td></tr><tr><td>code</td><td>String</td><td>是</td><td>编码</td></tr><tr><td>decription</td><td>String</td><td>是</td><td>描述</td></tr><tr><td>image</td><td>String</td><td>是</td><td>图片</td></tr><tr><td>price</td><td>number</td><td>是</td><td>价格</td></tr><tr><td>setmealDishes</td><td>array</td><td>是</td><td>套餐中的菜品</td></tr></tbody></table></div><h5 id="请求示例-19"><a href="#请求示例-19" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">999</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德全鸡套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="number">999</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德甄选套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">999</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大碗茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">98</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;沉玉茶露&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">42</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-19"><a href="#响应示例-19" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;修改套餐成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-20"><a href="#代码实现-20" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-20"><a href="#Controller-20" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateWithDish</span><span class="params">(<span class="meta">@RequestBody</span> SetmealDto setmealDto)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setMealService.updateWithDish(setmealDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-19"><a href="#Service-19" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">updateWithDish</span><span class="params">(SetmealDto setmealDto)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-19"><a href="#ServiceImpl-19" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateWithDish</span><span class="params">(SetmealDto setmealDto)</span> &#123;</span><br><span class="line">    setMealService.updateById(setmealDto);</span><br><span class="line">    <span class="comment">// 先删除原来的套餐所对应的菜品数据。</span></span><br><span class="line">    LambdaQueryWrapper&lt;SetmealDish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(SetmealDish::getSetmealId, setmealDto.getId());</span><br><span class="line">    setMealDishService.remove(queryWrapper);</span><br><span class="line">    <span class="comment">// 更新套餐关联菜品信息。setmeal_dish表。</span></span><br><span class="line">    <span class="comment">// Field &#x27;setmeal_id&#x27; doesn&#x27;t have a default value] with root cause</span></span><br><span class="line">    <span class="comment">// 所以需要处理setmeal_id字段。</span></span><br><span class="line">    <span class="comment">// 先获得套餐所对应的菜品集合。</span></span><br><span class="line">    List&lt;SetmealDish&gt; setmealDishes = setmealDto.getSetmealDishes();</span><br><span class="line">    <span class="comment">//每一个item为SetmealDish对象。</span></span><br><span class="line">    setmealDishes = setmealDishes.stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="comment">//设置setmeal_id字段。</span></span><br><span class="line">        item.setSetmealId(setmealDto.getId());</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="comment">// 重新保存套餐对应菜品数据</span></span><br><span class="line">    setMealDishService.saveBatch(setmealDishes);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;修改套餐成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-20"><a href="#逻辑说明-20" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，通过<code>setMealService.updateById(setmealDto)</code>更新套餐的基本信息。然后，使用<code>LambdaQueryWrapper</code>查询并删除该套餐之前的菜品信息。接着，通过处理<code>setmealDto.getSetmealDishes()</code>获取新的菜品集合，并为每个菜品设置套餐ID。最后，通过<code>setMealDishService.saveBatch(setmealDishes)</code>保存新的菜品信息，并返回成功提示。</p><h4 id="SQL语句展示-19"><a href="#SQL语句展示-19" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>先更新数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE setmeal SET category_id=?, name=?, price=?, status=?, code=?, description=?, image=?, update_time=?, update_user=? WHERE id=?</span><br></pre></td></tr></table></figure></li><li><p>删除原来的菜品数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM setmeal_dish WHERE (setmeal_id = ?)</span><br></pre></td></tr></table></figure></li><li><p>存储新的菜品数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO <span class="title function_">setmeal_dish</span> <span class="params">( id, setmeal_id, dish_id, name, price, copies, create_time, update_time, create_user, update_user )</span> VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="分页查询-3"><a href="#分页查询-3" class="headerlink" title="分页查询"></a>分页查询</h3><h4 id="接口说明-20"><a href="#接口说明-20" class="headerlink" title="接口说明"></a>接口说明</h4><p>查询，分页，注意查两张表就好了。</p><h4 id="接口设计-21"><a href="#接口设计-21" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-20"><a href="#请求方式-20" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-21"><a href="#请求路径-21" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal/page</p><h5 id="请求参数-20"><a href="#请求参数-20" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>page</td><td>Integer</td><td>是</td><td>输入的页码</td></tr><tr><td>pageSize</td><td>Integer</td><td>是</td><td>每页的大小</td></tr><tr><td>name</td><td>String</td><td>否</td><td>套餐的名称</td></tr></tbody></table></div><h5 id="请求示例-20"><a href="#请求示例-20" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>page</td><td>1</td></tr><tr><td>pageSize</td><td>10</td></tr><tr><td>name</td></tr></tbody></table></div><h5 id="响应示例-20"><a href="#响应示例-20" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德全鸡套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">999.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德甄选套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:26:14&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;茶点&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1688.88</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;741&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不甜不辣正常菜&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;babaofuluya.jpg\&quot;,\&quot;rouroukaomogupisa.jpg\&quot;,\&quot;cishenpinan.jpg\&quot;,\&quot;huangyouxiexie.jpg\&quot;,\&quot;tianshurou.jpg\&quot;,\&quot;yueliangpai.jpg\&quot;,\&quot;xiantiaoqiang.jpg\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主食&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1788.88</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;852&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不同程度的辣&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;yangzahajisi.jpg\&quot;,\&quot;weixiji.jpg\&quot;,\&quot;chaojizhizunpisa.jpg\&quot;,\&quot;tangduerkaoji.jpg\&quot;,\&quot;larouwowotou.jpg\&quot;,\&quot;dahuangjinshunzhiji.jpg\&quot;,\&quot;feiyushijindai.jpg\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;店长推荐&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1988.88</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;963&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不同程度的甜&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;qianlingmusi.jpg\&quot;,\&quot;shourouxiangxiang.jpg\&quot;,\&quot;fengnianyouyu.jpg\&quot;,\&quot;jidouhua.jpg\&quot;,\&quot;hailangpai.jpg\&quot;,\&quot;haungjinxie.jpg\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-21"><a href="#代码实现-21" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-21"><a href="#Controller-21" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">page</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String name)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setMealService.setMealPage(page, pageSize, name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-20"><a href="#Service-20" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;Page&gt; <span class="title function_">setMealPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String name)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-20"><a href="#ServiceImpl-20" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">setMealPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String name)</span> &#123;</span><br><span class="line">    Page&lt;Setmeal&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, pageSize);</span><br><span class="line">    Page&lt;SetmealDto&gt; dtoPage = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, pageSize);</span><br><span class="line">    LambdaQueryWrapper&lt;Setmeal&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.like(name != <span class="literal">null</span>, Setmeal::getName, name);</span><br><span class="line">    queryWrapper.orderByDesc(Setmeal::getUpdateTime);</span><br><span class="line">    setMealService.page(pageInfo, queryWrapper);</span><br><span class="line">    BeanUtils.copyProperties(pageInfo, dtoPage, <span class="string">&quot;records&quot;</span>);</span><br><span class="line">    List&lt;Setmeal&gt; records = pageInfo.getRecords();</span><br><span class="line">    List&lt;SetmealDto&gt; list = records.stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="type">SetmealDto</span> <span class="variable">setmealDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SetmealDto</span>();</span><br><span class="line">        BeanUtils.copyProperties(item, setmealDto);</span><br><span class="line">        <span class="type">Long</span> <span class="variable">categoryId</span> <span class="operator">=</span> item.getCategoryId();</span><br><span class="line">        <span class="type">Category</span> <span class="variable">category</span> <span class="operator">=</span> categoryService.getById(categoryId);</span><br><span class="line">        <span class="keyword">if</span>(category != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">categoryName</span> <span class="operator">=</span> category.getName();</span><br><span class="line">            setmealDto.setName(categoryName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> setmealDto;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    dtoPage.setRecords(list);</span><br><span class="line">    <span class="keyword">return</span> Result.success(dtoPage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-21"><a href="#逻辑说明-21" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ol><li>创建<code>Page&lt;Setmeal&gt;</code>对象和<code>Page&lt;SetmealDto&gt;</code>对象，用于存储查询结果和转换后的数据。</li><li>使用<code>LambdaQueryWrapper</code>构建查询条件，根据给定的餐品名进行模糊查询，并按更新时间倒序排序。</li><li>调用<code>setMealService.page()</code>方法进行分页查询，并将查询结果填充到<code>pageInfo</code>对象中。</li><li>使用<code>BeanUtils.copyProperties()</code>方法将<code>pageInfo</code>对象的属性值复制到<code>dtoPage</code>对象中，排除<code>records</code>属性。</li><li>获取查询结果中的记录列表，并使用<code>stream</code>流遍历每条记录。</li><li>创建<code>SetmealDto</code>对象，并将记录对象的属性值复制到<code>setmealDto</code>对象中。</li><li>获取记录对象的<code>categoryId</code>属性，调用<code>categoryService.getById()</code>方法查询对应的分类信息。</li><li>如果分类信息不为空，则将分类名称赋值给<code>setmealDto</code>对象的<code>name</code>属性。</li><li>将处理后的<code>setmealDto</code>对象添加到list列表中。</li><li>将list列表设置为<code>dtoPage</code>对象的<code>records</code>属性。</li><li>返回带有转换后的分页信息的<code>Result</code>对象。</li></ol><h4 id="SQL语句展示-20"><a href="#SQL语句展示-20" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>查询所有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*) AS total FROM setmeal</span><br></pre></td></tr></table></figure></li><li><p>再一条条查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,category_id,name,price,status,code,description,image,create_time,update_time,create_user,update_user FROM setmeal ORDER BY update_time DESC LIMIT ?</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="查询套餐"><a href="#查询套餐" class="headerlink" title="查询套餐"></a>查询套餐</h3><h4 id="接口说明-21"><a href="#接口说明-21" class="headerlink" title="接口说明"></a>接口说明</h4><p>用于修改套餐时回显数据。</p><h4 id="接口设计-22"><a href="#接口设计-22" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-21"><a href="#请求方式-21" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-22"><a href="#请求路径-22" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal/{id}</p><h5 id="请求参数-21"><a href="#请求参数-21" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>套餐id</td></tr></tbody></table></div><h5 id="请求示例-21"><a href="#请求示例-21" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>id</td><td>999</td></tr></tbody></table></div><h5 id="响应示例-21"><a href="#响应示例-21" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德全鸡套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">999.00</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德甄选套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:26:14&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;setmealDishes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1783359714126733313&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;setmealId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大碗茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">98.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1783359714126733314&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;setmealId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;沉玉茶露&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">42.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;copies&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;categoryName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-22"><a href="#代码实现-22" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-22"><a href="#Controller-22" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"> <span class="keyword">public</span> Result&lt;SetmealDto&gt; <span class="title function_">getByIdWithDish</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span>&#123;</span><br><span class="line">     <span class="keyword">return</span> setMealService.getByIdWithDish(id);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h5 id="Service-21"><a href="#Service-21" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;SetmealDto&gt; <span class="title function_">getByIdWithDish</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-21"><a href="#ServiceImpl-21" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;SetmealDto&gt; <span class="title function_">getByIdWithDish</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    <span class="type">Setmeal</span> <span class="variable">setmeal</span> <span class="operator">=</span> setMealService.getById(id);</span><br><span class="line">    <span class="type">SetmealDto</span> <span class="variable">setmealDto</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SetmealDto</span>();</span><br><span class="line">    BeanUtils.copyProperties(setmeal, setmealDto);</span><br><span class="line">    LambdaQueryWrapper&lt;SetmealDish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(SetmealDish::getSetmealId, id);</span><br><span class="line">    List&lt;SetmealDish&gt; setmealDishList = setMealDishService.list(queryWrapper);</span><br><span class="line">    <span class="comment">//设置套餐菜品属性</span></span><br><span class="line">    setmealDto.setSetmealDishes(setmealDishList);</span><br><span class="line">    <span class="keyword">return</span> Result.success(setmealDto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-22"><a href="#逻辑说明-22" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，通过<code>setMealService.getById(id)</code>获取指定ID的套餐信息，然后使用<code>BeanUtils.copyProperties(setmeal, setmealDto)</code>将套餐实体类的属性复制到套餐DTO（数据传输对象）中。接下来，使用<code>LambdaQueryWrapper</code>查询指定套餐ID的所有菜品信息，并将查询结果设置到套餐DTO的<code>setmealDishes</code>属性中。最后，通过<code>Result.success(setmealDto)</code>返回一个包含套餐DTO的成功结果。</p><h4 id="SQL语句展示-21"><a href="#SQL语句展示-21" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,setmeal_id,dish_id,name,price,copies,sort,create_time,update_time,create_user,update_user FROM setmeal_dish WHERE (setmeal_id = ?)</span><br></pre></td></tr></table></figure><hr><h3 id="套餐列表"><a href="#套餐列表" class="headerlink" title="套餐列表"></a>套餐列表</h3><h4 id="接口说明-22"><a href="#接口说明-22" class="headerlink" title="接口说明"></a>接口说明</h4><p>套餐的下拉框列表请求。</p><h4 id="接口设计-23"><a href="#接口设计-23" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-22"><a href="#请求方式-22" class="headerlink" title="请求方式"></a>请求方式</h5><p>GRT</p><h5 id="请求路径-23"><a href="#请求路径-23" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal/list</p><h5 id="请求参数-22"><a href="#请求参数-22" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>status</td><td>Integer</td><td>是</td><td>主键</td></tr></tbody></table></div><h5 id="请求示例-22"><a href="#请求示例-22" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>status</td><td>1</td></tr></tbody></table></div><h5 id="响应示例-22"><a href="#响应示例-22" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德全鸡套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">999.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蒙德甄选套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:26:14&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-25 12:57:44&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;吃太饱套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1688.88</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;741&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不甜不辣正常菜&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;babaofuluya.jpg\&quot;,\&quot;rouroukaomogupisa.jpg\&quot;,\&quot;cishenpinan.jpg\&quot;,\&quot;huangyouxiexie.jpg\&quot;,\&quot;tianshurou.jpg\&quot;,\&quot;yueliangpai.jpg\&quot;,\&quot;xiantiaoqiang.jpg\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;吃不饱套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1788.88</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;852&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不同程度的辣&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;yangzahajisi.jpg\&quot;,\&quot;weixiji.jpg\&quot;,\&quot;chaojizhizunpisa.jpg\&quot;,\&quot;tangduerkaoji.jpg\&quot;,\&quot;larouwowotou.jpg\&quot;,\&quot;dahuangjinshunzhiji.jpg\&quot;,\&quot;feiyushijindai.jpg\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;一般饱套餐&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">1988.88</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;963&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;不同程度的甜&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[\&quot;qianlingmusi.jpg\&quot;,\&quot;shourouxiangxiang.jpg\&quot;,\&quot;fengnianyouyu.jpg\&quot;,\&quot;jidouhua.jpg\&quot;,\&quot;hailangpai.jpg\&quot;,\&quot;haungjinxie.jpg\&quot;]&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-05-27 09:49:16&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-23"><a href="#代码实现-23" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-23"><a href="#Controller-23" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;Setmeal&gt;&gt; <span class="title function_">list</span><span class="params">(Setmeal setmeal)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setMealService.setMealList(setmeal);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-22"><a href="#Service-22" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;List&lt;Setmeal&gt;&gt; <span class="title function_">setMealList</span><span class="params">(Setmeal setmeal)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-22"><a href="#ServiceImpl-22" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;Setmeal&gt;&gt; <span class="title function_">setMealList</span><span class="params">(Setmeal setmeal)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;Setmeal&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(setmeal.getCategoryId() != <span class="literal">null</span>, Setmeal::getCategoryId, setmeal.getCategoryId());</span><br><span class="line">    queryWrapper.eq(setmeal.getStatus() != <span class="literal">null</span>, Setmeal::getStatus, setmeal.getStatus());</span><br><span class="line">    queryWrapper.orderByDesc(Setmeal::getUpdateTime);</span><br><span class="line">    List&lt;Setmeal&gt; list = setMealService.list(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-23"><a href="#逻辑说明-23" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>根据传入的<code>Setmeal</code>对象中的<code>categoryId</code>和<code>status</code>进行查询，查询结果按照更新时间倒序排序。最终将查询结果封装成<code>Result</code>对象并返回。</p><h4 id="SQL语句展示-22"><a href="#SQL语句展示-22" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,category_id,name,price,status,code,description,image,create_time,update_time,create_user,update_user FROM setmeal ORDER BY update_time DESC</span><br></pre></td></tr></table></figure><hr><h3 id="删除套餐"><a href="#删除套餐" class="headerlink" title="删除套餐"></a>删除套餐</h3><h4 id="接口说明-23"><a href="#接口说明-23" class="headerlink" title="接口说明"></a>接口说明</h4><p>批量删除，注意要操作两张表。</p><h4 id="接口设计-24"><a href="#接口设计-24" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-23"><a href="#请求方式-23" class="headerlink" title="请求方式"></a>请求方式</h5><p>DELETE</p><h5 id="请求路径-24"><a href="#请求路径-24" class="headerlink" title="请求路径"></a>请求路径</h5><p>/setmeal</p><h5 id="请求参数-23"><a href="#请求参数-23" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>ids</td><td>array</td><td>是</td><td>菜品id</td></tr></tbody></table></div><h5 id="请求示例-23"><a href="#请求示例-23" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>ids</td><td>555</td></tr></tbody></table></div><h5 id="响应示例-23"><a href="#响应示例-23" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;删除成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-24"><a href="#代码实现-24" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-24"><a href="#Controller-24" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> setMealService.removeWithDish(ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-23"><a href="#Service-23" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">removeWithDish</span><span class="params">( List&lt;Long&gt; ids)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-23"><a href="#ServiceImpl-23" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">removeWithDish</span><span class="params">(List&lt;Long&gt; ids)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;Setmeal&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>();</span><br><span class="line">    queryWrapper.in(Setmeal::getId, ids);</span><br><span class="line">    queryWrapper.eq(Setmeal::getStatus, <span class="number">1</span>);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> setMealService.count(queryWrapper);</span><br><span class="line">    <span class="keyword">if</span>(count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(<span class="string">&quot;套餐正在售卖中, 不能删除&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.removeByIds(ids);</span><br><span class="line">    LambdaQueryWrapper&lt;SetmealDish&gt; lambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    lambdaQueryWrapper.in(SetmealDish::getSetmealId, ids);</span><br><span class="line">    setMealDishService.remove(lambdaQueryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;套餐删除成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-24"><a href="#逻辑说明-24" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，根据传入的ID列表查询状态为1（正在售卖中）的套餐数量，如果数量大于0，则抛出自定义异常。然后，通过<code>removeByIds</code>方法删除套餐信息，再通过<code>LambdaQueryWrapper</code>查询与所删除套餐ID相关的菜品，并使用<code>remove</code>方法删除这些菜品。最后，返回一个成功提示信息。</p><h4 id="SQL语句展示-23"><a href="#SQL语句展示-23" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>删除setmeal表中的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM setmeal WHERE id IN ( ? )</span><br></pre></td></tr></table></figure></li><li><p>删除Setmeal_dish表中的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM setmeal_dish WHERE (setmeal_id IN (?))</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="订单管理"><a href="#订单管理" class="headerlink" title="订单管理"></a>订单管理</h2><hr><h3 id="Spring框架准备-4"><a href="#Spring框架准备-4" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-4"><a href="#持久层-4" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Orders;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Orders&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-4"><a href="#业务层-4" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.Orders;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Orders&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-4"><a href="#业务层实现类-4" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.IdWorker;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.BaseContext;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.*;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.OrderMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;OrderMapper, Orders&gt; <span class="keyword">implements</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ShoppingCartService shoppingCartService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AddressBookService addressBookService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderDetailService orderDetailService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="分页查询-4"><a href="#分页查询-4" class="headerlink" title="分页查询"></a>分页查询</h3><h4 id="接口说明-24"><a href="#接口说明-24" class="headerlink" title="接口说明"></a>接口说明</h4><p>管理端的订单分页查询</p><h4 id="接口设计-25"><a href="#接口设计-25" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-24"><a href="#请求方式-24" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-25"><a href="#请求路径-25" class="headerlink" title="请求路径"></a>请求路径</h5><p>/order/page</p><h5 id="请求参数-24"><a href="#请求参数-24" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>page</td><td>Integer</td><td>是</td><td>页码</td></tr><tr><td>pageSize</td><td>Integer</td><td>是</td><td>每页大小</td></tr><tr><td>number</td><td>String</td><td>否</td><td>订单号</td></tr><tr><td>beginTime</td><td>String</td><td>否</td><td>起始时间</td></tr><tr><td>endTime</td><td>String</td><td>否</td><td>结束时间</td></tr></tbody></table></div><h5 id="请求示例-24"><a href="#请求示例-24" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>page</td><td>1</td></tr><tr><td>pageSize</td><td>10</td></tr><tr><td>number</td><td></td></tr><tr><td>beginTime</td><td></td></tr><tr><td>endTime</td></tr></tbody></table></div><h5 id="响应示例-24"><a href="#响应示例-24" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;addressBookId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;orderTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-01 11:25:02&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;checkoutTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-10 11:25:02&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;payMethod&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">11.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;用户1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-25"><a href="#代码实现-25" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-25"><a href="#Controller-25" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">orderPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String number, String beginTime, String endTime)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orderService.orderPage(page,pageSize,number,beginTime,endTime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-24"><a href="#Service-24" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;Page&gt; <span class="title function_">orderPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String number, String beginTime, String endTime)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-24"><a href="#ServiceImpl-24" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&gt; <span class="title function_">orderPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize, String number, String beginTime, String endTime)</span>&#123;</span><br><span class="line">    <span class="comment">//构造分页构造器</span></span><br><span class="line">    Page&lt;Orders&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>(page,pageSize);</span><br><span class="line">    <span class="comment">//构造条件构造器</span></span><br><span class="line">    LambdaQueryWrapper&lt;Orders&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//添加过滤条件</span></span><br><span class="line">    queryWrapper.like(number != <span class="literal">null</span>,Orders::getId, number);</span><br><span class="line">    queryWrapper.ge(beginTime != <span class="literal">null</span>,Orders::getOrderTime,beginTime);</span><br><span class="line">    queryWrapper.le(endTime != <span class="literal">null</span>,Orders::getOrderTime,endTime);</span><br><span class="line">    <span class="comment">//添加排序条件</span></span><br><span class="line">    queryWrapper.orderByDesc(Orders::getCheckoutTime);</span><br><span class="line">    <span class="comment">//执行查询</span></span><br><span class="line">    orderService.page(pageInfo,queryWrapper);</span><br><span class="line">    List&lt;Orders&gt; records = pageInfo.getRecords();</span><br><span class="line">    records = records.stream().map((item) -&gt; &#123;</span><br><span class="line">        item.setUserName(<span class="string">&quot;用户&quot;</span> + item.getUserId());</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-25"><a href="#逻辑说明-25" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ol><li>函数通过接收<code>page</code>和<code>pageSize</code>参数来确定分页信息。</li><li>根据传入的<code>number</code>、<code>beginTime</code>和<code>endTime</code>参数来构造查询条件。</li><li>使用<code>LambdaQueryWrapper</code>来添加过滤条件，如根据订单ID模糊查询、根据下单时间范围查询。</li><li>添加排序条件，按照支付时间倒序排序。</li><li>调用<code>orderService.page</code>方法执行查询，并将查询结果封装到Page对象中。</li><li>对查询结果进行处理，将每个订单的用户ID转换为”用户+用户ID”的格式。</li><li>最后，将处理后的分页信息封装成Result对象并返回。</li></ol><h4 id="SQL语句展示-24"><a href="#SQL语句展示-24" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,number,status,user_id,address_book_id,order_time,checkout_time,pay_method,amount,remark,user_name,phone,address,consignee FROM orders ORDER BY checkout_time DESC LIMIT ?</span><br></pre></td></tr></table></figure><hr><h3 id="派送订单"><a href="#派送订单" class="headerlink" title="派送订单"></a>派送订单</h3><h4 id="接口说明-25"><a href="#接口说明-25" class="headerlink" title="接口说明"></a>接口说明</h4><p>管理端选择订单的状态并修改，其实就跟禁用菜品之类的差不多，都是根据id进行修改状态码</p><h4 id="接口设计-26"><a href="#接口设计-26" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-25"><a href="#请求方式-25" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-26"><a href="#请求路径-26" class="headerlink" title="请求路径"></a>请求路径</h5><p>/order/send</p><h5 id="请求参数-25"><a href="#请求参数-25" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>订单号</td></tr><tr><td>status</td><td>Integer</td><td>是</td><td>状态码</td></tr></tbody></table></div><h5 id="请求示例-25"><a href="#请求示例-25" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-25"><a href="#响应示例-25" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;订单派送成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-26"><a href="#代码实现-26" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-26"><a href="#Controller-26" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/send&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">sendOrder</span><span class="params">(<span class="meta">@RequestBody</span> Orders orders)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orderService.sendOrder(orders);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-25"><a href="#Service-25" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">sendOrder</span><span class="params">(Orders orders)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-25"><a href="#ServiceImpl-25" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">sendOrder</span><span class="params">(<span class="meta">@RequestBody</span> Orders orders)</span>&#123;</span><br><span class="line">    <span class="comment">//构造条件构造器</span></span><br><span class="line">    LambdaUpdateWrapper&lt;Orders&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">LambdaUpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//添加过滤条件</span></span><br><span class="line">    updateWrapper.eq(Orders::getId, orders.getId());</span><br><span class="line">    updateWrapper.set(Orders::getStatus,orders.getStatus());</span><br><span class="line">    orderService.update(updateWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;订单派送成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-26"><a href="#逻辑说明-26" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>接收一个订单对象<code>orders</code>，根据订单对象的id和status属性来更新数据库中对应订单的状态。最后返回一个包含成功消息的结果对象。</p><h4 id="SQL语句展示-25"><a href="#SQL语句展示-25" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE orders SET status=? WHERE (id = ?)</span><br></pre></td></tr></table></figure><hr><h2 id="文件上传下载"><a href="#文件上传下载" class="headerlink" title="文件上传下载"></a>文件上传下载</h2><hr><h3 id="整体代码"><a href="#整体代码" class="headerlink" title="整体代码"></a>整体代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/common&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;tivat.path&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String basePath;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">upload</span><span class="params">(MultipartFile file)</span> &#123;</span><br><span class="line">        log.info(file.toString());</span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="type">String</span> <span class="variable">suffix</span> <span class="operator">=</span> originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> UUID.randomUUID().toString() + suffix;</span><br><span class="line">        <span class="type">File</span> <span class="variable">dir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(basePath);</span><br><span class="line">        <span class="keyword">if</span> (!dir.exists()) &#123;</span><br><span class="line">            dir.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            file.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(basePath + fileName));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.success(fileName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/download&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(String name, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(basePath + name));</span><br><span class="line">            <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">            response.setContentType(<span class="string">&quot;image/jpg&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> ((len = fileInputStream.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                outputStream.write(bytes, <span class="number">0</span>, len);</span><br><span class="line">                outputStream.flush();</span><br><span class="line">            &#125;</span><br><span class="line">            outputStream.close();</span><br><span class="line">            fileInputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="上传逻辑"><a href="#上传逻辑" class="headerlink" title="上传逻辑"></a>上传逻辑</h3><ol><li>使用<code>@PostMapping(&quot;/upload&quot;)</code>注解指定该方法是一个处理POST请求的方法，请求路径为/upload。</li><li>方法的参数为一个<code>MultipartFile</code>类型的file，用于接收上传的文件。</li><li>使用<code>log.info(file.toString());</code>打印上传文件的信息。</li><li>使用<code>file.getOriginalFilename()</code>获取上传文件的原始名称，并通过<code>substring</code>和<code>lastIndexOf</code>方法获取文件的后缀名。</li><li>生成一个唯一的文件名<code>fileName</code>，由UUID和文件后缀名组成。</li><li>创建一个File对象dir，指定保存上传文件的路径。</li><li>使用<code>dir.exists()</code>判断文件夹是否存在，如果不存在，则调用<code>dir.mkdirs()</code>创建多个文件夹。</li><li>使用<code>file.transferTo(new File(basePath + fileName))</code>将上传的文件保存到指定路径。</li><li>如果保存过程中出现<code>IOException</code>异常，则打印异常信息。</li><li>最后，使用<code>Result.success(fileName)</code>返回保存文件的名称。</li></ol><h3 id="下载逻辑"><a href="#下载逻辑" class="headerlink" title="下载逻辑"></a>下载逻辑</h3><ol><li>根据传入的文件名name和基础路径basePath创建File对象。</li><li>获取response的输出流ServletOutputStream。</li><li>设置响应的内容类型为image/jpg。</li><li>创建一个字节数组缓冲区，用于存储从文件中读取的数据。</li><li>使用FileInputStream读取文件内容，循环将读取到的数据写入输出流。</li><li>刷新和关闭输出流，关闭文件输入流。</li><li>若发生异常，打印异常信息</li></ol><hr><h1 id="用户端"><a href="#用户端" class="headerlink" title="用户端"></a>用户端</h1><hr><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><hr><h3 id="Spring框架准备-5"><a href="#Spring框架准备-5" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-5"><a href="#持久层-5" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-5"><a href="#业务层-5" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.User;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.VO.UserVO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-5"><a href="#业务层实现类-5" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.BaseContext;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.User;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.VO.UserVO;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Utils.JWTUtils;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Utils.ValidateCodeUtils;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层-4"><a href="#控制层-4" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.User;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.VO.UserVO;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.UserService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h3><h4 id="接口说明-26"><a href="#接口说明-26" class="headerlink" title="接口说明"></a>接口说明</h4><p>用户通过手机号登录，正常是应该生成一个随机的验证码，但是这里我偷懒了，将验证码固定为1234。<br>如果该用户在数据库中不存在，那就直接注册，并设置用户的默认信息。</p><h4 id="接口设计-27"><a href="#接口设计-27" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-26"><a href="#请求方式-26" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径-27"><a href="#请求路径-27" class="headerlink" title="请求路径"></a>请求路径</h5><p>/user/login</p><h5 id="请求参数-26"><a href="#请求参数-26" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>phone</td><td>String</td><td>是</td><td>电话号</td></tr><tr><td>code</td><td>String</td><td>是</td><td>验证码</td></tr></tbody></table></div><h5 id="请求示例-26"><a href="#请求示例-26" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13019141949&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1234&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-26"><a href="#响应示例-26" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;用户1949&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13019141949&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoi55So5oi3MTk0OSIsImlkIjoiMTc4MTIxODQ2Nzg1NzY3NDI0MSIsImV4cCI6MTcxNDYzNTE0MH0.zffsOnyxgH09DGVin-isyQvWM8YAt4dGLwbHE59b6fA&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-27"><a href="#代码实现-27" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-27"><a href="#Controller-27" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;UserVO&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> Map map)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userService.login(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-26"><a href="#Service-26" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;UserVO&gt; <span class="title function_">login</span><span class="params">(Map map)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-26"><a href="#ServiceImpl-26" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;UserVO&gt; <span class="title function_">login</span><span class="params">(Map map)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> map.get(<span class="string">&quot;phone&quot;</span>).toString();</span><br><span class="line">    <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> map.get(<span class="string">&quot;code&quot;</span>).toString();</span><br><span class="line">    <span class="comment">//Object codeInSession = session.getAttribute(phone);</span></span><br><span class="line">    <span class="comment">//项目基础阶段,为了方便测试,验证码为1234</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">phoneCode</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (phoneCode.equals(code))&#123;</span><br><span class="line">        LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(User::getPhone, phone);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getOne(queryWrapper);</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="literal">null</span>)&#123;</span><br><span class="line">            user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">            user.setPhone(phone);</span><br><span class="line">            user.setName(<span class="string">&quot;用户&quot;</span> + phone.substring(phone.length() - <span class="number">4</span>));</span><br><span class="line">            user.setStatus(<span class="number">1</span>);</span><br><span class="line">            userService.save(user);</span><br><span class="line">        &#125;</span><br><span class="line">        BaseContext.setCurrentId(user.getId());</span><br><span class="line">        HashMap&lt;String, String&gt; payload = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        payload.put(<span class="string">&quot;id&quot;</span>, user.getId().toString());</span><br><span class="line">        payload.put(<span class="string">&quot;name&quot;</span>, user.getName());</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> JWTUtils.createToken(payload);</span><br><span class="line">        <span class="type">UserVO</span> <span class="variable">userVO</span> <span class="operator">=</span> UserVO.builder()</span><br><span class="line">                .id(user.getId())</span><br><span class="line">                .name(user.getName())</span><br><span class="line">                .phone(user.getPhone())</span><br><span class="line">                .token(token)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> Result.success(userVO);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.error(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-27"><a href="#逻辑说明-27" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ol><li>首先，从Map对象中获取电话号码和验证码。</li><li>然后，将预设的验证码与接收到的验证码进行比较。</li><li>如果验证码匹配，通过电话号码查询用户信息，如果用户不存在，则创建一个新的用户并保存。</li><li>设置当前用户ID，并创建一个包含用户信息和<code>token</code>的<code>Map</code>对象。</li><li>使用<code>JWTUtils</code>工具类创建一个<code>token</code>，并将其添加到<code>Map</code>对象中。</li><li>构建一个包含用户信息和<code>token</code>的<code>UserVO</code>对象，并返回一个表示成功的结果对象。</li><li>如果验证码不匹配，则返回一个表示登录失败的结果对象。</li></ol><h4 id="SQL语句展示-26"><a href="#SQL语句展示-26" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,phone,sex,id_number,avatar,status FROM user WHERE (phone = ?)</span><br></pre></td></tr></table></figure><hr><h3 id="用户退出"><a href="#用户退出" class="headerlink" title="用户退出"></a>用户退出</h3><h4 id="接口说明-27"><a href="#接口说明-27" class="headerlink" title="接口说明"></a>接口说明</h4><p>用户退出功能，我这里写的原理就是在生成一个新的token不传回前端，这样前端返回的token就会和后端的token不匹配，就会导致后端的拦截器拦截请求，从而实现用户退出。</p><h4 id="接口设计-28"><a href="#接口设计-28" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-27"><a href="#请求方式-27" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径-28"><a href="#请求路径-28" class="headerlink" title="请求路径"></a>请求路径</h5><p>/user/logout</p><h5 id="响应示例-27"><a href="#响应示例-27" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;退出登录成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-28"><a href="#代码实现-28" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-28"><a href="#Controller-28" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/logout&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">logout</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userService.logout();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-27"><a href="#Service-27" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">logout</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-27"><a href="#ServiceImpl-27" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">logout</span><span class="params">()</span> &#123;</span><br><span class="line">    HashMap&lt;String, String&gt; payload = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    payload.put(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;000&quot;</span>);</span><br><span class="line">    payload.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;000&quot;</span>);</span><br><span class="line">    JWTUtils.createToken(payload);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;退出登录成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-28"><a href="#逻辑说明-28" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>它首先创建了一个包含用户id和姓名的<code>payload</code>，然后使用<code>JWTUtils.createToken(payload)</code>方法生成一个token。最后，函数返回一个表示成功退出登录的结果对象。</p><hr><h3 id="获取用户信息"><a href="#获取用户信息" class="headerlink" title="获取用户信息"></a>获取用户信息</h3><h4 id="接口说明-28"><a href="#接口说明-28" class="headerlink" title="接口说明"></a>接口说明</h4><p>获取用户信息，用于修改的时候回显数据。</p><h4 id="接口设计-29"><a href="#接口设计-29" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-28"><a href="#请求方式-28" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-29"><a href="#请求路径-29" class="headerlink" title="请求路径"></a>请求路径</h5><p>/user/{id}</p><h5 id="请求参数-27"><a href="#请求参数-27" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>用户的id</td></tr></tbody></table></div><h5 id="请求示例-27"><a href="#请求示例-27" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>id</td><td>666</td></tr></tbody></table></div><h5 id="响应示例-28"><a href="#响应示例-28" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;666&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;测试用户&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12345678901&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;idNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;220102200001015648&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/100x100&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-29"><a href="#代码实现-29" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-29"><a href="#Controller-29" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;User&gt; <span class="title function_">getUser</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userService.getUser(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-28"><a href="#Service-28" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;User&gt; <span class="title function_">getUser</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-28"><a href="#ServiceImpl-28" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;User&gt; <span class="title function_">getUser</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(User::getId, id);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getOne(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-29"><a href="#逻辑说明-29" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ul><li>使用LambdaQueryWrapper创建查询条件，根据ID进行等值查询。</li><li>调用userService.getOne方法，根据查询条件获取唯一的用户信息。</li></ul><h4 id="SQL语句展示-27"><a href="#SQL语句展示-27" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,phone,sex,id_number,avatar,status FROM user WHERE (id = ?)</span><br></pre></td></tr></table></figure><hr><h3 id="修改用户个人信息"><a href="#修改用户个人信息" class="headerlink" title="修改用户个人信息"></a>修改用户个人信息</h3><h4 id="接口说明-29"><a href="#接口说明-29" class="headerlink" title="接口说明"></a>接口说明</h4><p>根据id进行修改。</p><h4 id="接口设计-30"><a href="#接口设计-30" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-29"><a href="#请求方式-29" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-30"><a href="#请求路径-30" class="headerlink" title="请求路径"></a>请求路径</h5><p>/user/update</p><h5 id="请求参数-28"><a href="#请求参数-28" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>用户id</td></tr><tr><td>name</td><td>String</td><td>是</td><td>用户名</td></tr><tr><td>sex</td><td>String</td><td>是</td><td>性别</td></tr><tr><td>phone</td><td>String</td><td>是</td><td>手机号</td></tr><tr><td>avatar</td><td>String</td><td>是</td><td>头像</td></tr><tr><td>idNumber</td><td>String</td><td>否</td><td>身份证号，用作实名认证</td></tr></tbody></table></div><h5 id="请求示例-28"><a href="#请求示例-28" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/100x100&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">555</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;idNumber&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127143213242131325&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;胡桃&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;13810468723&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;女&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-29"><a href="#响应示例-29" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;修改成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-30"><a href="#代码实现-30" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-30"><a href="#Controller-30" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/update&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateUser</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> userService.updateUser(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-29"><a href="#Service-29" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-29"><a href="#ServiceImpl-29" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">updateUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    userService.updateById(user);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-30"><a href="#逻辑说明-30" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>就是调用IService中封装好的根据id进行修改的方法，没有什么特别需要注意的地方。</p><h4 id="SQL语句展示-28"><a href="#SQL语句展示-28" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user SET name=?, phone=?, sex=?, id_number=?, avatar=? WHERE id=?</span><br></pre></td></tr></table></figure><hr><h2 id="地址簿-1"><a href="#地址簿-1" class="headerlink" title="地址簿"></a>地址簿</h2><hr><h3 id="Spring框架准备-6"><a href="#Spring框架准备-6" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-6"><a href="#持久层-6" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.AddressBook;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AddressBookMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;AddressBook&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-6"><a href="#业务层-6" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.AddressBook;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AddressBookService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;AddressBook&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-6"><a href="#业务层实现类-6" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.BaseContext;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.AddressBook;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.AddressBookMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.AddressBookService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AddressBookServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;AddressBookMapper, AddressBook&gt; <span class="keyword">implements</span> <span class="title class_">AddressBookService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AddressBookService addressBookService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层-5"><a href="#控制层-5" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.AddressBook;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.AddressBookService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/addressBook&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AddressBookController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AddressBookService addressBookService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="保存地址"><a href="#保存地址" class="headerlink" title="保存地址"></a>保存地址</h3><h4 id="接口设计-31"><a href="#接口设计-31" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-30"><a href="#请求方式-30" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径-31"><a href="#请求路径-31" class="headerlink" title="请求路径"></a>请求路径</h5><p>/addressBook</p><h5 id="请求参数-29"><a href="#请求参数-29" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>Integer</td><td>是</td><td>用户id</td></tr><tr><td>consignee</td><td>String</td><td>是</td><td>收货人</td></tr><tr><td>detail</td><td>String</td><td>是</td><td>详细地址</td></tr><tr><td>isDefault</td><td>Integer</td><td>是</td><td>默认地址</td></tr><tr><td>sex</td><td>Integer</td><td>是</td><td>性别</td></tr><tr><td>lable</td><td>String</td><td>是</td><td>标签</td></tr><tr><td>phone</td><td>String</td><td>是</td><td>手机号</td></tr></tbody></table></div><h5 id="请求示例-29"><a href="#请求示例-29" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;consecte&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;翻斗花园&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;家&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18675348469&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-30"><a href="#响应示例-30" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784568754727116801&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;consecte&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18675348469&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;翻斗花园&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;家&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:02:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:02:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-31"><a href="#代码实现-31" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-31"><a href="#Controller-31" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">saveAddress</span><span class="params">(<span class="meta">@RequestBody</span> AddressBook addressBook)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.saveAddress(addressBook);</span><br></pre></td></tr></table></figure><h5 id="Service-30"><a href="#Service-30" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;AddressBook&gt; <span class="title function_">saveAddress</span><span class="params">(AddressBook addressBook)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-30"><a href="#ServiceImpl-30" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">saveAddress</span><span class="params">(AddressBook addressBook)</span> &#123;</span><br><span class="line">    addressBook.setUserId(BaseContext.getCurrentId());</span><br><span class="line">    addressBookService.save(addressBook);</span><br><span class="line">    <span class="keyword">return</span> Result.success(addressBook);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-31"><a href="#逻辑说明-31" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，它将当前用户ID设置到传入的地址薄对象中，然后调用地址薄服务来保存该对象。最后，返回一个包含保存成功的地址薄对象的结果。</p><h4 id="SQL语句展示-29"><a href="#SQL语句展示-29" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO address_book ( id, user_id, consignee, sex, phone, detail, label, is_default, create_time, update_time, create_user, update_user ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure><hr><h3 id="设置默认地址"><a href="#设置默认地址" class="headerlink" title="设置默认地址"></a>设置默认地址</h3><h4 id="接口设计-32"><a href="#接口设计-32" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-31"><a href="#请求方式-31" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-32"><a href="#请求路径-32" class="headerlink" title="请求路径"></a>请求路径</h5><p>/addressBook/default</p><h5 id="请求参数-30"><a href="#请求参数-30" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>地址id</td></tr></tbody></table></div><h5 id="请求示例-30"><a href="#请求示例-30" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-31"><a href="#响应示例-31" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:24:21&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h4><h5 id="Controller-32"><a href="#Controller-32" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/default&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">setDefault</span><span class="params">(<span class="meta">@RequestBody</span> AddressBook addressBook)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.setDefault(addressBook);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-31"><a href="#Service-31" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;AddressBook&gt; <span class="title function_">setDefault</span><span class="params">(AddressBook addressBook)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-31"><a href="#ServiceImpl-31" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">setDefault</span><span class="params">(AddressBook addressBook)</span> &#123;</span><br><span class="line">    LambdaUpdateWrapper&lt;AddressBook&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">LambdaUpdateWrapper</span>&lt;&gt;();</span><br><span class="line">    updateWrapper.eq(AddressBook::getUserId, BaseContext.getCurrentId());</span><br><span class="line">    updateWrapper.set(AddressBook::getIsDefault, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//SQL:update address_book set is_default = 0 where user_id = ?</span></span><br><span class="line">    addressBookService.update(updateWrapper);</span><br><span class="line">    addressBook.setIsDefault(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//SQL:update address_book set is_default = 1 where id = ?</span></span><br><span class="line">    addressBookService.updateById(addressBook);</span><br><span class="line">    <span class="keyword">return</span> Result.success(addressBook);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-32"><a href="#逻辑说明-32" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，它通过<code>LambdaUpdateWrapper</code>构造一个更新包装器，将当前用户ID作为条件，将is_default字段设置为0，更新地址薄表中所有该用户的地址薄。然后，将传入的地址薄的is_default字段设置为1，并通过<code>addressBookService.updateById</code>方法更新地址薄表中该地址薄的记录。最后，返回一个成功结果，包含更新后的地址薄对象。</p><h4 id="SQL语句展示-30"><a href="#SQL语句展示-30" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE address_book SET is_default=?, update_time=?, update_user=? WHERE id=?</span><br></pre></td></tr></table></figure><hr><h3 id="获取地址信息"><a href="#获取地址信息" class="headerlink" title="获取地址信息"></a>获取地址信息</h3><h4 id="接口设计-33"><a href="#接口设计-33" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-32"><a href="#请求方式-32" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-33"><a href="#请求路径-33" class="headerlink" title="请求路径"></a>请求路径</h5><p>/addressBook/{id}</p><h5 id="请求参数-31"><a href="#请求参数-31" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>地址id</td></tr></tbody></table></div><h5 id="请求示例-31"><a href="#请求示例-31" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>id</td><td>2</td></tr></tbody></table></div><h5 id="响应示例-32"><a href="#响应示例-32" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;code&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;userId&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;consignee&quot;</span>: <span class="string">&quot;翻斗花园牛爷爷&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;15199999999&quot;</span>,</span><br><span class="line">        <span class="string">&quot;detail&quot;</span>: <span class="string">&quot;翻斗花园门卫室&quot;</span>,</span><br><span class="line">        <span class="string">&quot;label&quot;</span>: <span class="string">&quot;家&quot;</span>,</span><br><span class="line">        <span class="string">&quot;isDefault&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2021-05-27 09:49:16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2024-04-28 21:24:22&quot;</span>,</span><br><span class="line">        <span class="string">&quot;createUser&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;updateUser&quot;</span>: <span class="string">&quot;1781218467857674241&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;map&quot;</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码实现-32"><a href="#代码实现-32" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-33"><a href="#Controller-33" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">get</span><span class="params">(<span class="meta">@PathVariable</span> Long id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.get(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-32"><a href="#Service-32" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;AddressBook&gt; <span class="title function_">get</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-32"><a href="#ServiceImpl-32" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">get</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">    <span class="type">AddressBook</span> <span class="variable">addressBook</span> <span class="operator">=</span> addressBookService.getById(id);</span><br><span class="line">    <span class="keyword">if</span>(addressBook != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(addressBook);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;没有找到对象&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-33"><a href="#逻辑说明-33" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>简单的通过id进行查询</p><h4 id="SQL语句展示-31"><a href="#SQL语句展示-31" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,user_id,consignee,sex,phone,detail,label,is_default,create_time,update_time,create_user,update_user FROM address_book WHERE id=?</span><br></pre></td></tr></table></figure><hr><h3 id="获取默认地址"><a href="#获取默认地址" class="headerlink" title="获取默认地址"></a>获取默认地址</h3><h4 id="接口设计-34"><a href="#接口设计-34" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-33"><a href="#请求方式-33" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-34"><a href="#请求路径-34" class="headerlink" title="请求路径"></a>请求路径</h5><p>/addressBook/default</p><h5 id="响应示例-33"><a href="#响应示例-33" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;没有找到该对象&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-33"><a href="#代码实现-33" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-34"><a href="#Controller-34" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/default&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">getDefault</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.getDefault();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-33"><a href="#Service-33" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;AddressBook&gt; <span class="title function_">getDefault</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-33"><a href="#ServiceImpl-33" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">getDefault</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;AddressBook&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(AddressBook::getUserId, BaseContext.getCurrentId());</span><br><span class="line">    queryWrapper.eq(AddressBook::getIsDefault, <span class="number">1</span>);</span><br><span class="line">    <span class="type">AddressBook</span> <span class="variable">addressBook</span> <span class="operator">=</span> addressBookService.getOne(queryWrapper);</span><br><span class="line">    <span class="keyword">if</span>(addressBook == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="string">&quot;没有找到该对象&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Result.success(addressBook);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-34"><a href="#逻辑说明-34" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>通过<code>LambdaQueryWrapper</code>构造查询条件，查询条件为地址簿的用户ID等于当前用户ID且是否为默认地址簿为1。然后调用<code>addressBookService</code>的<code>getOne</code>方法根据查询条件获取第一条记录。如果查询结果为空，则返回错误信息”没有找到该对象”；否则返回成功信息并返回查询结果。</p><h4 id="SQL语句展示-32"><a href="#SQL语句展示-32" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,user_id,consignee,sex,phone,detail,label,is_default,create_time,update_time,create_user,update_user FROM address_book WHERE (user_id = ? AND is_default = ?)</span><br></pre></td></tr></table></figure><hr><h3 id="地址列表"><a href="#地址列表" class="headerlink" title="地址列表"></a>地址列表</h3><h4 id="接口设计-35"><a href="#接口设计-35" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-34"><a href="#请求方式-34" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-35"><a href="#请求路径-35" class="headerlink" title="请求路径"></a>请求路径</h5><p>/addressBook/list</p><h5 id="请求参数-32"><a href="#请求参数-32" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>Integer</td><td>是</td><td>用户id</td></tr></tbody></table></div><h5 id="请求示例-32"><a href="#请求示例-32" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-34"><a href="#响应示例-34" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784568754727116801&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;consecte&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18675348469&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;翻斗花园&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;家&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:02:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:02:01&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784568558865702913&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;consecte&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18675348469&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Excepteur Duis dolore incididunt quis&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;officia pariatur dolor nostrud eiusmod&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:01:15&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 21:01:15&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-34"><a href="#代码实现-34" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-35"><a href="#Controller-35" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;AddressBook&gt;&gt; <span class="title function_">addressList</span><span class="params">(AddressBook addressBook)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.addressList(addressBook);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-34"><a href="#Service-34" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;List&lt;AddressBook&gt;&gt; <span class="title function_">addressList</span><span class="params">(AddressBook addressBook)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-34"><a href="#ServiceImpl-34" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;AddressBook&gt;&gt; <span class="title function_">addressList</span><span class="params">(AddressBook addressBook)</span> &#123;</span><br><span class="line">    addressBook.setUserId(BaseContext.getCurrentId());</span><br><span class="line">    LambdaQueryWrapper&lt;AddressBook&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(addressBook.getUserId() != <span class="literal">null</span>, AddressBook::getUserId, addressBook.getUserId());</span><br><span class="line">    queryWrapper.orderByDesc(AddressBook::getUpdateTime);</span><br><span class="line">    <span class="keyword">return</span> Result.success(addressBookService.list(queryWrapper));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-35"><a href="#逻辑说明-35" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先将当前用户ID设置到传入的地址薄对象中，然后使用<code>LambdaQueryWrapper</code>创建查询条件，根据用户ID进行查询，并按更新时间降序排序。最后返回查询结果的包装对象。</p><h4 id="SQL语句展示-33"><a href="#SQL语句展示-33" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,user_id,consignee,sex,phone,detail,label,is_default,create_time,update_time,create_user,update_user FROM address_book WHERE (user_id = ?) ORDER BY update_time DESC</span><br></pre></td></tr></table></figure><hr><h3 id="修改地址"><a href="#修改地址" class="headerlink" title="修改地址"></a>修改地址</h3><h4 id="接口设计-36"><a href="#接口设计-36" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-35"><a href="#请求方式-35" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-36"><a href="#请求路径-36" class="headerlink" title="请求路径"></a>请求路径</h5><p>/addressBook</p><h5 id="请求参数-33"><a href="#请求参数-33" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>地址id</td></tr><tr><td>userId</td><td>Integer</td><td>是</td><td>用户id</td></tr><tr><td>consignee</td><td>String</td><td>是</td><td>收货人</td></tr><tr><td>detail</td><td>String</td><td>是</td><td>详细地址</td></tr><tr><td>isDefault</td><td>Integer</td><td>是</td><td>默认地址</td></tr><tr><td>sex</td><td>Integer</td><td>是</td><td>性别</td></tr><tr><td>lable</td><td>String</td><td>是</td><td>标签</td></tr><tr><td>phone</td><td>String</td><td>是</td><td>手机号</td></tr></tbody></table></div><h5 id="请求示例-33"><a href="#请求示例-33" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;do&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;火罗国神鹰堡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;家&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18173703558&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-35"><a href="#响应示例-35" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;code&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;userId&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;consignee&quot;</span>: <span class="string">&quot;do&quot;</span>,</span><br><span class="line">        <span class="string">&quot;sex&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;phone&quot;</span>: <span class="string">&quot;18173703558&quot;</span>,</span><br><span class="line">        <span class="string">&quot;detail&quot;</span>: <span class="string">&quot;火罗国神鹰堡&quot;</span>,</span><br><span class="line">        <span class="string">&quot;label&quot;</span>: <span class="string">&quot;家&quot;</span>,</span><br><span class="line">        <span class="string">&quot;isDefault&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;createTime&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;2024-04-28 21:55:19&quot;</span>,</span><br><span class="line">        <span class="string">&quot;createUser&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">&quot;updateUser&quot;</span>: <span class="string">&quot;1781218467857674241&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;map&quot;</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码实现-35"><a href="#代码实现-35" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-36"><a href="#Controller-36" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">addressUpdate</span><span class="params">(<span class="meta">@RequestBody</span> AddressBook addressBook)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.addressUpdate(addressBook);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-35"><a href="#Service-35" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;AddressBook&gt; <span class="title function_">addressUpdate</span><span class="params">(AddressBook addressBook)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-35"><a href="#ServiceImpl-35" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;AddressBook&gt; <span class="title function_">addressUpdate</span><span class="params">(AddressBook addressBook)</span> &#123;</span><br><span class="line">    addressBookService.updateById(addressBook);</span><br><span class="line">    <span class="keyword">return</span> Result.success(addressBook);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-36"><a href="#逻辑说明-36" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，通过<code>addressBookService.updateById(addressBook)</code>调用服务层的方法，根据传入的<code>addressBook</code>对象的ID更新对应的联系人信息。然后，返回一个包含更新后的联系人信息的成功结果对象<code>Result.success(addressBook)</code>。</p><h4 id="SQL语句展示-34"><a href="#SQL语句展示-34" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE address_book SET user_id=?, consignee=?, sex=?, phone=?, detail=?, label=?, is_default=?, update_time=?, update_user=? WHERE id=?</span><br></pre></td></tr></table></figure><hr><h3 id="删除地址"><a href="#删除地址" class="headerlink" title="删除地址"></a>删除地址</h3><h4 id="接口设计-37"><a href="#接口设计-37" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-36"><a href="#请求方式-36" class="headerlink" title="请求方式"></a>请求方式</h5><p>DELETE</p><h5 id="请求地址"><a href="#请求地址" class="headerlink" title="请求地址"></a>请求地址</h5><p>/addressBook</p><h5 id="请求参数-34"><a href="#请求参数-34" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>ids</td><td>arrary</td><td>是</td><td>地址id</td></tr></tbody></table></div><h5 id="请求示例-34"><a href="#请求示例-34" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>ids</td><td>2</td></tr></tbody></table></div><h5 id="响应示例-36"><a href="#响应示例-36" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;删除地址成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-36"><a href="#代码实现-36" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-37"><a href="#Controller-37" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(Long ids)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> addressBookService.delete(ids);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-36"><a href="#Service-36" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(Long ids)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-36"><a href="#ServiceImpl-36" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">delete</span><span class="params">(Long ids)</span> &#123;</span><br><span class="line">    addressBookService.removeById(ids);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;删除地址成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-37"><a href="#逻辑说明-37" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>根据id进行批量删除。</p><h4 id="SQL语句展示-35"><a href="#SQL语句展示-35" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM address_book WHERE id=?</span><br></pre></td></tr></table></figure><hr><h2 id="购物车-2"><a href="#购物车-2" class="headerlink" title="购物车"></a>购物车</h2><hr><h3 id="Spring框架准备-7"><a href="#Spring框架准备-7" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><h4 id="持久层-7"><a href="#持久层-7" class="headerlink" title="持久层"></a>持久层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.ShoppingCart;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ShoppingCartMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;ShoppingCart&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层-7"><a href="#业务层-7" class="headerlink" title="业务层"></a>业务层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.ShoppingCart;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ShoppingCartService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;ShoppingCart&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="业务层实现类-7"><a href="#业务层实现类-7" class="headerlink" title="业务层实现类"></a>业务层实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Service.Impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.BaseContext;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.ShoppingCart;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Mapper.ShoppingCartMapper;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.ShoppingCartService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShoppingCartServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ShoppingCartMapper, ShoppingCart&gt; <span class="keyword">implements</span> <span class="title class_">ShoppingCartService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ShoppingCartService shoppingCartService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="控制层-6"><a href="#控制层-6" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myc.tivat.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Common.Result;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.DoMain.Entity.ShoppingCart;</span><br><span class="line"><span class="keyword">import</span> com.myc.tivat.Service.ShoppingCartService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/shoppingCart&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShoppingCartController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ShoppingCartService shoppingCartService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="添加购物车"><a href="#添加购物车" class="headerlink" title="添加购物车"></a>添加购物车</h3><h4 id="接口设计-38"><a href="#接口设计-38" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-37"><a href="#请求方式-37" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径-37"><a href="#请求路径-37" class="headerlink" title="请求路径"></a>请求路径</h5><p>/shoppingCart/add</p><h5 id="请求参数-35"><a href="#请求参数-35" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>String</td><td>是</td><td>名称</td></tr><tr><td>image</td><td>String</td><td>是</td><td>图片</td></tr><tr><td>number</td><td>Integer</td><td>是</td><td>数量</td></tr><tr><td>amount</td><td>number</td><td>是</td><td>金额</td></tr><tr><td>dishFlavor</td><td>String</td><td>是</td><td>口味</td></tr><tr><td>dishId</td><td>Integer</td><td>否</td><td>菜品id</td></tr><tr><td>setmealId</td><td>Integer</td><td>否</td><td>套餐id</td></tr></tbody></table></div><h5 id="请求示例-35"><a href="#请求示例-35" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜甜花酿鸡&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dishFlavor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-37"><a href="#响应示例-37" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784587303612932097&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜甜花酿鸡&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;setmealId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dishFlavor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">1000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 22:15:43&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-37"><a href="#代码实现-37" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-38"><a href="#Controller-38" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;ShoppingCart&gt; <span class="title function_">add</span><span class="params">(<span class="meta">@RequestBody</span> ShoppingCart shoppingCart)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> shoppingCartService.add(shoppingCart);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-37"><a href="#Service-37" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;ShoppingCart&gt; <span class="title function_">add</span><span class="params">(ShoppingCart shoppingCart)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-37"><a href="#ServiceImpl-37" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;ShoppingCart&gt; <span class="title function_">add</span><span class="params">(ShoppingCart shoppingCart)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">currentId</span> <span class="operator">=</span> BaseContext.getCurrentId();</span><br><span class="line">    shoppingCart.setUserId(currentId);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">dishId</span> <span class="operator">=</span> shoppingCart.getDishId();</span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId, currentId);</span><br><span class="line">    <span class="keyword">if</span>(dishId != <span class="literal">null</span>)&#123;</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getDishId, dishId);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getSetmealId, shoppingCart.getSetmealId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ShoppingCart</span> <span class="variable">cartServiceOne</span> <span class="operator">=</span> shoppingCartService.getOne(queryWrapper);</span><br><span class="line">    <span class="keyword">if</span>(cartServiceOne != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> cartServiceOne.getNumber();</span><br><span class="line">        cartServiceOne.setNumber(number + <span class="number">1</span>);</span><br><span class="line">        shoppingCartService.updateById(cartServiceOne);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        shoppingCart.setNumber(<span class="number">1</span>);</span><br><span class="line">        shoppingCart.setCreateTime(LocalDateTime.now());</span><br><span class="line">        shoppingCartService.save(shoppingCart);</span><br><span class="line">        cartServiceOne = shoppingCart;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.success(cartServiceOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-38"><a href="#逻辑说明-38" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，它会获取当前用户ID，并将该ID设置到传入的购物车对象中。然后，根据商品ID或套餐ID查询购物车表中是否已存在该商品。如果已存在，则将数量加1并更新数据库；如果不存在，则将购物车对象插入数据库。最后，返回更新或插入后的购物车对象。</p><h4 id="SQL语句展示-36"><a href="#SQL语句展示-36" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO <span class="title function_">shopping_cart</span> <span class="params">( id, name, user_id, dish_id, dish_flavor, number, amount, image, create_time )</span> VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure><hr><h3 id="修改购物车条目"><a href="#修改购物车条目" class="headerlink" title="修改购物车条目"></a>修改购物车条目</h3><h4 id="接口设计-39"><a href="#接口设计-39" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-38"><a href="#请求方式-38" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-38"><a href="#请求路径-38" class="headerlink" title="请求路径"></a>请求路径</h5><p>/shoppingCart</p><h5 id="请求参数-36"><a href="#请求参数-36" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>主键</td></tr><tr><td>amount</td><td>number</td><td>是</td><td>金额</td></tr></tbody></table></div><h5 id="请求示例-36"><a href="#请求示例-36" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2067477181</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">99</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-38"><a href="#响应示例-38" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-38"><a href="#代码实现-38" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-39"><a href="#Controller-39" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;ShoppingCart&gt; <span class="title function_">sub</span><span class="params">(<span class="meta">@RequestBody</span> ShoppingCart shoppingCart)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> shoppingCartService.sub(shoppingCart);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-38"><a href="#Service-38" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;ShoppingCart&gt; <span class="title function_">sub</span><span class="params">(ShoppingCart shoppingCart)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-38"><a href="#ServiceImpl-38" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;ShoppingCart&gt; <span class="title function_">sub</span><span class="params">(ShoppingCart shoppingCart)</span> &#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> BaseContext.getCurrentId();</span><br><span class="line">    <span class="type">Long</span> <span class="variable">dishId</span> <span class="operator">=</span> shoppingCart.getDishId();</span><br><span class="line">    <span class="comment">//SQL : select * from shopping_cart where user_id = ? and dish_id/setmeal_id = ?</span></span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId,userId);</span><br><span class="line">    <span class="keyword">if</span>(dishId != <span class="literal">null</span>)&#123;</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getDishId,dishId);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        queryWrapper.eq(ShoppingCart::getSetmealId,shoppingCart.getSetmealId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ShoppingCart</span> <span class="variable">cartServiceOne</span> <span class="operator">=</span> shoppingCartService.getOne(queryWrapper);</span><br><span class="line">    <span class="keyword">if</span> (cartServiceOne != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">number</span> <span class="operator">=</span> cartServiceOne.getNumber();</span><br><span class="line">        <span class="comment">//如果数量大于 0 才能 - 1</span></span><br><span class="line">        <span class="keyword">if</span> (number &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            cartServiceOne.setNumber(number - <span class="number">1</span>);</span><br><span class="line">            shoppingCartService.updateById(cartServiceOne);</span><br><span class="line">            <span class="comment">//如果数量再减少等于0 则 该商品/套餐 移出购物车</span></span><br><span class="line">            <span class="keyword">if</span> (number - <span class="number">1</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                shoppingCartService.removeById(cartServiceOne.getId());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Result.success(cartServiceOne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-39"><a href="#逻辑说明-39" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，它获取当前用户ID和购物车中的商品ID或套餐ID。然后，根据这些ID查询购物车表中对应的购物车项。如果找到了对应的购物车项且数量大于0，则将数量减1并更新到数据库中。如果减去1后数量等于0，则将该购物车项从购物车中移除。最后，返回更新后的购物车项。</p><h4 id="SQL语句展示-37"><a href="#SQL语句展示-37" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id<span class="punctuation">,</span>name<span class="punctuation">,</span>user_id<span class="punctuation">,</span>dish_id<span class="punctuation">,</span>setmeal_id<span class="punctuation">,</span>dish_flavor<span class="punctuation">,</span>number<span class="punctuation">,</span>amount<span class="punctuation">,</span>image<span class="punctuation">,</span>create_time FROM shopping_cart WHERE (user_id = ? AND setmeal_id = ?)</span><br></pre></td></tr></table></figure><hr><h3 id="查询记录"><a href="#查询记录" class="headerlink" title="查询记录"></a>查询记录</h3><h4 id="接口设计-40"><a href="#接口设计-40" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-39"><a href="#请求方式-39" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-39"><a href="#请求路径-39" class="headerlink" title="请求路径"></a>请求路径</h5><p>/shoppingCart/list</p><h5 id="响应示例-39"><a href="#响应示例-39" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781652965816655873&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;清千制&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-757172938&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setmealId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishFlavor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;id ut velit proident aute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="number">-10213076</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">32.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-20 19:55:43&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784587303612932097&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜甜花酿鸡&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1781218467857674241&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setmealId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dishFlavor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;甜&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">1000.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://dummyimage.com/400x400&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 22:15:44&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-39"><a href="#代码实现-39" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-40"><a href="#Controller-40" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;ShoppingCart&gt;&gt; <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> shoppingCartService.shoppingCartList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-39"><a href="#Service-39" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;List&lt;ShoppingCart&gt;&gt; <span class="title function_">shoppingCartList</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-39"><a href="#ServiceImpl-39" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;ShoppingCart&gt;&gt; <span class="title function_">shoppingCartList</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId, BaseContext.getCurrentId());</span><br><span class="line">    queryWrapper.orderByAsc(ShoppingCart::getCreateTime);</span><br><span class="line">    List&lt;ShoppingCart&gt; list = shoppingCartService.list(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(list);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-40"><a href="#逻辑说明-40" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>根据用户ID查询购物车信息，并按照创建时间升序排序。返回结果为一个包含购物车信息的列表。</p><h4 id="SQL语句展示-38"><a href="#SQL语句展示-38" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,user_id,dish_id,setmeal_id,dish_flavor,number,amount,image,create_time FROM shopping_cart WHERE (user_id = ?) ORDER BY create_time ASC</span><br></pre></td></tr></table></figure><hr><h3 id="清空购物车"><a href="#清空购物车" class="headerlink" title="清空购物车"></a>清空购物车</h3><h4 id="接口设计-41"><a href="#接口设计-41" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-40"><a href="#请求方式-40" class="headerlink" title="请求方式"></a>请求方式</h5><p>DELETE</p><h5 id="请求路径-40"><a href="#请求路径-40" class="headerlink" title="请求路径"></a>请求路径</h5><p>/shoppingCart/clean</p><h5 id="响应示例-40"><a href="#响应示例-40" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;清空购物车成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-40"><a href="#代码实现-40" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-41"><a href="#Controller-41" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DeleteMapping(&quot;/clean&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">clean</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> shoppingCartService.clean();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-40"><a href="#Service-40" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">clean</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-40"><a href="#ServiceImpl-40" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">clean</span><span class="params">()</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId, BaseContext.getCurrentId());</span><br><span class="line">    shoppingCartService.remove(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;清空购物车成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-41"><a href="#逻辑说明-41" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>使用<code>LambdaQueryWrapper</code>创建查询条件，根据<code>BaseContext.getCurrentId()</code>获取当前用户ID，并将该条件设置到查询包装器中。然后调用<code>shoppingCartService.remove()</code>方法，根据该查询条件删除购物车记录。最后返回一个成功结果，包含提示信息”清空购物车成功”。</p><h4 id="SQL语句展示-39"><a href="#SQL语句展示-39" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM shopping_cart WHERE (user_id = ?)</span><br></pre></td></tr></table></figure><hr><h2 id="订单明细-1"><a href="#订单明细-1" class="headerlink" title="订单明细"></a>订单明细</h2><hr><h3 id="Spring框架准备-8"><a href="#Spring框架准备-8" class="headerlink" title="Spring框架准备"></a><code>Spring</code>框架准备</h3><p>因为操作的表是一样的，所以和管理端共用一个。</p><hr><h3 id="提交并支付订单"><a href="#提交并支付订单" class="headerlink" title="提交并支付订单"></a>提交并支付订单</h3><h4 id="接口设计-42"><a href="#接口设计-42" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-41"><a href="#请求方式-41" class="headerlink" title="请求方式"></a>请求方式</h5><p>POST</p><h5 id="请求路径-41"><a href="#请求路径-41" class="headerlink" title="请求路径"></a>请求路径</h5><p>/order/submit</p><h5 id="请求参数-37"><a href="#请求参数-37" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>userId</td><td>Integer</td><td>是</td><td>下单用户id</td></tr><tr><td>userName</td><td>String</td><td>是</td><td>用户名</td></tr><tr><td>payMethod</td><td>Integer</td><td>是</td><td>支付方式 1（微信）2（支付宝）</td></tr><tr><td>phone</td><td>String</td><td>是</td><td>手机号</td></tr><tr><td>consignee</td><td>String</td><td>是</td><td>收货人</td></tr><tr><td>amount</td><td>number</td><td>是</td><td>实收金额</td></tr><tr><td>address</td><td>String</td><td>是</td><td>地址</td></tr><tr><td>addressBookId</td><td>Integer</td><td>是</td><td>地址id</td></tr><tr><td>remark</td><td>String</td><td>是</td><td>备注</td></tr></tbody></table></div><h5 id="请求示例-37"><a href="#请求示例-37" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="number">555</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;userName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;沈妙&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;payMethod&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18101417880&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;八嘎&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">82</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;火罗国唐安城&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;addressBookId&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;让哈迪快点送过来&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-41"><a href="#响应示例-41" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;提交订单成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-41"><a href="#代码实现-41" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-42"><a href="#Controller-42" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/submit&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">submit</span><span class="params">(<span class="meta">@RequestBody</span> Orders orders)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  orderService.submit(orders);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-41"><a href="#Service-41" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">submit</span><span class="params">(Orders orders)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-41"><a href="#ServiceImpl-41" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">submit</span><span class="params">(Orders orders)</span> &#123;</span><br><span class="line">    <span class="comment">//获得用户id</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> BaseContext.getCurrentId();</span><br><span class="line">    <span class="comment">//查询用户购物车</span></span><br><span class="line">    LambdaQueryWrapper&lt;ShoppingCart&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(ShoppingCart::getUserId, userId);</span><br><span class="line">    List&lt;ShoppingCart&gt; shoppingCarts = shoppingCartService.list(queryWrapper);</span><br><span class="line">    <span class="keyword">if</span>(shoppingCarts == <span class="literal">null</span> || shoppingCarts.size() == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(<span class="string">&quot;购物车为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getById(userId);</span><br><span class="line">    <span class="type">Long</span> <span class="variable">addressBookId</span> <span class="operator">=</span> orders.getAddressBookId();</span><br><span class="line">    <span class="type">AddressBook</span> <span class="variable">addressBook</span> <span class="operator">=</span> addressBookService.getById(addressBookId);</span><br><span class="line">    <span class="keyword">if</span>(addressBook == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(<span class="string">&quot;用户地址信息有误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向订单表插入一条数据</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">orderId</span> <span class="operator">=</span> IdWorker.getId();</span><br><span class="line">    <span class="type">AtomicInteger</span> <span class="variable">amount</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line">    List&lt;OrderDetail&gt; orderDetails = shoppingCarts.stream().map((item) -&gt; &#123;</span><br><span class="line">        <span class="type">OrderDetail</span> <span class="variable">orderDetail</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderDetail</span>();</span><br><span class="line">        orderDetail.setOrderId(orderId);</span><br><span class="line">        orderDetail.setNumber(item.getNumber());</span><br><span class="line">        orderDetail.setDishFlavor(item.getDishFlavor());</span><br><span class="line">        orderDetail.setDishId(item.getDishId());</span><br><span class="line">        orderDetail.setSetmealId(item.getSetmealId());</span><br><span class="line">        orderDetail.setName(item.getName());</span><br><span class="line">        orderDetail.setImage(item.getImage());</span><br><span class="line">        orderDetail.setAmount(item.getAmount());</span><br><span class="line">        amount.addAndGet(item.getAmount().multiply(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(item.getNumber())).intValue());</span><br><span class="line">        <span class="keyword">return</span> orderDetail;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    orders.setId(orderId);</span><br><span class="line">    orders.setOrderTime(LocalDateTime.now());</span><br><span class="line">    orders.setCheckoutTime(LocalDateTime.now());</span><br><span class="line">    orders.setStatus(<span class="number">2</span>);</span><br><span class="line">    orders.setAmount(<span class="keyword">new</span> <span class="title class_">BigDecimal</span>(amount.get()));<span class="comment">//总金额</span></span><br><span class="line">    orders.setUserId(userId);</span><br><span class="line">    orders.setNumber(String.valueOf(orderId));</span><br><span class="line">    orders.setUserName(user.getName());</span><br><span class="line">    orders.setConsignee(addressBook.getConsignee());</span><br><span class="line">    orders.setPhone(addressBook.getPhone());</span><br><span class="line">    orders.setAddress(addressBook.getDetail() == <span class="literal">null</span> ? <span class="string">&quot;&quot;</span> : addressBook.getDetail());</span><br><span class="line">    <span class="comment">//向订单表插入数据，一条数据</span></span><br><span class="line">    <span class="built_in">this</span>.save(orders);</span><br><span class="line">    <span class="comment">//向订单明细表插入数据，多条数据</span></span><br><span class="line">    orderDetailService.saveBatch(orderDetails);</span><br><span class="line">    <span class="comment">//清空购物车数据</span></span><br><span class="line">    shoppingCartService.remove(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;提交订单成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-42"><a href="#逻辑说明-42" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>首先，它获取当前用户ID，然后查询该用户的购物车信息。如果购物车为空，抛出自定义异常。接着，根据用户ID查询用户信息，根据订单中的地址簿ID查询地址簿信息。如果地址簿信息为空，同样抛出自定义异常。然后，生成订单ID，根据购物车信息计算订单详情，并保存订单和订单详情到数据库。最后，清空购物车数据，并返回成功信息。函数使用了<code>Spring</code>的<code>@Transactional</code>注解来保证整个操作的事务性。</p><h4 id="SQL语句展示-40"><a href="#SQL语句展示-40" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><ol><li><p>查询购物车信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,user_id,dish_id,setmeal_id,dish_flavor,number,amount,image,create_time FROM shopping_cart WHERE (user_id = ?)</span><br></pre></td></tr></table></figure></li><li><p>查询用户信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,phone,sex,id_number,avatar,status FROM user WHERE id=?</span><br></pre></td></tr></table></figure></li><li><p>查询地址信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,user_id,consignee,sex,phone,detail,label,is_default,create_time,update_time,create_user,update_user FROM address_book WHERE id=?</span><br></pre></td></tr></table></figure></li><li><p>插入订单信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO <span class="title function_">orders</span> <span class="params">( id, number, status, user_id, address_book_id, order_time, checkout_time, pay_method, amount, remark, user_name, phone, address, consignee )</span> VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure></li><li><p>插入订单详情信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO order_detail ( id, name, image, order_id, dish_id, dish_flavor, number, amount ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="用户确认与取消订单"><a href="#用户确认与取消订单" class="headerlink" title="用户确认与取消订单"></a>用户确认与取消订单</h3><h4 id="接口设计-43"><a href="#接口设计-43" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-42"><a href="#请求方式-42" class="headerlink" title="请求方式"></a>请求方式</h5><p>PUT</p><h5 id="请求路径-42"><a href="#请求路径-42" class="headerlink" title="请求路径"></a>请求路径</h5><p>/order/user</p><h5 id="请求参数-38"><a href="#请求参数-38" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>Integer</td><td>是</td><td>订单编号</td></tr><tr><td>status</td><td>Integer</td><td>是</td><td>订单状态值</td></tr></tbody></table></div><h5 id="请求示例-38"><a href="#请求示例-38" class="headerlink" title="请求示例"></a>请求示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">5</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h5 id="响应示例-42"><a href="#响应示例-42" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-42"><a href="#代码实现-42" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-43"><a href="#Controller-43" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">confOrder</span><span class="params">(<span class="meta">@RequestBody</span> Orders orders)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orderService.confOrder(orders);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-42"><a href="#Service-42" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;String&gt; <span class="title function_">confOrder</span><span class="params">(Orders orders)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-42"><a href="#ServiceImpl-42" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">confOrder</span><span class="params">(Orders orders)</span> &#123;</span><br><span class="line">    orderService.updateById(orders);</span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-43"><a href="#逻辑说明-43" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>根据id修改订单的状态码就可以了</p><h4 id="SQL语句展示-41"><a href="#SQL语句展示-41" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE orders SET status=? WHERE id=?</span><br></pre></td></tr></table></figure><hr><h3 id="用户订单分页"><a href="#用户订单分页" class="headerlink" title="用户订单分页"></a>用户订单分页</h3><h4 id="接口设计-44"><a href="#接口设计-44" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-43"><a href="#请求方式-43" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-43"><a href="#请求路径-43" class="headerlink" title="请求路径"></a>请求路径</h5><p>/order/userPage</p><h5 id="请求参数-39"><a href="#请求参数-39" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>page</td><td>Integer</td><td>是</td><td>输入的页码</td></tr><tr><td>pageSize</td><td>Integer</td><td>是</td><td>每页的大小</td></tr></tbody></table></div><h5 id="请求示例-39"><a href="#请求示例-39" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>page</td><td>1</td></tr><tr><td>pageSize</td><td>10</td></tr></tbody></table></div><h5 id="响应示例-43"><a href="#响应示例-43" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;records&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784598886347005954&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;addressBookId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;orderTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 23:01:45&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;checkoutTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 23:01:45&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;payMethod&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">1000.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;让哈迪快点送过来&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;用户1949&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18675348469&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;翻斗花园&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;consecte&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;number&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1784597859723993089&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;999&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;addressBookId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;orderTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 22:57:41&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;checkoutTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-04-28 22:57:41&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;payMethod&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;amount&quot;</span><span class="punctuation">:</span> <span class="number">1000.00</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="string">&quot;让哈迪快点送过来&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;用户1949&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;phone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;18675348469&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;翻斗花园&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;consignee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;consecte&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;size&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-43"><a href="#代码实现-43" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-44"><a href="#Controller-44" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/userPage&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&lt;Orders&gt;&gt; <span class="title function_">userPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orderService.userPage(page,pageSize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-43"><a href="#Service-43" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;Page&lt;Orders&gt;&gt; <span class="title function_">userPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-43"><a href="#ServiceImpl-43" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;Page&lt;Orders&gt;&gt; <span class="title function_">userPage</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> pageSize)</span>&#123;</span><br><span class="line">    <span class="comment">//获取用户ID</span></span><br><span class="line">    <span class="type">Long</span> <span class="variable">userID</span> <span class="operator">=</span> BaseContext.getCurrentId();</span><br><span class="line">    <span class="comment">//分页构造器</span></span><br><span class="line">    Page&lt;Orders&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page,pageSize);</span><br><span class="line">    <span class="comment">//条件构造器</span></span><br><span class="line">    LambdaQueryWrapper&lt;Orders&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//指定用户的订单</span></span><br><span class="line">    queryWrapper.eq(Orders::getUserId,userID);</span><br><span class="line">    <span class="comment">//添加排序条件</span></span><br><span class="line">    queryWrapper.orderByDesc(Orders::getOrderTime);</span><br><span class="line">    orderService.page(pageInfo,queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-44"><a href="#逻辑说明-44" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><ul><li>函数通过接收两个参数：<code>page</code>（当前页码）和<code>pageSize</code>(每页数据数量)来指定分页查询的页码和每页的数据数量。</li><li>首先，函数利用<code>BaseContext.getCurrentId()</code>获取当前用户ID。</li><li>然后，使用<code>Page</code>类构造器创建一个<code>pageInfo</code>对象，用于存储分页信息。</li><li>接着，使用<code>LambdaQueryWrapper</code>类创建一个<code>queryWrapper</code>对象，用于构建查询条件。</li><li>在<code>queryWrapper</code>中，指定查询条件为用户ID等于当前用户ID，并按照订单时间倒序排序。</li><li>最后，调用<code>orderService.page()</code>方法执行分页查询，并将查询结果封装到pageInfo对象中。</li></ul><h4 id="SQL语句展示-42"><a href="#SQL语句展示-42" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*) AS total FROM orders WHERE (user_id = ?)</span><br><span class="line">SELECT id,number,status,user_id,address_book_id,order_time,checkout_time,pay_method,amount,remark,user_name,phone,address,consignee FROM orders WHERE (user_id = ?) ORDER BY order_time DESC LIMIT ?</span><br></pre></td></tr></table></figure><hr><h2 id="菜品展示"><a href="#菜品展示" class="headerlink" title="菜品展示"></a>菜品展示</h2><hr><h3 id="根据分分类获取菜品"><a href="#根据分分类获取菜品" class="headerlink" title="根据分分类获取菜品"></a>根据分分类获取菜品</h3><h4 id="接口设计-45"><a href="#接口设计-45" class="headerlink" title="接口设计"></a>接口设计</h4><h5 id="请求方式-44"><a href="#请求方式-44" class="headerlink" title="请求方式"></a>请求方式</h5><p>GET</p><h5 id="请求路径-44"><a href="#请求路径-44" class="headerlink" title="请求路径"></a>请求路径</h5><p>/dish/user</p><h5 id="请求参数-40"><a href="#请求参数-40" class="headerlink" title="请求参数"></a>请求参数</h5><div class="table-container"><table><thead><tr><th>参数名称</th><th>类型</th><th>必须</th><th>描述</th></tr></thead><tbody><tr><td>categoryId</td><td>Integer</td><td>是</td><td>分类id</td></tr></tbody></table></div><h5 id="请求示例-40"><a href="#请求示例-40" class="headerlink" title="请求示例"></a>请求示例</h5><div class="table-container"><table><thead><tr><th>参数名</th><th>参数值</th></tr></thead><tbody><tr><td>categoryId</td><td>1</td></tr></tbody></table></div><h5 id="响应示例-44"><a href="#响应示例-44" class="headerlink" title="响应示例"></a>响应示例</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大碗茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">5.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000001&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;215px-大碗茶.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;璃月特色的茶饮。在幅员辽阔的璃月旅行可是一件苦差事，所以当你看到卖大碗茶的茶摊时，只会期望它的茶碗越大越好。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;沉玉茶露&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">12.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000002&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-沉玉茶露.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;常见的璃月香茗。有时，所谓人生，或许就如细品一盏茶汤时所感受到的余味回甘。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;得闲饮茶&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">40.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000003&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;215px-得闲饮茶.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;嘉明的特色料理。\n排排坐于蒸笼里的是栩栩如生的猊兽包，让人一下子就想到了梅花桩上威武灵动的少年…「发什么呆啊你？饮杯茶先啦，嗱。」说着，笑容爽朗的少年又递过来一个茶杯。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;果果仙酪&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">7.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000004&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-果果仙酪.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;色彩素净的饮品。融合了果味的酸奶制成冰沙，铺成蓝天白云的模样，底部垫着的是厚厚的一层果丁与晶冻。清爽的味道，正是消暑的好选择。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;双果清露&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;categoryId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">7.00</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1000005&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60px-双果清露.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;拥有双重果味的饮品。先在底部铺上满满的果粒，再倒入融合了茶底和果汁的冰沙，果香清新且富有层次感，没有人能拒绝这样一杯饮品。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2021-04-13 00:00:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updateUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;map&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="代码实现-44"><a href="#代码实现-44" class="headerlink" title="代码实现"></a>代码实现</h4><h5 id="Controller-45"><a href="#Controller-45" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;Dish&gt;&gt; <span class="title function_">getDish</span><span class="params">(<span class="meta">@RequestParam</span> Long categoryId)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dishService.getDish(categoryId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Service-44"><a href="#Service-44" class="headerlink" title="Service"></a>Service</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;List&lt;Dish&gt;&gt; <span class="title function_">getDish</span><span class="params">(Long categoryId)</span>;</span><br></pre></td></tr></table></figure><h5 id="ServiceImpl-44"><a href="#ServiceImpl-44" class="headerlink" title="ServiceImpl"></a>ServiceImpl</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Result&lt;List&lt;Dish&gt;&gt; <span class="title function_">getDish</span><span class="params">(Long categoryId)</span> &#123;</span><br><span class="line">    <span class="comment">//查询dish表中category_id为categoryId的所有菜品信息</span></span><br><span class="line">    LambdaQueryWrapper&lt;Dish&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(Dish::getCategoryId, categoryId);</span><br><span class="line">    List&lt;Dish&gt; dishList = dishService.list(queryWrapper);</span><br><span class="line">    <span class="keyword">return</span> Result.success(dishList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="逻辑说明-45"><a href="#逻辑说明-45" class="headerlink" title="逻辑说明"></a>逻辑说明</h4><p>使用<code>LambdaQueryWrapper</code>创建查询条件，设置查询条件为<code>category_id</code>等于给定的<code>categoryId</code>。<br>调用<code>dishService</code>的<code>list</code>方法，根据查询条件查询符合条件的所有菜品信息。<br>将查询结果封装到<code>Result</code>对象中，并返回该对象。其中<code>Result</code>对象的<code>success</code>方法用于表示查询成功，并将查询结果作为参数传入。</p><h4 id="SQL语句展示-43"><a href="#SQL语句展示-43" class="headerlink" title="SQL语句展示"></a>SQL语句展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT id,name,category_id,price,code,image,description,status,sort,create_time,update_time,create_user,update_user FROM dish WHERE (category_id = ?)</span><br></pre></td></tr></table></figure><hr><h1 id="项目完结"><a href="#项目完结" class="headerlink" title="项目完结"></a>项目完结</h1><hr><p>说实话，第一次写博客还没有什么经验，而且项目还有需要完善的地方，后续如果有时间会继续更改完善。</p>]]></content>
    
    
    <summary type="html">提瓦特外卖--好吃不贵</summary>
    
    
    
    
    <category term="Java后端" scheme="http://example.com/tags/Java%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>博客写作的必会技能--markdown</title>
    <link href="http://example.com/2024/04/18/Typora%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2024/04/18/Typora%E6%95%99%E7%A8%8B/</id>
    <published>2024-04-18T03:49:32.000Z</published>
    <updated>2024-05-07T01:21:00.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><hr><p>作为一个博客小白，我认为在正式开始创作的时候，系统的学习一下<code>markdown</code>软件之一的<code>Typora</code>是必要的。</p><p>以下是我结合相关资料整理出的一部分教程。</p><p>首先在开始之前，为了避免大脑突然宕机点了关闭按钮而忘记保存已经写好的文档，我强烈建议先打开自动保存功能！！！</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><hr><blockquote><p> 语法： #(一级标题) ##(二级标题) ###(三级标题)….</p><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#  这是一个一级标题</span></span><br><span class="line"><span class="section">## 这是一个二级标题</span></span><br></pre></td></tr></table></figure><p>快捷键：</p><ul><li>Ctrl+数字1~6 可以快速将选中的文本调成对应级别的标题</li><li>Ctrl+0 可以快速将选中的文本调成普通文本</li><li>Ctrl+加号/减号 可以对标题级别进行加减</li></ul></blockquote><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><hr><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是一个段落</span><br><span class="line">这是一个段落</span><br></pre></td></tr></table></figure><p>效果：</p><p>这是第一行</p><p>这是第二行</p><p>这是一个段落<br>这是一个段落</p><p>说明：</p><p>回车换行的距离大一些，具体可参考效果中的演示</p><p>想要段落的距离小一些，可以使用 shift+回车 组合键</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><blockquote><p>语法： —-或者<em>*</em>  +回车</p><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---或者***</span><br></pre></td></tr></table></figure><p>效果</p><hr></blockquote><h1 id="文字显示"><a href="#文字显示" class="headerlink" title="文字显示"></a>文字显示</h1><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><blockquote><p>语法：</p><ul><li>粗体：用一对双星号包裹</li><li>删除线：用一堆双飘号包裹 </li><li>下划线： 用一对u标签包裹</li><li>斜体：用一对单星号包裹</li><li>高亮：用一对双等号包裹</li></ul><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这是粗体**</span></span><br><span class="line">~~这是删除线~~</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>这是下划线<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"><span class="emphasis">*这是斜体*</span></span><br><span class="line">==这是高亮==</span><br></pre></td></tr></table></figure><p>效果：</p><p><strong>这是粗体</strong><br><del>这是删除线</del><br><u>这是下划线</u><br><em>这是斜体</em><br>==这是高亮==</p><p>说明：</p><p>高亮需要在偏好设置中开启，但是似乎在网页中并没有显示<br>如果需要输入“ * ”需要在其前面输入 / 来完成转义</p><p>快捷键：</p><ul><li>加粗 ： Ctrl+B</li><li>删除线：Shift+Alt+5</li><li>下划线： Ctrl+U</li><li>斜体： Ctrl+L</li></ul></blockquote><h2 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h2><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x^3^</span><br><span class="line">H~2~O</span><br></pre></td></tr></table></figure><p>效果：</p><p>x^3^<br>H~2~O</p></blockquote><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><hr><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*/-/+ +空格</span></span><br></pre></td></tr></table></figure><p>效果：</p><p>1.只有同一级别：</p><ul><li>联想</li><li>戴尔</li><li>惠普</li><li>华硕 </li></ul><p>2.子集类：</p><ul><li>华硕<ul><li>天选</li><li>ROG</li></ul></li><li>戴尔<ul><li>游侠</li><li>外星人</li></ul></li></ul><p>快捷键 ： Ctrl+Shift+]</p><p>说明：</p><p>可以连续按两次回车退出当前层级列表<br>也可以按Tab键进行下一个层级的编辑</p></blockquote><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数字+.+空格</span><br></pre></td></tr></table></figure><p>效果：</p><ol><li><p>第一个标题</p></li><li><p>第二个标题</p></li><li><p>第三个标题</p><p>子内容1</p><p>子内容2</p></li><li><p>第四个标题</p></li></ol><p>快捷键： Ctrl+Shift+[</p></blockquote><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [] 玩游戏</span><br><span class="line"><span class="bullet">-</span> [] 上修罗</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li>[x] 玩游戏</li><li>[ ] 上修罗 </li></ul></blockquote><h1 id="区块显示"><a href="#区块显示" class="headerlink" title="区块显示"></a>区块显示</h1><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;+空格</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>这是最外层区块</p><blockquote><p>这是内层区块</p></blockquote></blockquote></blockquote><h1 id="代码显示"><a href="#代码显示" class="headerlink" title="代码显示"></a>代码显示</h1><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`int a = 10`</span></span><br></pre></td></tr></table></figure><p>效果：<br><code>int a = 10</code></p><p>快捷键：Ctrl+Shift+`</p></blockquote><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><blockquote><p>效果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个代码块</span><br></pre></td></tr></table></figure><p>快捷键：Ctrl+Shift+K</p></blockquote><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://csmyc.github.io</span><br><span class="line">[<span class="string">我的博客</span>](<span class="link">https://csmyc.github.io</span>)</span><br></pre></td></tr></table></figure><p>效果：<br><a href="https://csmyc.github.io">https://csmyc.github.io</a><br><a href="https://csmyc.github.io">我的博客</a></p><p>快捷键：Ctrl+K</p></blockquote><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><blockquote><p>说明：对文本进行解释说明</p><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[^文本]</span><br><span class="line">[^文本]：解释说明</span><br></pre></td></tr></table></figure><p>效果：<br>idea<sup><a href="#fn_1" id="reffn_1">1</a></sup>是一个非常好用的IDE</p><p><sup><a href="#fn_1" id="reffn_1">1</a></sup>:IDEA 全称 IntelliJ IDEA，是<a href="https://baike.baidu.com/item/java/85979?fromModule=lemma_inlink">java</a><a href="https://baike.baidu.com/item/编程语言/9845131?fromModule=lemma_inlink">编程语言</a>的<a href="https://baike.baidu.com/item/集成开发环境/298524?fromModule=lemma_inlink">集成开发环境</a>。</p></blockquote><h1 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h1><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">不显示的文字</span>](<span class="link">图片路径 &quot;图片标题&quot;</span>)</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/images/top.png" alt="我的主页图片"></p></blockquote><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><blockquote><p>代码：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">| 1 | 2 | 3 |</span><br></pre></td></tr></table></figure><p>效果：</p><div class="table-container"><table><thead><tr><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table></div><p>快捷键 ： Ctrl+T</p></blockquote><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><blockquote><p>代码 ：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">graph LR</span></span><br><span class="line"><span class="code">A[方形]==&gt;B(圆角)</span></span><br><span class="line"><span class="code">B==&gt;C&#123;条件a&#125;</span></span><br><span class="line"><span class="code">B--&gt;|a=1|D[结果1]</span></span><br><span class="line"><span class="code">C--&gt;|a=2|E[结果2]</span></span><br><span class="line"><span class="code">F[横向流程图]</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p>说明：</p><p>hexo 默认不支持流程图，所以我就不在这里展示流程图的效果了，主要还是懒</p></blockquote><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
    
    
    <summary type="html">markdown基础教程</summary>
    
    
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
</feed>
